/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 60 generated on 2012-09-02 09:35:55.775203
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==60);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_LEFT6DF0 {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74;
x0=IKsin(j[2]);
x1=IKsin(j[3]);
x2=IKcos(j[2]);
x3=IKcos(j[3]);
x4=IKcos(j[6]);
x5=IKsin(j[5]);
x6=IKsin(j[4]);
x7=IKcos(j[4]);
x8=IKcos(j[1]);
x9=IKcos(j[5]);
x10=IKsin(j[6]);
x11=IKsin(j[1]);
x12=IKsin(j[0]);
x13=IKcos(j[0]);
x14=((IkReal(1.00000000000000))*(x5));
x15=((IkReal(1.00000000000000))*(x11));
x16=((IkReal(0.258820142606703))*(x10));
x17=((IkReal(1.00000000000000))*(x9));
x18=((IkReal(0.965925532213041))*(x9));
x19=((IkReal(0.258820142606703))*(x5));
x20=((IkReal(0.965925532213041))*(x5));
x21=((IkReal(0.258820142606703))*(x4));
x22=((IkReal(0.965925532213041))*(x4));
x23=((IkReal(1.00000000000000))*(x8));
x24=((IkReal(0.965925532213041))*(x10));
x25=((IkReal(0.258820142606703))*(x9));
x26=((IkReal(1.00000000000000))*(x6));
x27=((IkReal(1.00000000000000))*(x7));
x28=((x4)*(x6));
x29=((x7)*(x9));
x30=((x0)*(x1));
x31=((x11)*(x2));
x32=((x1)*(x2));
x33=((x2)*(x3));
x34=((x0)*(x3));
x35=((x15)*(x7));
x36=((IkReal(1.00000000000000))*(x33));
x37=((IkReal(0.0900000000000000))*(x30));
x38=((IkReal(0.0900000000000000))*(x33));
x39=((IkReal(1.00000000000000))*(x34));
x40=((x11)*(x34));
x41=((x23)*(x30));
x42=((x15)*(x30));
x43=((((IkReal(-1.00000000000000))*(x30)))+(x36));
x44=((x39)+(((IkReal(1.00000000000000))*(x32))));
x45=((IkReal(-1.00000000000000))*(x44));
x46=((((IkReal(0.0900000000000000))*(x34)))+(((IkReal(0.0900000000000000))*(x32))));
x47=((((IkReal(0.965925532213041))*(x34)))+(((IkReal(0.965925532213041))*(x32))));
x48=((((IkReal(0.258820142606703))*(x34)))+(((IkReal(0.258820142606703))*(x32))));
x49=((((IkReal(-1.00000000000000))*(x42)))+(((x3)*(x31))));
x50=((x45)*(x6));
x51=((x42)+(((IkReal(-1.00000000000000))*(x15)*(x33))));
x52=((x41)+(((IkReal(-1.00000000000000))*(x23)*(x33))));
x53=((x15)*(((x32)+(x34))));
x54=((x23)*(((x32)+(x34))));
x55=((((IkReal(0.0900000000000000))*(x40)))+(((IkReal(0.0900000000000000))*(x1)*(x31))));
x56=((x49)*(x7));
x57=((x52)*(x6));
x58=((((x27)*(((((IkReal(-1.00000000000000))*(x33)*(x8)))+(x41)))))+(((x15)*(x6))));
x59=((((x7)*(x8)))+(((x51)*(x6))));
x60=((((IkReal(-1.00000000000000))*(x27)*(x49)))+(((IkReal(-1.00000000000000))*(x23)*(x6))));
x61=((((IkReal(-0.0900000000000000))*(x6)*(x8)))+(((IkReal(-0.0900000000000000))*(x56))));
x62=((((IkReal(-1.00000000000000))*(x26)*(x51)))+(((IkReal(-1.00000000000000))*(x23)*(x7))));
x63=((((x17)*(((((IkReal(-1.00000000000000))*(x30)))+(x36)))))+(((IkReal(-1.00000000000000))*(x14)*(x44)*(x7))));
x64=((((x19)*(x43)))+(((x25)*(x44)*(x7))));
x65=((((x5)*(x54)))+(((x58)*(x9))));
x66=((((x17)*(x54)))+(((IkReal(-1.00000000000000))*(x14)*(x58))));
x67=((((x17)*(x53)))+(((IkReal(-1.00000000000000))*(x14)*(x60))));
x68=((((x20)*(x53)))+(((x18)*(x60))));
x69=((((x16)*(x50)))+(((x21)*(x63))));
x70=((((x16)*(x63)))+(((x21)*(x44)*(x6))));
x71=((((x10)*(x66)))+(((x4)*(((((IkReal(-1.00000000000000))*(x35)))+(x57))))));
x72=((((x10)*(((((IkReal(-1.00000000000000))*(x26)*(x52)))+(x35)))))+(((x4)*(x66))));
x73=((((x24)*(x67)))+(((x22)*(x59))));
x74=((((x24)*(x62)))+(((x22)*(x67))));
IkReal x75=((IkReal(1.00000000000000))*(x12));
eerot[0]=((((IkReal(-1.00000000000000))*(x74)*(x75)))+(((x13)*(x72)))+(((IkReal(-1.00000000000000))*(x69)*(x75))));
IkReal x76=((IkReal(1.00000000000000))*(x12));
eerot[1]=((((IkReal(-1.00000000000000))*(x70)*(x76)))+(((IkReal(-1.00000000000000))*(x73)*(x76)))+(((x13)*(x71))));
IkReal x77=((IkReal(1.00000000000000))*(x12));
eerot[2]=((((x13)*(x65)))+(((IkReal(-1.00000000000000))*(x68)*(x77)))+(((IkReal(-1.00000000000000))*(x64)*(x77))));
eetrans[0]=((((((((((((IkReal(-0.965925532213041))*(((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0900000000000000))*(IKcos(j[2]))*(IKcos(j[3]))*(IKsin(j[1]))))))*(IKcos(j[4]))))+(((IkReal(0.0869332978991737))*(IKcos(j[1]))*(IKsin(j[4]))))))*(IKsin(j[5]))))+(((IkReal(-0.0917629255602389))*(IKcos(j[1]))))+(((IkReal(0.226992500070065))*(IKcos(j[3]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(-0.0869332978991737))*(IKcos(j[3]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.0869332978991737))*(IKcos(j[2]))*(IKsin(j[1]))*(IKsin(j[3]))))))*(IKsin(j[5]))))+(((IkReal(-0.0289777659663912))*(IKsin(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((IkReal(-0.965925532213041))*(((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0900000000000000))*(IKcos(j[2]))*(IKcos(j[3]))*(IKsin(j[1]))))))*(IKcos(j[4]))))+(((IkReal(0.0869332978991737))*(IKcos(j[1]))*(IKsin(j[4]))))))*(IKcos(j[5]))))+(((IkReal(0.0289777659663912))*(IKcos(j[2]))*(IKcos(j[3]))*(IKsin(j[1]))))+(((IkReal(0.241481383053260))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(0.0869332978991737))*(IKcos(j[3]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(0.0869332978991737))*(IKcos(j[2]))*(IKsin(j[1]))*(IKsin(j[3]))))))*(IKcos(j[5]))))+(((IkReal(0.226992500070065))*(IKcos(j[2]))*(IKsin(j[1]))*(IKsin(j[3]))))))*(IKsin(j[0]))))+(((((((IkReal(-0.0950000000000000))*(IKsin(j[1]))))+(((IkReal(-0.250000000000000))*(IKcos(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.0300000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKcos(j[3]))))+(((((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[4]))))+(((((((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKcos(j[3]))))+(((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))))))*(IKcos(j[5]))))+(((IkReal(-0.235000000000000))*(IKcos(j[1]))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(-0.235000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[3]))))+(((((((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[3]))*(IKsin(j[2]))))))*(IKcos(j[5]))))+(((IkReal(0.0300000000000000))*(IKcos(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[4]))))+(((((((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKcos(j[3]))))+(((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5]))))+(((((((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[3]))))))*(IKsin(j[5]))))))*(IKcos(j[0]))))+(((IkReal(-0.145000000000000))*(IKsin(j[0]))))+(((((((IkReal(-0.00776460427820108))*(IKcos(j[2]))*(IKsin(j[3]))))+(((((((IkReal(-0.0232938128346032))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(-0.0232938128346032))*(IKcos(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))*(IKcos(j[5]))))+(((((((IkReal(0.0232938128346032))*(IKcos(j[2]))*(IKcos(j[3]))))+(((IkReal(-0.0232938128346032))*(IKsin(j[2]))*(IKsin(j[3]))))))*(IKcos(j[5]))))+(((((((IkReal(-0.0232938128346032))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(-0.0232938128346032))*(IKcos(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))*(IKsin(j[5]))))+(((IkReal(0.0608227335125751))*(IKcos(j[2]))*(IKcos(j[3]))))+(((IkReal(-0.0608227335125751))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((IkReal(0.0232938128346032))*(IKsin(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0232938128346032))*(IKcos(j[2]))*(IKcos(j[3]))))))*(IKsin(j[5]))))+(((IkReal(0.0647050356516757))*(IKcos(j[2]))))+(((IkReal(-0.00776460427820108))*(IKcos(j[3]))*(IKsin(j[2]))))))*(IKsin(j[0])))));
eerot[3]=((((x13)*(x69)))+(((x12)*(x72)))+(((x13)*(x74))));
eerot[4]=((((x12)*(x71)))+(((x13)*(x70)))+(((x13)*(x73))));
eerot[5]=((((x12)*(x65)))+(((x13)*(x64)))+(((x13)*(x68))));
eetrans[1]=((((((((IkReal(-0.0289777659663912))*(IKcos(j[2]))*(IKcos(j[3]))*(IKsin(j[1]))))+(((IkReal(0.0917629255602389))*(IKcos(j[1]))))+(((((((IkReal(-0.0869332978991737))*(IKcos(j[3]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.0869332978991737))*(IKcos(j[2]))*(IKsin(j[1]))*(IKsin(j[3]))))))*(IKcos(j[5]))))+(((IkReal(0.0289777659663912))*(IKsin(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((IkReal(0.965925532213041))*(((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0900000000000000))*(IKcos(j[2]))*(IKcos(j[3]))*(IKsin(j[1]))))))*(IKcos(j[4]))))+(((IkReal(-0.0869332978991737))*(IKcos(j[1]))*(IKsin(j[4]))))))*(IKcos(j[5]))))+(((((((IkReal(0.965925532213041))*(((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0900000000000000))*(IKcos(j[2]))*(IKcos(j[3]))*(IKsin(j[1]))))))*(IKcos(j[4]))))+(((IkReal(-0.0869332978991737))*(IKcos(j[1]))*(IKsin(j[4]))))))*(IKsin(j[5]))))+(((IkReal(-0.241481383053260))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.226992500070065))*(IKcos(j[2]))*(IKsin(j[1]))*(IKsin(j[3]))))+(((IkReal(-0.226992500070065))*(IKcos(j[3]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((((((IkReal(0.0869332978991737))*(IKcos(j[3]))*(IKsin(j[1]))*(IKsin(j[2]))))+(((IkReal(0.0869332978991737))*(IKcos(j[2]))*(IKsin(j[1]))*(IKsin(j[3]))))))*(IKsin(j[5]))))))*(IKcos(j[0]))))+(((((((IkReal(0.00776460427820108))*(IKcos(j[3]))*(IKsin(j[2]))))+(((((((IkReal(0.0232938128346032))*(IKcos(j[2]))*(IKcos(j[3]))))+(((IkReal(-0.0232938128346032))*(IKsin(j[2]))*(IKsin(j[3]))))))*(IKsin(j[5]))))+(((IkReal(-0.0608227335125751))*(IKcos(j[2]))*(IKcos(j[3]))))+(((((((IkReal(0.0232938128346032))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(0.0232938128346032))*(IKcos(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))*(IKcos(j[5]))))+(((IkReal(0.0608227335125751))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((IkReal(0.0232938128346032))*(IKsin(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0232938128346032))*(IKcos(j[2]))*(IKcos(j[3]))))))*(IKcos(j[5]))))+(((((((IkReal(0.0232938128346032))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(0.0232938128346032))*(IKcos(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))*(IKsin(j[5]))))+(((IkReal(-0.0647050356516757))*(IKcos(j[2]))))+(((IkReal(0.00776460427820108))*(IKcos(j[2]))*(IKsin(j[3]))))))*(IKcos(j[0]))))+(((IkReal(0.145000000000000))*(IKcos(j[0]))))+(((((((IkReal(-0.0950000000000000))*(IKsin(j[1]))))+(((IkReal(-0.250000000000000))*(IKcos(j[1]))*(IKsin(j[2]))))+(((IkReal(-0.0300000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKcos(j[3]))))+(((((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[4]))))+(((((((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKcos(j[3]))))+(((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))))))*(IKcos(j[5]))))+(((IkReal(-0.235000000000000))*(IKcos(j[1]))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(-0.235000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[3]))))+(((((((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[3]))))+(((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[3]))*(IKsin(j[2]))))))*(IKcos(j[5]))))+(((IkReal(0.0300000000000000))*(IKcos(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))+(((((((IkReal(0.0900000000000000))*(IKsin(j[1]))*(IKsin(j[4]))))+(((((((IkReal(-0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKcos(j[3]))))+(((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKsin(j[2]))*(IKsin(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5]))))+(((((((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[3]))*(IKsin(j[2]))))+(((IkReal(0.0900000000000000))*(IKcos(j[1]))*(IKcos(j[2]))*(IKsin(j[3]))))))*(IKsin(j[5]))))))*(IKsin(j[0])))));
eerot[6]=((((x24)*(x50)))+(((IkReal(-1.00000000000000))*(x21)*(x67)))+(((IkReal(-1.00000000000000))*(x16)*(x62)))+(((x22)*(x63))));
eerot[7]=((((x22)*(x44)*(x6)))+(((x24)*(x63)))+(((IkReal(-1.00000000000000))*(x16)*(x67)))+(((IkReal(-1.00000000000000))*(x21)*(x59))));
eerot[8]=((((x20)*(x43)))+(((IkReal(-1.00000000000000))*(x25)*(x60)))+(((x18)*(x44)*(x7)))+(((IkReal(-1.00000000000000))*(x19)*(x53))));
IkReal x78=((IkReal(1.00000000000000))*(x19));
IkReal x79=((x46)*(x7));
eetrans[2]=((IkReal(0.370296000000000))+(((IkReal(0.0608227335125751))*(x40)))+(((IkReal(-1.00000000000000))*(x55)*(x78)))+(((IkReal(-1.00000000000000))*(x25)*(x61)))+(((IkReal(0.226992500070065))*(x30)))+(((x18)*(((((IkReal(-1.00000000000000))*(x38)))+(x37)))))+(((IkReal(-0.0245879135476367))*(x8)))+(((IkReal(-0.226992500070065))*(x33)))+(((x18)*(x79)))+(((x25)*(x55)))+(((x20)*(x79)))+(((IkReal(-0.241481383053260))*(x2)))+(((IkReal(0.0608227335125751))*(x1)*(x31)))+(((IkReal(-1.00000000000000))*(x61)*(x78)))+(((IkReal(0.0289777659663912))*(x34)))+(((IkReal(0.0289777659663912))*(x32)))+(((IkReal(0.00776460427820108))*(x3)*(x31)))+(((IkReal(-0.00776460427820108))*(x11)*(x30)))+(((IkReal(0.0647050356516757))*(x0)*(x11)))+(((x20)*(((((IkReal(-1.00000000000000))*(x37)))+(x38))))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {0}; return freeparams; }
IKFAST_API int GetNumJoints() { return 7; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j13,cj13,sj13,htj13,j14,cj14,sj14,htj14,j15,cj15,sj15,htj15,j16,cj16,sj16,htj16,j17,cj17,sj17,htj17,j18,cj18,sj18,htj18,j0,cj0,sj0,htj0,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij13[2], _nj13,_ij14[2], _nj14,_ij15[2], _nj15,_ij16[2], _nj16,_ij17[2], _nj17,_ij18[2], _nj18,_ij0[2], _nj0;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j13=numeric_limits<IkReal>::quiet_NaN(); _ij13[0] = -1; _ij13[1] = -1; _nj13 = -1; j14=numeric_limits<IkReal>::quiet_NaN(); _ij14[0] = -1; _ij14[1] = -1; _nj14 = -1; j15=numeric_limits<IkReal>::quiet_NaN(); _ij15[0] = -1; _ij15[1] = -1; _nj15 = -1; j16=numeric_limits<IkReal>::quiet_NaN(); _ij16[0] = -1; _ij16[1] = -1; _nj16 = -1; j17=numeric_limits<IkReal>::quiet_NaN(); _ij17[0] = -1; _ij17[1] = -1; _nj17 = -1; j18=numeric_limits<IkReal>::quiet_NaN(); _ij18[0] = -1; _ij18[1] = -1; _nj18 = -1;  _ij0[0] = -1; _ij0[1] = -1; _nj0 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j0=pfree[0]; cj0=cos(pfree[0]); sj0=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((((IkReal(-1.00000000000000))*(r10)*(IKsin(j0))))+(((IkReal(-1.00000000000000))*(r00)*(IKcos(j0)))));
new_r01=((((r01)*(IKcos(j0))))+(((r11)*(IKsin(j0)))));
new_r02=((((IkReal(-1.00000000000000))*(r12)*(IKsin(j0))))+(((IkReal(-1.00000000000000))*(r02)*(IKcos(j0)))));
IkReal x80=IKcos(j0);
IkReal x81=IKsin(j0);
new_px=((((IkReal(-0.0900000000000000))*(r02)*(x80)))+(((py)*(x81)))+(((px)*(x80)))+(((IkReal(-0.0900000000000000))*(r12)*(x81))));
new_r10=((((IkReal(0.965925532213041))*(r00)*(IKsin(j0))))+(((IkReal(-0.965925532213041))*(r10)*(IKcos(j0))))+(((IkReal(0.258820142606703))*(r20))));
new_r11=((((IkReal(-0.258820142606703))*(r21)))+(((IkReal(0.965925532213041))*(r11)*(IKcos(j0))))+(((IkReal(-0.965925532213041))*(r01)*(IKsin(j0)))));
new_r12=((((IkReal(0.965925532213041))*(r02)*(IKsin(j0))))+(((IkReal(-0.965925532213041))*(r12)*(IKcos(j0))))+(((IkReal(0.258820142606703))*(r22))));
IkReal x82=IKsin(j0);
IkReal x83=IKcos(j0);
new_py=((IkReal(-0.0442191386441994))+(((IkReal(-0.258820142606703))*(pz)))+(((IkReal(0.0232938128346032))*(r22)))+(((IkReal(-0.965925532213041))*(px)*(x82)))+(((IkReal(-0.0869332978991737))*(r12)*(x83)))+(((IkReal(0.965925532213041))*(py)*(x83)))+(((IkReal(0.0869332978991737))*(r02)*(x82))));
new_r20=((((IkReal(-0.965925532213041))*(r20)))+(((IkReal(0.258820142606703))*(r00)*(IKsin(j0))))+(((IkReal(-0.258820142606703))*(r10)*(IKcos(j0)))));
new_r21=((((IkReal(0.258820142606703))*(r11)*(IKcos(j0))))+(((IkReal(-0.258820142606703))*(r01)*(IKsin(j0))))+(((IkReal(0.965925532213041))*(r21))));
new_r22=((((IkReal(-0.965925532213041))*(r22)))+(((IkReal(-0.258820142606703))*(r12)*(IKcos(j0))))+(((IkReal(0.258820142606703))*(r02)*(IKsin(j0)))));
IkReal x84=IKcos(j0);
IkReal x85=IKsin(j0);
new_pz=((IkReal(-0.395207281554332))+(((IkReal(0.258820142606703))*(py)*(x84)))+(((IkReal(-0.258820142606703))*(px)*(x85)))+(((IkReal(0.0232938128346032))*(r02)*(x85)))+(((IkReal(-0.0232938128346032))*(r12)*(x84)))+(((IkReal(0.965925532213041))*(pz)))+(((IkReal(-0.0869332978991737))*(r22))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x86=((IkReal(0.650000000000000))*(npx));
IkReal x87=((IkReal(0.0600000000000000))*(npz));
IkReal x88=((IkReal(1.00000000000000))*(pp));
IkReal x89=((IkReal(0.0600000000000000))*(npy));
IkReal x90=((IkReal(0.0950000000000000))*(r22));
IkReal x91=((IkReal(0.120000000000000))*(npx));
IkReal x92=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x93=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x94=((IkReal(0.0950000000000000))*(r21));
IkReal x95=((IkReal(0.940000000000000))*(npz));
IkReal x96=((IkReal(0.190000000000000))*(r20));
IkReal x97=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x98=((IkReal(0.180000000000000))*(r21));
IkReal x99=((IkReal(0.360000000000000))*(r20));
IkReal x100=((IkReal(0.380000000000000))*(r21));
IkReal x101=((IkReal(0.290000000000000))*(npx));
IkReal x102=((IkReal(0.00570000000000000))+(((IkReal(-1.00000000000000))*(x89))));
IkReal x103=((rxp0_2)+(((IkReal(-1.00000000000000))*(x90))));
IkReal x104=((IkReal(0.580000000000000))*(npy));
IkReal x105=((IkReal(-0.00570000000000000))+(((IkReal(-1.00000000000000))*(x89))));
IkReal x106=((IkReal(-1.30000000000000))*(npy));
IkReal x107=((IkReal(-0.0950000000000000))*(r21));
IkReal x108=((IkReal(-0.190000000000000))*(r20));
IkReal x109=((IkReal(0.00570000000000000))+(x89));
IkReal x110=((IkReal(-0.00570000000000000))+(x89));
IkReal x111=((rxp0_2)+(x90));
IkReal x112=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x113=((x90)+(((IkReal(-1.00000000000000))*(x92))));
IkReal x114=((IkReal(-0.0350000000000000))+(x86));
IkReal x115=((IkReal(0.0496000000000000))+(x87));
IkReal x116=((((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x92))));
IkReal x117=((x88)+(x87));
IkReal x118=((x91)+(x95));
IkReal x119=((x98)+(x97));
op[0]=((((IkReal(-1.00000000000000))*(x117)))+(x114));
op[1]=x109;
op[2]=x106;
op[3]=x91;
op[4]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x117)))+(((IkReal(-1.00000000000000))*(x86))));
op[5]=x102;
op[6]=x113;
op[7]=x107;
op[8]=x93;
op[9]=x108;
op[10]=x111;
op[11]=x94;
op[12]=x110;
op[13]=((x114)+(x87)+(((IkReal(-1.00000000000000))*(x88))));
op[14]=x91;
op[15]=x106;
op[16]=x105;
op[17]=((IkReal(-0.0350000000000000))+(x87)+(((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x86))));
op[18]=x107;
op[19]=x116;
op[20]=x108;
op[21]=x93;
op[22]=x94;
op[23]=x103;
op[24]=((IkReal(-0.0108000000000000))+(x118));
op[25]=IkReal(0);
op[26]=((IkReal(-0.240000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((IkReal(-0.0108000000000000))+(x95)+(((IkReal(-1.00000000000000))*(x91))));
op[29]=IkReal(0);
op[30]=((x98)+(((IkReal(-1.00000000000000))*(x96)))+(((IkReal(-1.00000000000000))*(x97))));
op[31]=IkReal(0);
op[32]=((x100)+(x99));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x119)))+(x96));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((IkReal(0.0108000000000000))+(x95)+(((IkReal(-1.00000000000000))*(x91))));
op[38]=IkReal(0);
op[39]=((IkReal(0.240000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((IkReal(0.0108000000000000))+(x118));
op[42]=IkReal(0);
op[43]=((x98)+(x96)+(((IkReal(-1.00000000000000))*(x97))));
op[44]=IkReal(0);
op[45]=((((IkReal(-1.00000000000000))*(x100)))+(x99));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x119)))+(((IkReal(-1.00000000000000))*(x96))));
op[48]=((((IkReal(-1.00000000000000))*(x101)))+(x115)+(((IkReal(-1.00000000000000))*(x88))));
op[49]=x109;
op[50]=x104;
op[51]=x91;
op[52]=((x115)+(x101)+(((IkReal(-1.00000000000000))*(x88))));
op[53]=x102;
op[54]=x103;
op[55]=x107;
op[56]=x112;
op[57]=x108;
op[58]=x116;
op[59]=x94;
op[60]=x110;
op[61]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x101)))+(((IkReal(-1.00000000000000))*(x117))));
op[62]=x91;
op[63]=x104;
op[64]=x105;
op[65]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x117)))+(x101));
op[66]=x107;
op[67]=x111;
op[68]=x108;
op[69]=x112;
op[70]=x94;
op[71]=x113;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j17array[16], cj17array[16], sj17array[16], j18array[16], cj18array[16], sj18array[16], j16array[16], cj16array[16], sj16array[16];
int numsolutions = 0;
for(int ij17 = 0; ij17 < numroots; ij17 += 3)
{
IkReal htj17 = zeror[ij17+0], htj18 = zeror[ij17+1], htj16 = zeror[ij17+2];
j17array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj17)));
j18array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj18)));
j16array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj16)));
IkReal x120=(htj17)*(htj17);
IkReal x121=(htj18)*(htj18);
IkReal x122=(htj16)*(htj16);
cj17array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x120))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x120)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x120))))));
cj18array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x121))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x121)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x121))))));
cj16array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x122))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x122)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x122))))));
sj17array[numsolutions]=((IkReal(2.00000000000000))*(htj17)*(((IKabs(((IkReal(1.00000000000000))+((htj17)*(htj17)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj17)*(htj17))))):(IkReal)1.0e30)));
sj18array[numsolutions]=((IkReal(2.00000000000000))*(htj18)*(((IKabs(((IkReal(1.00000000000000))+((htj18)*(htj18)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj18)*(htj18))))):(IkReal)1.0e30)));
sj16array[numsolutions]=((IkReal(2.00000000000000))*(htj16)*(((IKabs(((IkReal(1.00000000000000))+((htj16)*(htj16)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj16)*(htj16))))):(IkReal)1.0e30)));
if( j17array[numsolutions] > IKPI )
{
    j17array[numsolutions]-=IK2PI;
}
else if( j17array[numsolutions] < -IKPI )
{
    j17array[numsolutions]+=IK2PI;
}
if( j18array[numsolutions] > IKPI )
{
    j18array[numsolutions]-=IK2PI;
}
else if( j18array[numsolutions] < -IKPI )
{
    j18array[numsolutions]+=IK2PI;
}
if( j16array[numsolutions] > IKPI )
{
    j16array[numsolutions]-=IK2PI;
}
else if( j16array[numsolutions] < -IKPI )
{
    j16array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j17valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj17 = 16;
_nj18 = 1;
_nj16 = 1;
for(int ij17 = 0; ij17 < numsolutions; ++ij17)
    {
if( !j17valid[ij17] )
{
    continue;
}
_ij17[0] = ij17; _ij17[1] = -1;
_ij18[0] = 0; _ij18[1] = -1;
_ij16[0] = 0; _ij16[1] = -1;
for(int iij17 = ij17+1; iij17 < numsolutions; ++iij17)
{
if( !j17valid[iij17] ) { continue; }
if( IKabs(cj17array[ij17]-cj17array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(sj17array[ij17]-sj17array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(cj18array[ij17]-cj18array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(sj18array[ij17]-sj18array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(cj16array[ij17]-cj16array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(sj16array[ij17]-sj16array[iij17]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j17valid[iij17]=false; _ij17[1] = iij17; _ij18[1] = 0; _ij16[1] = 0;  break; 
}
}
    j17 = j17array[ij17]; cj17 = cj17array[ij17]; sj17 = sj17array[ij17];

    j18 = j18array[ij17]; cj18 = cj18array[ij17]; sj18 = sj18array[ij17];

    j16 = j16array[ij17]; cj16 = cj16array[ij17]; sj16 = sj16array[ij17];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x123=(sj18)*(sj18);
IkReal x124=(cj18)*(cj18);
IkReal x125=((r00)*(r11));
IkReal x126=((r02)*(sj17));
IkReal x127=((cj17)*(x123));
IkReal x128=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x129=((cj17)*(x124));
IkReal x130=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(cj18)*(r01)*(x130)))+(((IkReal(-1.00000000000000))*(x128)*(x129)))+(((x125)*(x127)))+(((x125)*(x129)))+(((cj18)*(r11)*(x126)))+(((r10)*(sj18)*(x126)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x130)))+(((IkReal(-1.00000000000000))*(x127)*(x128)))));
IkReal x131=(sj18)*(sj18);
IkReal x132=(cj18)*(cj18);
IkReal x133=((r00)*(r11));
IkReal x134=((r02)*(sj17));
IkReal x135=((cj17)*(x131));
IkReal x136=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x137=((cj17)*(x132));
IkReal x138=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x135)*(x136)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x138)))+(((IkReal(-1.00000000000000))*(x136)*(x137)))+(((x133)*(x137)))+(((x133)*(x135)))+(((r10)*(sj18)*(x134)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x138)))+(((cj18)*(r11)*(x134))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
IkReal x139=((sj17)*(sj18));
IkReal x140=((IkReal(1.00000000000000))*(cj18)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x139)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x140))));
evalcond[2]=((IkReal(-0.0950000000000000))+(((IkReal(0.0900000000000000))*(sj17)))+(((npy)*(x139)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(x140))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x141=((IkReal(4.00000000000000))*(npx));
IkReal x142=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj18)*(x141)))+(((IkReal(-1.00000000000000))*(cj18)*(x142))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x142)))+(((cj17)*(cj18)*(x141))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj18)*(x141)))+(((IkReal(-1.00000000000000))*(cj18)*(x142)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x142)))+(((cj17)*(cj18)*(x141)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj18)*(x141)))+(((IkReal(-1.00000000000000))*(cj18)*(x142)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x142)))+(((cj17)*(cj18)*(x141)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
gconst24=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x143=(sj18)*(sj18);
IkReal x144=(cj18)*(cj18);
IkReal x145=((cj17)*(r02));
IkReal x146=((r01)*(r10)*(sj17));
IkReal x147=((IkReal(1.00000000000000))*(cj17)*(r12));
IkReal x148=((IkReal(1.00000000000000))*(r00)*(r11)*(sj17));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(x143)*(x148)))+(((r10)*(sj18)*(x145)))+(((x144)*(x146)))+(((IkReal(-1.00000000000000))*(x144)*(x148)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x147)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x147)))+(((cj18)*(r11)*(x145)))+(((x143)*(x146)))));
IkReal x149=(sj18)*(sj18);
IkReal x150=(cj18)*(cj18);
IkReal x151=((cj17)*(r02));
IkReal x152=((r01)*(r10)*(sj17));
IkReal x153=((IkReal(1.00000000000000))*(cj17)*(r12));
IkReal x154=x148;
dummyeval[0]=((((x149)*(x152)))+(((r10)*(sj18)*(x151)))+(((x150)*(x152)))+(((IkReal(-1.00000000000000))*(x150)*(x154)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x153)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x153)))+(((cj18)*(r11)*(x151)))+(((IkReal(-1.00000000000000))*(x149)*(x154))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x155=((IkReal(1.00000000000000))*(cj18));
IkReal x156=((IkReal(1.00000000000000))*(sj18));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(x156)))+(((IkReal(-1.00000000000000))*(r11)*(x155))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r00)*(x156)))+(((IkReal(-1.00000000000000))*(r01)*(x155))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(x156)))+(((IkReal(-1.00000000000000))*(r11)*(x155)))))), ((gconst23)*(((((IkReal(-1.00000000000000))*(r00)*(x156)))+(((IkReal(-1.00000000000000))*(r01)*(x155)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x157=IKsin(j13);
IkReal x158=IKcos(j13);
IkReal x159=((IkReal(1.00000000000000))*(sj17));
IkReal x160=((r11)*(sj18));
IkReal x161=((r10)*(sj17));
IkReal x162=((IkReal(1.00000000000000))*(cj17));
IkReal x163=((cj18)*(x157));
IkReal x164=((cj18)*(x158));
IkReal x165=((r02)*(x157));
IkReal x166=((sj18)*(x158));
IkReal x167=((x158)*(x162));
IkReal x168=((r01)*(sj18)*(x157));
evalcond[0]=((((r01)*(x163)))+(((IkReal(-1.00000000000000))*(r10)*(x166)))+(((r00)*(sj18)*(x157)))+(((IkReal(-1.00000000000000))*(r11)*(x164))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x159)*(x165)))+(((IkReal(-1.00000000000000))*(x160)*(x167)))+(((cj17)*(x168)))+(((cj17)*(r10)*(x164)))+(((r12)*(sj17)*(x158)))+(((IkReal(-1.00000000000000))*(r00)*(x162)*(x163))));
evalcond[2]=((IkReal(1.00000000000000))+(((x161)*(x164)))+(((IkReal(-1.00000000000000))*(r12)*(x167)))+(((IkReal(-1.00000000000000))*(x158)*(x159)*(x160)))+(((cj17)*(x165)))+(((IkReal(-1.00000000000000))*(r00)*(x159)*(x163)))+(((sj17)*(x168))));
evalcond[3]=((((x161)*(x163)))+(((IkReal(-1.00000000000000))*(r02)*(x167)))+(((IkReal(-1.00000000000000))*(x157)*(x159)*(x160)))+(((IkReal(-1.00000000000000))*(r12)*(x157)*(x162)))+(((IkReal(-1.00000000000000))*(r01)*(x159)*(x166)))+(((r00)*(sj17)*(x164))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst25;
gconst25=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x169=((cj15)*(r21));
IkReal x170=((cj17)*(sj18));
IkReal x171=((r20)*(sj18));
IkReal x172=((cj18)*(sj15));
IkReal x173=((cj17)*(r20));
IkReal x174=((IkReal(1.00000000000000))*(cj15));
IkReal x175=((r22)*(sj17));
if( IKabs(((gconst25)*(((((sj15)*(x175)))+(((x172)*(x173)))+(((IkReal(-1.00000000000000))*(r21)*(sj15)*(x170)))+(((cj18)*(x169)))+(((cj15)*(x171))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((IkReal(-1.00000000000000))*(x174)*(x175)))+(((sj15)*(x171)))+(((IkReal(-1.00000000000000))*(cj18)*(x173)*(x174)))+(((x169)*(x170)))+(((r21)*(x172))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst25)*(((((sj15)*(x175)))+(((x172)*(x173)))+(((IkReal(-1.00000000000000))*(r21)*(sj15)*(x170)))+(((cj18)*(x169)))+(((cj15)*(x171)))))), ((gconst25)*(((((IkReal(-1.00000000000000))*(x174)*(x175)))+(((sj15)*(x171)))+(((IkReal(-1.00000000000000))*(cj18)*(x173)*(x174)))+(((x169)*(x170)))+(((r21)*(x172)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x176=IKsin(j14);
IkReal x177=IKcos(j14);
IkReal x178=((IkReal(1.00000000000000))*(cj15));
IkReal x179=((IkReal(1.00000000000000))*(sj13));
IkReal x180=((cj17)*(cj18));
IkReal x181=((cj17)*(sj18));
IkReal x182=((cj13)*(r00));
IkReal x183=((sj15)*(x176));
IkReal x184=((IkReal(1.00000000000000))*(cj13)*(r01));
IkReal x185=((sj15)*(x177));
IkReal x186=((x177)*(x178));
evalcond[0]=((((r20)*(sj18)))+(((IkReal(-1.00000000000000))*(x185)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x176)*(x178))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x180)))+(((IkReal(-1.00000000000000))*(x186)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x183)+(((r21)*(x181))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj18)*(x179)))+(((IkReal(-1.00000000000000))*(x186)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x179)))+(x183)+(((IkReal(-1.00000000000000))*(sj18)*(x182)))+(((IkReal(-1.00000000000000))*(cj18)*(x184))));
evalcond[3]=((((x180)*(x182)))+(((r12)*(sj13)*(sj17)))+(x185)+(((r10)*(sj13)*(x180)))+(((cj13)*(r02)*(sj17)))+(((cj15)*(x176)))+(((IkReal(-1.00000000000000))*(x181)*(x184)))+(((IkReal(-1.00000000000000))*(r11)*(x179)*(x181))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x187=((cj15)*(r21));
IkReal x188=((cj17)*(sj18));
IkReal x189=((r20)*(sj18));
IkReal x190=((cj18)*(sj15));
IkReal x191=((cj17)*(r20));
IkReal x192=((IkReal(1.00000000000000))*(cj15));
IkReal x193=((r22)*(sj17));
if( IKabs(((gconst24)*(((((sj15)*(x193)))+(((cj18)*(x187)))+(((x190)*(x191)))+(((IkReal(-1.00000000000000))*(r21)*(sj15)*(x188)))+(((cj15)*(x189))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(x192)*(x193)))+(((x187)*(x188)))+(((r21)*(x190)))+(((IkReal(-1.00000000000000))*(cj18)*(x191)*(x192)))+(((sj15)*(x189))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst24)*(((((sj15)*(x193)))+(((cj18)*(x187)))+(((x190)*(x191)))+(((IkReal(-1.00000000000000))*(r21)*(sj15)*(x188)))+(((cj15)*(x189)))))), ((gconst24)*(((((IkReal(-1.00000000000000))*(x192)*(x193)))+(((x187)*(x188)))+(((r21)*(x190)))+(((IkReal(-1.00000000000000))*(cj18)*(x191)*(x192)))+(((sj15)*(x189)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x194=IKsin(j14);
IkReal x195=IKcos(j14);
IkReal x196=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj15)*(x195)))+(((IkReal(-1.00000000000000))*(x194)*(x196)))+(((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[1]=((((sj15)*(x194)))+(((IkReal(-1.00000000000000))*(x195)*(x196)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(r20)))+(((cj17)*(r21)*(sj18))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x197=(sj18)*(sj18);
IkReal x198=(cj18)*(cj18);
IkReal x199=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x200=((IkReal(1.00000000000000))*(x197));
IkReal x201=((IkReal(1.00000000000000))*(x198));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(x201)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x201)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x200)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x199)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x199)))+(((IkReal(-1.00000000000000))*(x200)*((r10)*(r10))))));
IkReal x202=(sj18)*(sj18);
IkReal x203=(cj18)*(cj18);
IkReal x204=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x205=((IkReal(1.00000000000000))*(x202));
IkReal x206=((IkReal(1.00000000000000))*(x203));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x204)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x204)))+(((IkReal(-1.00000000000000))*(x205)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x205)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x206)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x206)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x207=((cj18)*(r01));
IkReal x208=((cj14)*(cj15));
IkReal x209=((r00)*(sj18));
IkReal x210=((cj18)*(r11));
IkReal x211=((r10)*(sj18));
IkReal x212=((IkReal(1.00000000000000))*(sj14)*(sj15));
if( IKabs(((gconst26)*(((((x208)*(x211)))+(((x208)*(x210)))+(((IkReal(-1.00000000000000))*(x210)*(x212)))+(((IkReal(-1.00000000000000))*(x211)*(x212))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(x207)*(x212)))+(((x208)*(x209)))+(((IkReal(-1.00000000000000))*(x209)*(x212)))+(((x207)*(x208))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst26)*(((((x208)*(x211)))+(((x208)*(x210)))+(((IkReal(-1.00000000000000))*(x210)*(x212)))+(((IkReal(-1.00000000000000))*(x211)*(x212)))))), ((gconst26)*(((((IkReal(-1.00000000000000))*(x207)*(x212)))+(((x208)*(x209)))+(((IkReal(-1.00000000000000))*(x209)*(x212)))+(((x207)*(x208)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x213=IKsin(j13);
IkReal x214=IKcos(j13);
IkReal x215=((IkReal(1.00000000000000))*(sj17));
IkReal x216=((r11)*(sj18));
IkReal x217=((r10)*(sj17));
IkReal x218=((cj17)*(r10));
IkReal x219=((IkReal(1.00000000000000))*(r11));
IkReal x220=((IkReal(1.00000000000000))*(r10));
IkReal x221=((IkReal(1.00000000000000))*(r00));
IkReal x222=((r12)*(sj17));
IkReal x223=((cj18)*(x213));
IkReal x224=((cj18)*(x214));
IkReal x225=((sj18)*(x213));
IkReal x226=((r02)*(x213));
IkReal x227=((sj18)*(x214));
IkReal x228=((IkReal(1.00000000000000))*(cj17)*(x214));
IkReal x229=((IkReal(1.00000000000000))*(cj17)*(x213));
evalcond[0]=((((r01)*(x223)))+(((r00)*(x225)))+(((IkReal(-1.00000000000000))*(x219)*(x224)))+(((IkReal(-1.00000000000000))*(x220)*(x227))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(x219)*(x223)))+(((IkReal(-1.00000000000000))*(x220)*(x225)))+(((IkReal(-1.00000000000000))*(x221)*(x227)))+(((sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r01)*(x224))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x216)*(x228)))+(((IkReal(-1.00000000000000))*(x215)*(x226)))+(((IkReal(-1.00000000000000))*(cj17)*(x221)*(x223)))+(((x214)*(x222)))+(((x218)*(x224)))+(((cj17)*(r01)*(x225))));
evalcond[3]=((IkReal(1.00000000000000))+(((r01)*(sj17)*(x225)))+(((cj17)*(x226)))+(((IkReal(-1.00000000000000))*(r12)*(x228)))+(((IkReal(-1.00000000000000))*(x214)*(x215)*(x216)))+(((x217)*(x224)))+(((IkReal(-1.00000000000000))*(r00)*(x215)*(x223))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x216)*(x229)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x227)))+(((cj15)*(sj14)))+(((cj17)*(r00)*(x224)))+(((r02)*(sj17)*(x214)))+(((cj14)*(sj15)))+(((x213)*(x222)))+(((x218)*(x223))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x213)*(x215)*(x216)))+(((IkReal(-1.00000000000000))*(r02)*(x228)))+(((r00)*(sj17)*(x224)))+(((IkReal(-1.00000000000000))*(r01)*(x215)*(x227)))+(((IkReal(-1.00000000000000))*(r12)*(x229)))+(((x217)*(x223))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
IkReal x230=((sj17)*(sj18));
IkReal x231=((IkReal(1.00000000000000))*(cj18)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x231)))+(((cj17)*(r22)))+(((r21)*(x230))));
evalcond[2]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x231)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((npy)*(x230))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x232=((IkReal(4.00000000000000))*(npx));
IkReal x233=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((cj18)*(x233)))+(((sj18)*(x232))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x233)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x232))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((cj18)*(x233)))+(((sj18)*(x232)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x233)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x232)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((cj18)*(x233)))+(((sj18)*(x232)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x233)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x232)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst28;
IkReal x234=(cj18)*(cj18);
IkReal x235=(sj18)*(sj18);
IkReal x236=((IkReal(1.00000000000000))*(r10));
IkReal x237=((cj17)*(r02));
IkReal x238=((r01)*(sj17));
IkReal x239=((cj17)*(r12));
IkReal x240=((r00)*(r11)*(sj17));
gconst28=IKsign(((((x234)*(x240)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x237)))+(((r00)*(sj18)*(x239)))+(((IkReal(-1.00000000000000))*(x235)*(x236)*(x238)))+(((cj18)*(r01)*(x239)))+(((x235)*(x240)))+(((IkReal(-1.00000000000000))*(sj18)*(x236)*(x237)))+(((IkReal(-1.00000000000000))*(x234)*(x236)*(x238)))));
IkReal x241=(cj18)*(cj18);
IkReal x242=(sj18)*(sj18);
IkReal x243=((IkReal(1.00000000000000))*(r10));
IkReal x244=((cj17)*(r02));
IkReal x245=((r01)*(sj17));
IkReal x246=((cj17)*(r12));
IkReal x247=((r00)*(r11)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x242)*(x243)*(x245)))+(((IkReal(-1.00000000000000))*(sj18)*(x243)*(x244)))+(((x241)*(x247)))+(((x242)*(x247)))+(((r00)*(sj18)*(x246)))+(((cj18)*(r01)*(x246)))+(((IkReal(-1.00000000000000))*(x241)*(x243)*(x245)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x244))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x248=((IkReal(1.00000000000000))*(sj18));
IkReal x249=((IkReal(1.00000000000000))*(cj18));
if( IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(r11)*(x249)))+(((IkReal(-1.00000000000000))*(r10)*(x248))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(r01)*(x249)))+(((IkReal(-1.00000000000000))*(r00)*(x248))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst28)*(((((IkReal(-1.00000000000000))*(r11)*(x249)))+(((IkReal(-1.00000000000000))*(r10)*(x248)))))), ((gconst28)*(((((IkReal(-1.00000000000000))*(r01)*(x249)))+(((IkReal(-1.00000000000000))*(r00)*(x248)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x250=IKsin(j13);
IkReal x251=IKcos(j13);
IkReal x252=((IkReal(1.00000000000000))*(sj17));
IkReal x253=((r11)*(sj18));
IkReal x254=((r10)*(sj17));
IkReal x255=((IkReal(1.00000000000000))*(cj17));
IkReal x256=((cj18)*(x250));
IkReal x257=((cj18)*(x251));
IkReal x258=((r02)*(x250));
IkReal x259=((sj18)*(x251));
IkReal x260=((x251)*(x255));
IkReal x261=((r01)*(sj18)*(x250));
evalcond[0]=((((r01)*(x256)))+(((IkReal(-1.00000000000000))*(r10)*(x259)))+(((r00)*(sj18)*(x250)))+(((IkReal(-1.00000000000000))*(r11)*(x257))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x252)*(x258)))+(((IkReal(-1.00000000000000))*(r00)*(x255)*(x256)))+(((r12)*(sj17)*(x251)))+(((cj17)*(x261)))+(((IkReal(-1.00000000000000))*(x253)*(x260)))+(((cj17)*(r10)*(x257))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x251)*(x252)*(x253)))+(((sj17)*(x261)))+(((cj17)*(x258)))+(((IkReal(-1.00000000000000))*(r12)*(x260)))+(((IkReal(-1.00000000000000))*(r00)*(x252)*(x256)))+(((x254)*(x257))));
evalcond[3]=((((r00)*(sj17)*(x257)))+(((IkReal(-1.00000000000000))*(r01)*(x252)*(x259)))+(((IkReal(-1.00000000000000))*(r02)*(x260)))+(((IkReal(-1.00000000000000))*(x250)*(x252)*(x253)))+(((x254)*(x256)))+(((IkReal(-1.00000000000000))*(r12)*(x250)*(x255))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst30;
gconst30=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x262=((cj15)*(cj17));
IkReal x263=((r21)*(sj18));
IkReal x264=((cj18)*(r20));
IkReal x265=((r22)*(sj17));
IkReal x266=((cj18)*(r21));
IkReal x267=((IkReal(1.00000000000000))*(sj15));
IkReal x268=((r20)*(sj18));
if( IKabs(((gconst30)*(((((cj15)*(x268)))+(((cj15)*(x266)))+(((cj17)*(sj15)*(x263)))+(((IkReal(-1.00000000000000))*(x265)*(x267)))+(((IkReal(-1.00000000000000))*(cj17)*(x264)*(x267))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((sj15)*(x268)))+(((sj15)*(x266)))+(((cj15)*(x265)))+(((x262)*(x264)))+(((IkReal(-1.00000000000000))*(x262)*(x263))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst30)*(((((cj15)*(x268)))+(((cj15)*(x266)))+(((cj17)*(sj15)*(x263)))+(((IkReal(-1.00000000000000))*(x265)*(x267)))+(((IkReal(-1.00000000000000))*(cj17)*(x264)*(x267)))))), ((gconst30)*(((((sj15)*(x268)))+(((sj15)*(x266)))+(((cj15)*(x265)))+(((x262)*(x264)))+(((IkReal(-1.00000000000000))*(x262)*(x263)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x269=IKsin(j14);
IkReal x270=IKcos(j14);
IkReal x271=((IkReal(1.00000000000000))*(cj17));
IkReal x272=((r11)*(sj13));
IkReal x273=((IkReal(1.00000000000000))*(cj18));
IkReal x274=((cj13)*(r01));
IkReal x275=((IkReal(1.00000000000000))*(sj18));
IkReal x276=((cj13)*(r00));
IkReal x277=((r10)*(sj13));
IkReal x278=((cj17)*(cj18));
IkReal x279=((cj15)*(x269));
IkReal x280=((sj15)*(x270));
IkReal x281=((cj15)*(x270));
IkReal x282=((sj15)*(x269));
IkReal x283=((x279)+(x280));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(x283));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x282)+(((cj17)*(r21)*(sj18)))+(((IkReal(-1.00000000000000))*(x281)))+(((IkReal(-1.00000000000000))*(cj18)*(r20)*(x271))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x272)*(x273)))+(((IkReal(-1.00000000000000))*(x273)*(x274)))+(x281)+(((IkReal(-1.00000000000000))*(x282)))+(((IkReal(-1.00000000000000))*(x275)*(x276)))+(((IkReal(-1.00000000000000))*(x275)*(x277))));
evalcond[3]=((((r12)*(sj13)*(sj17)))+(((cj13)*(r02)*(sj17)))+(x283)+(((x277)*(x278)))+(((x276)*(x278)))+(((IkReal(-1.00000000000000))*(sj18)*(x271)*(x274)))+(((IkReal(-1.00000000000000))*(sj18)*(x271)*(x272))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x284=((cj15)*(r21));
IkReal x285=((cj17)*(sj18));
IkReal x286=((r22)*(sj17));
IkReal x287=((IkReal(1.00000000000000))*(sj15));
IkReal x288=((cj15)*(r20));
IkReal x289=((r21)*(sj15));
IkReal x290=((cj17)*(cj18));
if( IKabs(((gconst29)*(((((x285)*(x289)))+(((cj18)*(x284)))+(((IkReal(-1.00000000000000))*(x286)*(x287)))+(((sj18)*(x288)))+(((IkReal(-1.00000000000000))*(r20)*(x287)*(x290))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((r20)*(sj15)*(sj18)))+(((cj15)*(x286)))+(((cj18)*(x289)))+(((IkReal(-1.00000000000000))*(x284)*(x285)))+(((x288)*(x290))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst29)*(((((x285)*(x289)))+(((cj18)*(x284)))+(((IkReal(-1.00000000000000))*(x286)*(x287)))+(((sj18)*(x288)))+(((IkReal(-1.00000000000000))*(r20)*(x287)*(x290)))))), ((gconst29)*(((((r20)*(sj15)*(sj18)))+(((cj15)*(x286)))+(((cj18)*(x289)))+(((IkReal(-1.00000000000000))*(x284)*(x285)))+(((x288)*(x290)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x291=IKsin(j14);
IkReal x292=IKcos(j14);
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(((sj15)*(x292)))+(((cj15)*(x291))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj15)*(x292)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(r20)))+(((cj17)*(r21)*(sj18)))+(((sj15)*(x291))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x293=(sj18)*(sj18);
IkReal x294=(cj18)*(cj18);
IkReal x295=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x296=((IkReal(1.00000000000000))*(x293));
IkReal x297=((IkReal(1.00000000000000))*(x294));
gconst31=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x295)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x295)))+(((IkReal(-1.00000000000000))*(x296)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x296)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x297)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x297)*((r11)*(r11))))));
IkReal x298=(sj18)*(sj18);
IkReal x299=(cj18)*(cj18);
IkReal x300=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x301=((IkReal(1.00000000000000))*(x298));
IkReal x302=((IkReal(1.00000000000000))*(x299));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x301)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x302)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x302)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x300)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x300)))+(((IkReal(-1.00000000000000))*(x301)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x303=((sj14)*(sj15));
IkReal x304=((cj18)*(r11));
IkReal x305=((cj18)*(r01));
IkReal x306=((r10)*(sj18));
IkReal x307=((r00)*(sj18));
IkReal x308=((IkReal(1.00000000000000))*(cj14)*(cj15));
if( IKabs(((gconst31)*(((((x303)*(x306)))+(((x303)*(x304)))+(((IkReal(-1.00000000000000))*(x306)*(x308)))+(((IkReal(-1.00000000000000))*(x304)*(x308))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((x303)*(x307)))+(((x303)*(x305)))+(((IkReal(-1.00000000000000))*(x305)*(x308)))+(((IkReal(-1.00000000000000))*(x307)*(x308))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst31)*(((((x303)*(x306)))+(((x303)*(x304)))+(((IkReal(-1.00000000000000))*(x306)*(x308)))+(((IkReal(-1.00000000000000))*(x304)*(x308)))))), ((gconst31)*(((((x303)*(x307)))+(((x303)*(x305)))+(((IkReal(-1.00000000000000))*(x305)*(x308)))+(((IkReal(-1.00000000000000))*(x307)*(x308)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x309=IKsin(j13);
IkReal x310=IKcos(j13);
IkReal x311=((IkReal(1.00000000000000))*(sj17));
IkReal x312=((r11)*(sj18));
IkReal x313=((cj18)*(r10));
IkReal x314=((IkReal(1.00000000000000))*(r11));
IkReal x315=((IkReal(1.00000000000000))*(r10));
IkReal x316=((IkReal(1.00000000000000))*(r00));
IkReal x317=((cj18)*(r00));
IkReal x318=((IkReal(1.00000000000000))*(cj17));
IkReal x319=((cj18)*(x309));
IkReal x320=((sj17)*(x310));
IkReal x321=((sj18)*(x309));
IkReal x322=((r02)*(x309));
IkReal x323=((sj18)*(x310));
IkReal x324=((r12)*(x309));
IkReal x325=((cj17)*(x310));
IkReal x326=((cj18)*(x310));
IkReal x327=((x310)*(x318));
evalcond[0]=((((IkReal(-1.00000000000000))*(x314)*(x326)))+(((r00)*(x321)))+(((IkReal(-1.00000000000000))*(x315)*(x323)))+(((r01)*(x319))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x326)))+(((cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(x315)*(x321)))+(((IkReal(-1.00000000000000))*(x316)*(x323)))+(((IkReal(-1.00000000000000))*(x314)*(x319))));
evalcond[2]=((((r12)*(x320)))+(((x313)*(x325)))+(((cj17)*(r01)*(x321)))+(((IkReal(-1.00000000000000))*(x311)*(x322)))+(((IkReal(-1.00000000000000))*(cj17)*(x316)*(x319)))+(((IkReal(-1.00000000000000))*(x312)*(x327))));
evalcond[3]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x327)))+(((IkReal(-1.00000000000000))*(x310)*(x311)*(x312)))+(((x313)*(x320)))+(((IkReal(-1.00000000000000))*(x309)*(x311)*(x317)))+(((r01)*(sj17)*(x321)))+(((cj17)*(x322))));
evalcond[4]=((((cj15)*(sj14)))+(((r02)*(x320)))+(((IkReal(-1.00000000000000))*(r01)*(x318)*(x323)))+(((cj14)*(sj15)))+(((cj17)*(x309)*(x313)))+(((sj17)*(x324)))+(((x317)*(x325)))+(((IkReal(-1.00000000000000))*(x309)*(x312)*(x318))));
evalcond[5]=((((sj17)*(x309)*(x313)))+(((IkReal(-1.00000000000000))*(x309)*(x311)*(x312)))+(((x317)*(x320)))+(((IkReal(-1.00000000000000))*(x318)*(x324)))+(((IkReal(-1.00000000000000))*(r02)*(x327)))+(((IkReal(-1.00000000000000))*(r01)*(x311)*(x323))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x328=((IkReal(4.00000000000000))*(npz));
IkReal x329=((IkReal(4.00000000000000))*(sj17));
IkReal x330=((npy)*(sj18));
IkReal x331=((cj18)*(npx));
IkReal x332=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x329)*(x331)))+(((IkReal(0.360000000000000))*(sj17)))+(((x329)*(x330)))+(((cj17)*(x328))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x331)*(x332)))+(((IkReal(-1.00000000000000))*(x330)*(x332)))+(((sj17)*(x328)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x329)*(x331)))+(((IkReal(0.360000000000000))*(sj17)))+(((x329)*(x330)))+(((cj17)*(x328)))))+IKsqr(((IkReal(-0.940000000000000))+(((x331)*(x332)))+(((IkReal(-1.00000000000000))*(x330)*(x332)))+(((sj17)*(x328)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x329)*(x331)))+(((IkReal(0.360000000000000))*(sj17)))+(((x329)*(x330)))+(((cj17)*(x328)))), ((IkReal(-0.940000000000000))+(((x331)*(x332)))+(((IkReal(-1.00000000000000))*(x330)*(x332)))+(((sj17)*(x328)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x333=((npy)*(sj18));
IkReal x334=((IkReal(1.00000000000000))*(sj17));
IkReal x335=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(x335)))+(((IkReal(-1.00000000000000))*(npz)*(x334)))+(((cj17)*(x333)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((sj17)*(x333)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(x334)*(x335))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x336=(sj18)*(sj18);
IkReal x337=(cj18)*(cj18);
IkReal x338=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst33=IKsign(((((r00)*(r01)*(x338)))+(((x336)*((r00)*(r00))))+(((x336)*((r10)*(r10))))+(((x337)*((r11)*(r11))))+(((r10)*(r11)*(x338)))+(((x337)*((r01)*(r01))))));
IkReal x339=(sj18)*(sj18);
IkReal x340=(cj18)*(cj18);
IkReal x341=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x340)*((r01)*(r01))))+(((x340)*((r11)*(r11))))+(((r00)*(r01)*(x341)))+(((x339)*((r00)*(r00))))+(((r10)*(r11)*(x341)))+(((x339)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x342=((r21)*(sj18));
IkReal x343=((IkReal(1.00000000000000))*(cj15));
IkReal x344=((r22)*(sj17));
IkReal x345=((sj15)*(sj17));
IkReal x346=((cj18)*(r20));
IkReal x347=((IkReal(1.00000000000000))*(sj15));
IkReal x348=((cj17)*(sj15));
IkReal x349=((cj15)*(cj17));
if( IKabs(((gconst34)*(((((r22)*(x349)))+(((IkReal(-1.00000000000000))*(x344)*(x347)))+(((IkReal(-1.00000000000000))*(sj17)*(x343)*(x346)))+(((IkReal(-1.00000000000000))*(cj17)*(x346)*(x347)))+(((cj15)*(sj17)*(x342)))+(((x342)*(x348))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((r22)*(x348)))+(((x346)*(x349)))+(((IkReal(-1.00000000000000))*(x345)*(x346)))+(((cj15)*(x344)))+(((x342)*(x345)))+(((IkReal(-1.00000000000000))*(cj17)*(x342)*(x343))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst34)*(((((r22)*(x349)))+(((IkReal(-1.00000000000000))*(x344)*(x347)))+(((IkReal(-1.00000000000000))*(sj17)*(x343)*(x346)))+(((IkReal(-1.00000000000000))*(cj17)*(x346)*(x347)))+(((cj15)*(sj17)*(x342)))+(((x342)*(x348)))))), ((gconst34)*(((((r22)*(x348)))+(((x346)*(x349)))+(((IkReal(-1.00000000000000))*(x345)*(x346)))+(((cj15)*(x344)))+(((x342)*(x345)))+(((IkReal(-1.00000000000000))*(cj17)*(x342)*(x343)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x350=IKsin(j14);
IkReal x351=IKcos(j14);
IkReal x352=((IkReal(1.00000000000000))*(sj17));
IkReal x353=((cj18)*(r20));
IkReal x354=((r21)*(sj18));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x352)))+(((IkReal(-1.00000000000000))*(cj15)*(x351)))+(((IkReal(-1.00000000000000))*(cj17)*(x353)))+(((cj17)*(x354)))+(((sj15)*(x350))));
evalcond[1]=((((cj17)*(r22)))+(((sj17)*(x354)))+(((cj15)*(x350)))+(((sj15)*(x351)))+(((IkReal(-1.00000000000000))*(x352)*(x353))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
IkReal x355=(sj18)*(sj18);
IkReal x356=(cj18)*(cj18);
IkReal x357=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst35=IKsign(((((x356)*((r11)*(r11))))+(((x356)*((r01)*(r01))))+(((r00)*(r01)*(x357)))+(((x355)*((r00)*(r00))))+(((x355)*((r10)*(r10))))+(((r10)*(r11)*(x357)))));
IkReal x358=(sj18)*(sj18);
IkReal x359=(cj18)*(cj18);
IkReal x360=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x359)*((r11)*(r11))))+(((x359)*((r01)*(r01))))+(((x358)*((r10)*(r10))))+(((r10)*(r11)*(x360)))+(((r00)*(r01)*(x360)))+(((x358)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst35)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x361=IKsin(j13);
IkReal x362=IKcos(j13);
IkReal x363=((IkReal(1.00000000000000))*(sj17));
IkReal x364=((r11)*(sj18));
IkReal x365=((r10)*(sj17));
IkReal x366=((cj17)*(r10));
IkReal x367=((IkReal(1.00000000000000))*(r11));
IkReal x368=((IkReal(1.00000000000000))*(r10));
IkReal x369=((IkReal(1.00000000000000))*(r00));
IkReal x370=((r12)*(sj17));
IkReal x371=((cj18)*(x361));
IkReal x372=((cj18)*(x362));
IkReal x373=((sj18)*(x361));
IkReal x374=((r02)*(x361));
IkReal x375=((sj18)*(x362));
IkReal x376=((IkReal(1.00000000000000))*(cj17)*(x362));
IkReal x377=((IkReal(1.00000000000000))*(cj17)*(x361));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x368)*(x375)))+(((r00)*(x373)))+(((r01)*(x371)))+(((IkReal(-1.00000000000000))*(x367)*(x372))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x368)*(x373)))+(((IkReal(-1.00000000000000))*(r01)*(x372)))+(((IkReal(-1.00000000000000))*(x367)*(x371)))+(((IkReal(-1.00000000000000))*(x369)*(x375))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x363)*(x374)))+(((x366)*(x372)))+(((cj17)*(r01)*(x373)))+(((IkReal(-1.00000000000000))*(x364)*(x376)))+(((x362)*(x370)))+(((IkReal(-1.00000000000000))*(cj17)*(x369)*(x371))));
evalcond[3]=((((cj17)*(x374)))+(((IkReal(-1.00000000000000))*(r00)*(x363)*(x371)))+(((x365)*(x372)))+(((IkReal(-1.00000000000000))*(x362)*(x363)*(x364)))+(((IkReal(-1.00000000000000))*(r12)*(x376)))+(((r01)*(sj17)*(x373))));
evalcond[4]=((((cj15)*(sj14)))+(((r02)*(sj17)*(x362)))+(((cj14)*(sj15)))+(((x366)*(x371)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x375)))+(((cj17)*(r00)*(x372)))+(((IkReal(-1.00000000000000))*(x364)*(x377)))+(((x361)*(x370))));
evalcond[5]=((((cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r02)*(x376)))+(((IkReal(-1.00000000000000))*(r01)*(x363)*(x375)))+(((x365)*(x371)))+(((IkReal(-1.00000000000000))*(r12)*(x377)))+(((IkReal(-1.00000000000000))*(x361)*(x363)*(x364)))+(((r00)*(sj17)*(x372))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst33)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst33)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x378=IKsin(j13);
IkReal x379=IKcos(j13);
IkReal x380=((cj18)*(r01));
IkReal x381=((r11)*(sj18));
IkReal x382=((IkReal(1.00000000000000))*(x379));
IkReal x383=((sj18)*(x378));
IkReal x384=((r02)*(x378));
IkReal x385=((IkReal(1.00000000000000))*(cj18)*(x378));
IkReal x386=((cj18)*(r10)*(x379));
evalcond[0]=((IkReal(1.00000000000000))+(((x378)*(x380)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x382)))+(((r00)*(x383)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x382))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x380)*(x382)))+(((IkReal(-1.00000000000000))*(r10)*(x383)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x382)))+(((IkReal(-1.00000000000000))*(r11)*(x385))));
evalcond[2]=((((r12)*(sj17)*(x379)))+(((cj17)*(r01)*(x383)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x385)))+(((IkReal(-1.00000000000000))*(cj17)*(x381)*(x382)))+(((cj17)*(x386)))+(((IkReal(-1.00000000000000))*(sj17)*(x384))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj17)*(x381)*(x382)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x385)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x382)))+(((sj17)*(x386)))+(((r01)*(sj17)*(x383)))+(((cj17)*(x384))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x387=((r21)*(sj18));
IkReal x388=((IkReal(1.00000000000000))*(cj15));
IkReal x389=((r22)*(sj17));
IkReal x390=((sj15)*(sj17));
IkReal x391=((cj18)*(r20));
IkReal x392=((IkReal(1.00000000000000))*(sj15));
IkReal x393=((cj17)*(sj15));
IkReal x394=((cj15)*(cj17));
if( IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(sj17)*(x388)*(x391)))+(((IkReal(-1.00000000000000))*(cj17)*(x391)*(x392)))+(((cj15)*(sj17)*(x387)))+(((IkReal(-1.00000000000000))*(x389)*(x392)))+(((r22)*(x394)))+(((x387)*(x393))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((IkReal(-1.00000000000000))*(cj17)*(x387)*(x388)))+(((x391)*(x394)))+(((cj15)*(x389)))+(((r22)*(x393)))+(((x387)*(x390)))+(((IkReal(-1.00000000000000))*(x390)*(x391))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst36)*(((((IkReal(-1.00000000000000))*(sj17)*(x388)*(x391)))+(((IkReal(-1.00000000000000))*(cj17)*(x391)*(x392)))+(((cj15)*(sj17)*(x387)))+(((IkReal(-1.00000000000000))*(x389)*(x392)))+(((r22)*(x394)))+(((x387)*(x393)))))), ((gconst36)*(((((IkReal(-1.00000000000000))*(cj17)*(x387)*(x388)))+(((x391)*(x394)))+(((cj15)*(x389)))+(((r22)*(x393)))+(((x387)*(x390)))+(((IkReal(-1.00000000000000))*(x390)*(x391)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x395=IKsin(j14);
IkReal x396=IKcos(j14);
IkReal x397=((cj17)*(sj18));
IkReal x398=((IkReal(1.00000000000000))*(sj17));
IkReal x399=((cj18)*(r20));
IkReal x400=((sj13)*(sj17));
IkReal x401=((cj18)*(r10));
IkReal x402=((cj13)*(r02));
IkReal x403=((cj13)*(r01));
IkReal x404=((sj17)*(sj18));
IkReal x405=((IkReal(1.00000000000000))*(cj17));
IkReal x406=((cj15)*(x395));
IkReal x407=((sj15)*(x396));
IkReal x408=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x409=((sj15)*(x395));
IkReal x410=((cj13)*(cj18)*(r00));
IkReal x411=((cj15)*(x396));
IkReal x412=((x407)+(x406));
evalcond[0]=((x409)+(((IkReal(-1.00000000000000))*(x399)*(x405)))+(((r21)*(x397)))+(((IkReal(-1.00000000000000))*(r22)*(x398)))+(((IkReal(-1.00000000000000))*(x411))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x398)*(x399)))+(((cj17)*(r22)))+(x412)+(((r21)*(x404))));
evalcond[2]=((((sj17)*(x402)))+(((IkReal(-1.00000000000000))*(x397)*(x403)))+(((r12)*(x400)))+(((cj17)*(sj13)*(x401)))+(x412)+(((cj17)*(x410)))+(((IkReal(-1.00000000000000))*(x397)*(x408))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x398)))+(((IkReal(-1.00000000000000))*(x402)*(x405)))+(((IkReal(-1.00000000000000))*(sj18)*(x398)*(x403)))+(x411)+(((x400)*(x401)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x405)))+(((IkReal(-1.00000000000000))*(x409)))+(((sj17)*(x410))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x413=((IkReal(4.00000000000000))*(npz));
IkReal x414=((IkReal(4.00000000000000))*(sj17));
IkReal x415=((npy)*(sj18));
IkReal x416=((cj18)*(npx));
IkReal x417=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((x414)*(x416)))+(((IkReal(-1.00000000000000))*(cj17)*(x413)))+(((IkReal(-1.00000000000000))*(x414)*(x415)))+(((IkReal(-0.360000000000000))*(sj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x416)*(x417)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x415)*(x417)))+(((sj17)*(x413))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x414)*(x416)))+(((IkReal(-1.00000000000000))*(cj17)*(x413)))+(((IkReal(-1.00000000000000))*(x414)*(x415)))+(((IkReal(-0.360000000000000))*(sj17)))))+IKsqr(((IkReal(-0.940000000000000))+(((x416)*(x417)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x415)*(x417)))+(((sj17)*(x413)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((x414)*(x416)))+(((IkReal(-1.00000000000000))*(cj17)*(x413)))+(((IkReal(-1.00000000000000))*(x414)*(x415)))+(((IkReal(-0.360000000000000))*(sj17)))), ((IkReal(-0.940000000000000))+(((x416)*(x417)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x415)*(x417)))+(((sj17)*(x413)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x418=((npy)*(sj18));
IkReal x419=((IkReal(1.00000000000000))*(sj17));
IkReal x420=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x419)))+(((IkReal(-1.00000000000000))*(cj17)*(x420)))+(((cj17)*(x418)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((IkReal(-1.00000000000000))*(x419)*(x420)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x418))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x421=(sj18)*(sj18);
IkReal x422=(cj18)*(cj18);
IkReal x423=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x424=((IkReal(1.00000000000000))*(x421));
IkReal x425=((IkReal(1.00000000000000))*(x422));
gconst38=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x423)))+(((IkReal(-1.00000000000000))*(x425)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x425)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x423)))+(((IkReal(-1.00000000000000))*(x424)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x424)*((r00)*(r00))))));
IkReal x426=(sj18)*(sj18);
IkReal x427=(cj18)*(cj18);
IkReal x428=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x429=((IkReal(1.00000000000000))*(x426));
IkReal x430=((IkReal(1.00000000000000))*(x427));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x428)))+(((IkReal(-1.00000000000000))*(x430)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x429)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x428)))+(((IkReal(-1.00000000000000))*(x429)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x430)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x431=((r21)*(sj18));
IkReal x432=((cj15)*(cj17));
IkReal x433=((sj15)*(sj17));
IkReal x434=((cj15)*(sj17));
IkReal x435=((cj17)*(sj15));
IkReal x436=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(x431)*(x435)))+(((cj18)*(r20)*(x435)))+(((IkReal(-1.00000000000000))*(x434)*(x436)))+(((r22)*(x432)))+(((r22)*(x433)))+(((x431)*(x434))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(x433)*(x436)))+(((IkReal(-1.00000000000000))*(x432)*(x436)))+(((IkReal(-1.00000000000000))*(r22)*(x434)))+(((r22)*(x435)))+(((x431)*(x433)))+(((x431)*(x432))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst39)*(((((IkReal(-1.00000000000000))*(x431)*(x435)))+(((cj18)*(r20)*(x435)))+(((IkReal(-1.00000000000000))*(x434)*(x436)))+(((r22)*(x432)))+(((r22)*(x433)))+(((x431)*(x434)))))), ((gconst39)*(((((IkReal(-1.00000000000000))*(x433)*(x436)))+(((IkReal(-1.00000000000000))*(x432)*(x436)))+(((IkReal(-1.00000000000000))*(r22)*(x434)))+(((r22)*(x435)))+(((x431)*(x433)))+(((x431)*(x432)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x437=IKsin(j14);
IkReal x438=IKcos(j14);
IkReal x439=((IkReal(1.00000000000000))*(sj17));
IkReal x440=((cj18)*(r20));
IkReal x441=((r21)*(sj18));
IkReal x442=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((IkReal(-1.00000000000000))*(x438)*(x442)))+(((cj17)*(x441)))+(((IkReal(-1.00000000000000))*(cj17)*(x440)))+(((IkReal(-1.00000000000000))*(r22)*(x439)))+(((sj15)*(x437))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x437)*(x442)))+(((IkReal(-1.00000000000000))*(sj15)*(x438)))+(((IkReal(-1.00000000000000))*(x439)*(x440)))+(((cj17)*(r22)))+(((sj17)*(x441))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x443=(sj18)*(sj18);
IkReal x444=(cj18)*(cj18);
IkReal x445=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x446=((IkReal(1.00000000000000))*(x443));
IkReal x447=((IkReal(1.00000000000000))*(x444));
gconst40=IKsign(((((IkReal(-1.00000000000000))*(x446)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x445)))+(((IkReal(-1.00000000000000))*(x447)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x445)))+(((IkReal(-1.00000000000000))*(x446)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x447)*((r01)*(r01))))));
IkReal x448=(sj18)*(sj18);
IkReal x449=(cj18)*(cj18);
IkReal x450=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x451=((IkReal(1.00000000000000))*(x448));
IkReal x452=((IkReal(1.00000000000000))*(x449));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(r11)*(x450)))+(((IkReal(-1.00000000000000))*(x451)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x452)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x452)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x450)))+(((IkReal(-1.00000000000000))*(x451)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst40)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst40)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x453=IKsin(j13);
IkReal x454=IKcos(j13);
IkReal x455=((IkReal(1.00000000000000))*(sj17));
IkReal x456=((r11)*(sj18));
IkReal x457=((r10)*(sj17));
IkReal x458=((cj17)*(r10));
IkReal x459=((IkReal(1.00000000000000))*(r11));
IkReal x460=((IkReal(1.00000000000000))*(r10));
IkReal x461=((IkReal(1.00000000000000))*(r00));
IkReal x462=((r12)*(sj17));
IkReal x463=((cj18)*(x453));
IkReal x464=((cj18)*(x454));
IkReal x465=((sj18)*(x453));
IkReal x466=((r02)*(x453));
IkReal x467=((sj18)*(x454));
IkReal x468=((IkReal(1.00000000000000))*(cj17)*(x454));
IkReal x469=((IkReal(1.00000000000000))*(cj17)*(x453));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x460)*(x467)))+(((IkReal(-1.00000000000000))*(x459)*(x464)))+(((r01)*(x463)))+(((r00)*(x465))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x460)*(x465)))+(((IkReal(-1.00000000000000))*(x459)*(x463)))+(((IkReal(-1.00000000000000))*(r01)*(x464)))+(((IkReal(-1.00000000000000))*(x461)*(x467))));
evalcond[2]=((((x454)*(x462)))+(((IkReal(-1.00000000000000))*(cj17)*(x461)*(x463)))+(((IkReal(-1.00000000000000))*(x456)*(x468)))+(((cj17)*(r01)*(x465)))+(((IkReal(-1.00000000000000))*(x455)*(x466)))+(((x458)*(x464))));
evalcond[3]=((((cj17)*(x466)))+(((IkReal(-1.00000000000000))*(r00)*(x455)*(x463)))+(((IkReal(-1.00000000000000))*(x454)*(x455)*(x456)))+(((IkReal(-1.00000000000000))*(r12)*(x468)))+(((r01)*(sj17)*(x465)))+(((x457)*(x464))));
evalcond[4]=((((cj15)*(sj14)))+(((cj14)*(sj15)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x467)))+(((IkReal(-1.00000000000000))*(x456)*(x469)))+(((x453)*(x462)))+(((r02)*(sj17)*(x454)))+(((cj17)*(r00)*(x464)))+(((x458)*(x463))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x455)*(x467)))+(((IkReal(-1.00000000000000))*(x453)*(x455)*(x456)))+(((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(r12)*(x469)))+(((r00)*(sj17)*(x464)))+(((IkReal(-1.00000000000000))*(r02)*(x468)))+(((sj14)*(sj15)))+(((x457)*(x463))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst38)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst38)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x470=IKsin(j13);
IkReal x471=IKcos(j13);
IkReal x472=((cj18)*(r01));
IkReal x473=((r11)*(sj18));
IkReal x474=((IkReal(1.00000000000000))*(x471));
IkReal x475=((sj18)*(x470));
IkReal x476=((r02)*(x470));
IkReal x477=((IkReal(1.00000000000000))*(cj18)*(x470));
IkReal x478=((cj18)*(r10)*(x471));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x474)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x474)))+(((x470)*(x472)))+(((r00)*(x475))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x472)*(x474)))+(((IkReal(-1.00000000000000))*(r11)*(x477)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x474)))+(((IkReal(-1.00000000000000))*(r10)*(x475))));
evalcond[2]=((((cj17)*(x478)))+(((IkReal(-1.00000000000000))*(cj17)*(x473)*(x474)))+(((IkReal(-1.00000000000000))*(sj17)*(x476)))+(((cj17)*(r01)*(x475)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x477)))+(((r12)*(sj17)*(x471))));
evalcond[3]=((((cj17)*(x476)))+(((IkReal(-1.00000000000000))*(sj17)*(x473)*(x474)))+(((sj17)*(x478)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x474)))+(((r01)*(sj17)*(x475)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x477))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x479=((r22)*(sj15));
IkReal x480=((r21)*(sj18));
IkReal x481=((cj15)*(cj17));
IkReal x482=((sj15)*(sj17));
IkReal x483=((cj15)*(sj17));
IkReal x484=((cj17)*(sj15));
IkReal x485=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst41)*(((((IkReal(-1.00000000000000))*(x483)*(x485)))+(((cj18)*(r20)*(x484)))+(((sj17)*(x479)))+(((r22)*(x481)))+(((x480)*(x483)))+(((IkReal(-1.00000000000000))*(x480)*(x484))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((cj17)*(x479)))+(((IkReal(-1.00000000000000))*(x481)*(x485)))+(((x480)*(x481)))+(((x480)*(x482)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))+(((IkReal(-1.00000000000000))*(r22)*(x483))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst41)*(((((IkReal(-1.00000000000000))*(x483)*(x485)))+(((cj18)*(r20)*(x484)))+(((sj17)*(x479)))+(((r22)*(x481)))+(((x480)*(x483)))+(((IkReal(-1.00000000000000))*(x480)*(x484)))))), ((gconst41)*(((((cj17)*(x479)))+(((IkReal(-1.00000000000000))*(x481)*(x485)))+(((x480)*(x481)))+(((x480)*(x482)))+(((IkReal(-1.00000000000000))*(x482)*(x485)))+(((IkReal(-1.00000000000000))*(r22)*(x483)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x486=IKsin(j14);
IkReal x487=IKcos(j14);
IkReal x488=((cj17)*(sj18));
IkReal x489=((IkReal(1.00000000000000))*(sj17));
IkReal x490=((cj18)*(r20));
IkReal x491=((sj13)*(sj17));
IkReal x492=((cj18)*(r10));
IkReal x493=((cj13)*(r02));
IkReal x494=((cj13)*(r01));
IkReal x495=((sj17)*(sj18));
IkReal x496=((IkReal(1.00000000000000))*(cj17));
IkReal x497=((sj15)*(x486));
IkReal x498=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x499=((sj15)*(x487));
IkReal x500=((cj15)*(x486));
IkReal x501=((cj13)*(cj18)*(r00));
IkReal x502=((IkReal(1.00000000000000))*(cj15)*(x487));
evalcond[0]=((((IkReal(-1.00000000000000))*(x502)))+(((IkReal(-1.00000000000000))*(x490)*(x496)))+(x497)+(((r21)*(x488)))+(((IkReal(-1.00000000000000))*(r22)*(x489))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x489)*(x490)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x499)))+(((r21)*(x495)))+(((IkReal(-1.00000000000000))*(x500))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x488)*(x498)))+(((cj17)*(x501)))+(((IkReal(-1.00000000000000))*(x488)*(x494)))+(((r12)*(x491)))+(x499)+(x500)+(((sj17)*(x493)))+(((cj17)*(sj13)*(x492))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj18)*(x489)*(x494)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x496)))+(((x491)*(x492)))+(((IkReal(-1.00000000000000))*(x502)))+(((IkReal(-1.00000000000000))*(x493)*(x496)))+(x497)+(((sj17)*(x501)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x489))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x503=((IkReal(4.00000000000000))*(npz));
IkReal x504=((IkReal(4.00000000000000))*(sj17));
IkReal x505=((npy)*(sj18));
IkReal x506=((cj18)*(npx));
IkReal x507=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((cj17)*(x503)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(x504)*(x506)))+(((x504)*(x505)))+(((IkReal(-0.380000000000000))*(sj16))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x505)*(x507)))+(((x506)*(x507)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x503))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((cj17)*(x503)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(x504)*(x506)))+(((x504)*(x505)))+(((IkReal(-0.380000000000000))*(sj16)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x505)*(x507)))+(((x506)*(x507)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x503)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((cj17)*(x503)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(x504)*(x506)))+(((x504)*(x505)))+(((IkReal(-0.380000000000000))*(sj16)))))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x505)*(x507)))+(((x506)*(x507)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x503)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x508=IKsin(j15);
IkReal x509=((npy)*(sj18));
IkReal x510=((IkReal(1.00000000000000))*(sj17));
IkReal x511=((cj18)*(npx));
IkReal x512=((IkReal(0.250000000000000))*(x508));
evalcond[0]=((((cj18)*(npy)))+(((sj16)*(x512)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(-1.00000000000000))*(npz)*(x510)))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x509)))+(((IkReal(-1.00000000000000))*(cj17)*(x511)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj16)*(x512)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x509)))+(((IkReal(-1.00000000000000))*(x510)*(x511))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x513=(sj18)*(sj18);
IkReal x514=(cj18)*(cj18);
IkReal x515=((r00)*(r11));
IkReal x516=((r02)*(sj17));
IkReal x517=((cj17)*(x513));
IkReal x518=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x519=((cj17)*(x514));
IkReal x520=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst1=IKsign(((((r10)*(sj18)*(x516)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x520)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x520)))+(((IkReal(-1.00000000000000))*(x518)*(x519)))+(((IkReal(-1.00000000000000))*(x517)*(x518)))+(((x515)*(x517)))+(((x515)*(x519)))+(((cj18)*(r11)*(x516)))));
IkReal x521=(sj18)*(sj18);
IkReal x522=(cj18)*(cj18);
IkReal x523=((r00)*(r11));
IkReal x524=((r02)*(sj17));
IkReal x525=((cj17)*(x521));
IkReal x526=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x527=((cj17)*(x522));
IkReal x528=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x525)*(x526)))+(((IkReal(-1.00000000000000))*(x526)*(x527)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x528)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x528)))+(((r10)*(sj18)*(x524)))+(((x523)*(x525)))+(((x523)*(x527)))+(((cj18)*(r11)*(x524))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x529=((npy)*(sj18));
IkReal x530=((IkReal(1.00000000000000))*(sj17));
IkReal x531=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj17)*(x529)))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x530)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(x531))));
evalcond[4]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(x530)*(x531)))+(((IkReal(0.0900000000000000))*(sj17)))+(((sj17)*(x529)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
IkReal x532=(sj18)*(sj18);
IkReal x533=(cj18)*(cj18);
IkReal x534=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst7=IKsign(((((x532)*((r10)*(r10))))+(((x532)*((r00)*(r00))))+(((r10)*(r11)*(x534)))+(((x533)*((r01)*(r01))))+(((x533)*((r11)*(r11))))+(((r00)*(r01)*(x534)))));
IkReal x535=(sj18)*(sj18);
IkReal x536=(cj18)*(cj18);
IkReal x537=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x536)*((r11)*(r11))))+(((x536)*((r01)*(r01))))+(((x535)*((r00)*(r00))))+(((r10)*(r11)*(x537)))+(((r00)*(r01)*(x537)))+(((x535)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x538=((r21)*(sj18));
IkReal x539=((IkReal(1.00000000000000))*(cj15));
IkReal x540=((r22)*(sj17));
IkReal x541=((sj15)*(sj17));
IkReal x542=((cj18)*(r20));
IkReal x543=((IkReal(1.00000000000000))*(sj15));
IkReal x544=((cj17)*(sj15));
IkReal x545=((cj15)*(cj17));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x540)*(x543)))+(((r22)*(x545)))+(((IkReal(-1.00000000000000))*(cj17)*(x542)*(x543)))+(((cj15)*(sj17)*(x538)))+(((IkReal(-1.00000000000000))*(sj17)*(x539)*(x542)))+(((x538)*(x544))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj17)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(x541)*(x542)))+(((x542)*(x545)))+(((r22)*(x544)))+(((cj15)*(x540)))+(((x538)*(x541))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(x540)*(x543)))+(((r22)*(x545)))+(((IkReal(-1.00000000000000))*(cj17)*(x542)*(x543)))+(((cj15)*(sj17)*(x538)))+(((IkReal(-1.00000000000000))*(sj17)*(x539)*(x542)))+(((x538)*(x544)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj17)*(x538)*(x539)))+(((IkReal(-1.00000000000000))*(x541)*(x542)))+(((x542)*(x545)))+(((r22)*(x544)))+(((cj15)*(x540)))+(((x538)*(x541)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x546=IKsin(j14);
IkReal x547=IKcos(j14);
IkReal x548=((IkReal(1.00000000000000))*(sj17));
IkReal x549=((cj18)*(r20));
IkReal x550=((r21)*(sj18));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x548)))+(((IkReal(-1.00000000000000))*(cj17)*(x549)))+(((sj15)*(x546)))+(((IkReal(-1.00000000000000))*(cj15)*(x547)))+(((cj17)*(x550))));
evalcond[1]=((((sj15)*(x547)))+(((cj17)*(r22)))+(((sj17)*(x550)))+(((cj15)*(x546)))+(((IkReal(-1.00000000000000))*(x548)*(x549))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x551=(sj18)*(sj18);
IkReal x552=(cj18)*(cj18);
IkReal x553=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst9=IKsign(((((x551)*((r00)*(r00))))+(((x552)*((r11)*(r11))))+(((x551)*((r10)*(r10))))+(((x552)*((r01)*(r01))))+(((r10)*(r11)*(x553)))+(((r00)*(r01)*(x553)))));
IkReal x554=(sj18)*(sj18);
IkReal x555=(cj18)*(cj18);
IkReal x556=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x555)*((r01)*(r01))))+(((x554)*((r00)*(r00))))+(((x554)*((r10)*(r10))))+(((r10)*(r11)*(x556)))+(((r00)*(r01)*(x556)))+(((x555)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x557=IKsin(j13);
IkReal x558=IKcos(j13);
IkReal x559=((IkReal(1.00000000000000))*(sj17));
IkReal x560=((r11)*(sj18));
IkReal x561=((r10)*(sj17));
IkReal x562=((cj17)*(r10));
IkReal x563=((IkReal(1.00000000000000))*(r11));
IkReal x564=((IkReal(1.00000000000000))*(r10));
IkReal x565=((IkReal(1.00000000000000))*(r00));
IkReal x566=((r12)*(sj17));
IkReal x567=((cj18)*(x557));
IkReal x568=((cj18)*(x558));
IkReal x569=((sj18)*(x557));
IkReal x570=((r02)*(x557));
IkReal x571=((sj18)*(x558));
IkReal x572=((IkReal(1.00000000000000))*(cj17)*(x558));
IkReal x573=((IkReal(1.00000000000000))*(cj17)*(x557));
evalcond[0]=((IkReal(1.00000000000000))+(((r01)*(x567)))+(((r00)*(x569)))+(((IkReal(-1.00000000000000))*(x564)*(x571)))+(((IkReal(-1.00000000000000))*(x563)*(x568))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x564)*(x569)))+(((IkReal(-1.00000000000000))*(r01)*(x568)))+(((IkReal(-1.00000000000000))*(x565)*(x571)))+(((IkReal(-1.00000000000000))*(x563)*(x567))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x559)*(x570)))+(((x558)*(x566)))+(((x562)*(x568)))+(((IkReal(-1.00000000000000))*(x560)*(x572)))+(((cj17)*(r01)*(x569)))+(((IkReal(-1.00000000000000))*(cj17)*(x565)*(x567))));
evalcond[3]=((((r01)*(sj17)*(x569)))+(((IkReal(-1.00000000000000))*(r00)*(x559)*(x567)))+(((IkReal(-1.00000000000000))*(r12)*(x572)))+(((x561)*(x568)))+(((IkReal(-1.00000000000000))*(x558)*(x559)*(x560)))+(((cj17)*(x570))));
evalcond[4]=((((cj15)*(sj14)))+(((cj17)*(r00)*(x568)))+(((cj14)*(sj15)))+(((x562)*(x567)))+(((IkReal(-1.00000000000000))*(x560)*(x573)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x571)))+(((x557)*(x566)))+(((r02)*(sj17)*(x558))));
evalcond[5]=((((cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(r01)*(x559)*(x571)))+(((IkReal(-1.00000000000000))*(x557)*(x559)*(x560)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r12)*(x573)))+(((x561)*(x567)))+(((IkReal(-1.00000000000000))*(r02)*(x572)))+(((r00)*(sj17)*(x568))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x574=IKsin(j13);
IkReal x575=IKcos(j13);
IkReal x576=((cj18)*(r01));
IkReal x577=((r11)*(sj18));
IkReal x578=((IkReal(1.00000000000000))*(x575));
IkReal x579=((sj18)*(x574));
IkReal x580=((r02)*(x574));
IkReal x581=((IkReal(1.00000000000000))*(cj18)*(x574));
IkReal x582=((cj18)*(r10)*(x575));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x578)))+(((r00)*(x579)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x578)))+(((x574)*(x576))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x576)*(x578)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x578)))+(((IkReal(-1.00000000000000))*(r11)*(x581)))+(((IkReal(-1.00000000000000))*(r10)*(x579))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj17)*(x580)))+(((r12)*(sj17)*(x575)))+(((cj17)*(r01)*(x579)))+(((IkReal(-1.00000000000000))*(cj17)*(x577)*(x578)))+(((cj17)*(x582)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x581))));
evalcond[3]=((((r01)*(sj17)*(x579)))+(((IkReal(-1.00000000000000))*(sj17)*(x577)*(x578)))+(((sj17)*(x582)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x581)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x578)))+(((cj17)*(x580))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x583=((r21)*(sj18));
IkReal x584=((IkReal(1.00000000000000))*(cj15));
IkReal x585=((r22)*(sj17));
IkReal x586=((sj15)*(sj17));
IkReal x587=((cj18)*(r20));
IkReal x588=((IkReal(1.00000000000000))*(sj15));
IkReal x589=((cj17)*(sj15));
IkReal x590=((cj15)*(cj17));
if( IKabs(((gconst10)*(((((x583)*(x589)))+(((r22)*(x590)))+(((IkReal(-1.00000000000000))*(cj17)*(x587)*(x588)))+(((cj15)*(sj17)*(x583)))+(((IkReal(-1.00000000000000))*(x585)*(x588)))+(((IkReal(-1.00000000000000))*(sj17)*(x584)*(x587))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((x583)*(x586)))+(((cj15)*(x585)))+(((IkReal(-1.00000000000000))*(cj17)*(x583)*(x584)))+(((r22)*(x589)))+(((IkReal(-1.00000000000000))*(x586)*(x587)))+(((x587)*(x590))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst10)*(((((x583)*(x589)))+(((r22)*(x590)))+(((IkReal(-1.00000000000000))*(cj17)*(x587)*(x588)))+(((cj15)*(sj17)*(x583)))+(((IkReal(-1.00000000000000))*(x585)*(x588)))+(((IkReal(-1.00000000000000))*(sj17)*(x584)*(x587)))))), ((gconst10)*(((((x583)*(x586)))+(((cj15)*(x585)))+(((IkReal(-1.00000000000000))*(cj17)*(x583)*(x584)))+(((r22)*(x589)))+(((IkReal(-1.00000000000000))*(x586)*(x587)))+(((x587)*(x590)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x591=IKsin(j14);
IkReal x592=IKcos(j14);
IkReal x593=((cj17)*(sj18));
IkReal x594=((IkReal(1.00000000000000))*(sj17));
IkReal x595=((cj18)*(r20));
IkReal x596=((sj13)*(sj17));
IkReal x597=((cj18)*(r10));
IkReal x598=((cj13)*(r02));
IkReal x599=((cj13)*(r01));
IkReal x600=((sj17)*(sj18));
IkReal x601=((IkReal(1.00000000000000))*(cj17));
IkReal x602=((cj15)*(x591));
IkReal x603=((sj15)*(x592));
IkReal x604=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x605=((sj15)*(x591));
IkReal x606=((cj13)*(cj18)*(r00));
IkReal x607=((cj15)*(x592));
IkReal x608=((x603)+(x602));
evalcond[0]=((((IkReal(-1.00000000000000))*(x607)))+(((r21)*(x593)))+(((IkReal(-1.00000000000000))*(r22)*(x594)))+(x605)+(((IkReal(-1.00000000000000))*(x595)*(x601))));
evalcond[1]=((((r21)*(x600)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x594)*(x595)))+(x608));
evalcond[2]=((((IkReal(-1.00000000000000))*(x593)*(x604)))+(((cj17)*(x606)))+(((IkReal(-1.00000000000000))*(x593)*(x599)))+(((cj17)*(sj13)*(x597)))+(((r12)*(x596)))+(x608)+(((sj17)*(x598))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x594)))+(((IkReal(-1.00000000000000))*(x605)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x601)))+(((sj17)*(x606)))+(((IkReal(-1.00000000000000))*(x598)*(x601)))+(x607)+(((x596)*(x597)))+(((IkReal(-1.00000000000000))*(sj18)*(x594)*(x599))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x609=((npy)*(sj18));
IkReal x610=((IkReal(1.00000000000000))*(sj17));
IkReal x611=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x609)))+(((IkReal(-1.00000000000000))*(cj17)*(x611)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(x610))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x610)*(x611)))+(((sj17)*(x609)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x612=(sj18)*(sj18);
IkReal x613=(cj18)*(cj18);
IkReal x614=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x615=((IkReal(1.00000000000000))*(x612));
IkReal x616=((IkReal(1.00000000000000))*(x613));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(x615)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x615)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x614)))+(((IkReal(-1.00000000000000))*(x616)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x616)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x614)))));
IkReal x617=(sj18)*(sj18);
IkReal x618=(cj18)*(cj18);
IkReal x619=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x620=((IkReal(1.00000000000000))*(x617));
IkReal x621=((IkReal(1.00000000000000))*(x618));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x619)))+(((IkReal(-1.00000000000000))*(x621)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x619)))+(((IkReal(-1.00000000000000))*(x620)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x621)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x620)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x622=((r21)*(sj18));
IkReal x623=((cj15)*(cj17));
IkReal x624=((sj15)*(sj17));
IkReal x625=((cj15)*(sj17));
IkReal x626=((cj17)*(sj15));
IkReal x627=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst12)*(((((cj18)*(r20)*(x626)))+(((IkReal(-1.00000000000000))*(x622)*(x626)))+(((r22)*(x623)))+(((r22)*(x624)))+(((IkReal(-1.00000000000000))*(x625)*(x627)))+(((x622)*(x625))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x623)*(x627)))+(((r22)*(x626)))+(((IkReal(-1.00000000000000))*(r22)*(x625)))+(((IkReal(-1.00000000000000))*(x624)*(x627)))+(((x622)*(x624)))+(((x622)*(x623))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst12)*(((((cj18)*(r20)*(x626)))+(((IkReal(-1.00000000000000))*(x622)*(x626)))+(((r22)*(x623)))+(((r22)*(x624)))+(((IkReal(-1.00000000000000))*(x625)*(x627)))+(((x622)*(x625)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(x623)*(x627)))+(((r22)*(x626)))+(((IkReal(-1.00000000000000))*(r22)*(x625)))+(((IkReal(-1.00000000000000))*(x624)*(x627)))+(((x622)*(x624)))+(((x622)*(x623)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x628=IKsin(j14);
IkReal x629=IKcos(j14);
IkReal x630=((IkReal(1.00000000000000))*(sj17));
IkReal x631=((cj18)*(r20));
IkReal x632=((r21)*(sj18));
IkReal x633=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((IkReal(-1.00000000000000))*(x629)*(x633)))+(((sj15)*(x628)))+(((cj17)*(x632)))+(((IkReal(-1.00000000000000))*(cj17)*(x631)))+(((IkReal(-1.00000000000000))*(r22)*(x630))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj15)*(x629)))+(((IkReal(-1.00000000000000))*(x630)*(x631)))+(((IkReal(-1.00000000000000))*(x628)*(x633)))+(((cj17)*(r22)))+(((sj17)*(x632))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x634=(sj18)*(sj18);
IkReal x635=(cj18)*(cj18);
IkReal x636=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x637=((IkReal(1.00000000000000))*(x634));
IkReal x638=((IkReal(1.00000000000000))*(x635));
gconst13=IKsign(((((IkReal(-1.00000000000000))*(x637)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x637)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x636)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x636)))+(((IkReal(-1.00000000000000))*(x638)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x638)*((r01)*(r01))))));
IkReal x639=(sj18)*(sj18);
IkReal x640=(cj18)*(cj18);
IkReal x641=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x642=((IkReal(1.00000000000000))*(x639));
IkReal x643=((IkReal(1.00000000000000))*(x640));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x642)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x642)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x643)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x641)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x641)))+(((IkReal(-1.00000000000000))*(x643)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x644=IKsin(j13);
IkReal x645=IKcos(j13);
IkReal x646=((IkReal(1.00000000000000))*(sj17));
IkReal x647=((r11)*(sj18));
IkReal x648=((r10)*(sj17));
IkReal x649=((cj17)*(r10));
IkReal x650=((IkReal(1.00000000000000))*(r11));
IkReal x651=((IkReal(1.00000000000000))*(r10));
IkReal x652=((IkReal(1.00000000000000))*(r00));
IkReal x653=((r12)*(sj17));
IkReal x654=((cj18)*(x644));
IkReal x655=((cj18)*(x645));
IkReal x656=((sj18)*(x644));
IkReal x657=((r02)*(x644));
IkReal x658=((sj18)*(x645));
IkReal x659=((IkReal(1.00000000000000))*(cj17)*(x645));
IkReal x660=((IkReal(1.00000000000000))*(cj17)*(x644));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x651)*(x658)))+(((IkReal(-1.00000000000000))*(x650)*(x655)))+(((r00)*(x656)))+(((r01)*(x654))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x651)*(x656)))+(((IkReal(-1.00000000000000))*(r01)*(x655)))+(((IkReal(-1.00000000000000))*(x650)*(x654)))+(((IkReal(-1.00000000000000))*(x652)*(x658))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x652)*(x654)))+(((IkReal(-1.00000000000000))*(x646)*(x657)))+(((x645)*(x653)))+(((x649)*(x655)))+(((IkReal(-1.00000000000000))*(x647)*(x659)))+(((cj17)*(r01)*(x656))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x659)))+(((cj17)*(x657)))+(((IkReal(-1.00000000000000))*(x645)*(x646)*(x647)))+(((r01)*(sj17)*(x656)))+(((x648)*(x655)))+(((IkReal(-1.00000000000000))*(r00)*(x646)*(x654))));
evalcond[4]=((((cj15)*(sj14)))+(((r02)*(sj17)*(x645)))+(((IkReal(-1.00000000000000))*(x647)*(x660)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x658)))+(((cj17)*(r00)*(x655)))+(((cj14)*(sj15)))+(((x644)*(x653)))+(((x649)*(x654))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x646)*(x658)))+(((IkReal(-1.00000000000000))*(x644)*(x646)*(x647)))+(((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((x648)*(x654)))+(((IkReal(-1.00000000000000))*(r12)*(x660)))+(((r00)*(sj17)*(x655)))+(((IkReal(-1.00000000000000))*(r02)*(x659)))+(((sj14)*(sj15))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x661=IKsin(j13);
IkReal x662=IKcos(j13);
IkReal x663=((cj18)*(r01));
IkReal x664=((r11)*(sj18));
IkReal x665=((IkReal(1.00000000000000))*(x662));
IkReal x666=((sj18)*(x661));
IkReal x667=((r02)*(x661));
IkReal x668=((IkReal(1.00000000000000))*(cj18)*(x661));
IkReal x669=((cj18)*(r10)*(x662));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x665)))+(((r00)*(x666)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x665)))+(((x661)*(x663))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x663)*(x665)))+(((IkReal(-1.00000000000000))*(r11)*(x668)))+(((IkReal(-1.00000000000000))*(r10)*(x666)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x665))));
evalcond[2]=((((cj17)*(r01)*(x666)))+(((cj17)*(x669)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x668)))+(((IkReal(-1.00000000000000))*(cj17)*(x664)*(x665)))+(((IkReal(-1.00000000000000))*(sj17)*(x667)))+(((r12)*(sj17)*(x662))));
evalcond[3]=((((r01)*(sj17)*(x666)))+(((cj17)*(x667)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x665)))+(((sj17)*(x669)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x668)))+(((IkReal(-1.00000000000000))*(sj17)*(x664)*(x665))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x670=((cj15)*(cj17));
IkReal x671=((r21)*(sj18));
IkReal x672=((sj15)*(sj17));
IkReal x673=((cj15)*(sj17));
IkReal x674=((cj17)*(sj15));
IkReal x675=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst14)*(((((cj18)*(r20)*(x674)))+(((x671)*(x673)))+(((r22)*(x672)))+(((r22)*(x670)))+(((IkReal(-1.00000000000000))*(x671)*(x674)))+(((IkReal(-1.00000000000000))*(x673)*(x675))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((x671)*(x672)))+(((r22)*(x674)))+(((IkReal(-1.00000000000000))*(r22)*(x673)))+(((x670)*(x671)))+(((IkReal(-1.00000000000000))*(x670)*(x675)))+(((IkReal(-1.00000000000000))*(x672)*(x675))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst14)*(((((cj18)*(r20)*(x674)))+(((x671)*(x673)))+(((r22)*(x672)))+(((r22)*(x670)))+(((IkReal(-1.00000000000000))*(x671)*(x674)))+(((IkReal(-1.00000000000000))*(x673)*(x675)))))), ((gconst14)*(((((x671)*(x672)))+(((r22)*(x674)))+(((IkReal(-1.00000000000000))*(r22)*(x673)))+(((x670)*(x671)))+(((IkReal(-1.00000000000000))*(x670)*(x675)))+(((IkReal(-1.00000000000000))*(x672)*(x675)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x676=IKsin(j14);
IkReal x677=IKcos(j14);
IkReal x678=((cj17)*(sj18));
IkReal x679=((IkReal(1.00000000000000))*(sj17));
IkReal x680=((cj18)*(r20));
IkReal x681=((sj13)*(sj17));
IkReal x682=((cj18)*(r10));
IkReal x683=((cj13)*(r02));
IkReal x684=((cj13)*(r01));
IkReal x685=((sj17)*(sj18));
IkReal x686=((IkReal(1.00000000000000))*(cj17));
IkReal x687=((sj15)*(x676));
IkReal x688=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x689=((sj15)*(x677));
IkReal x690=((cj15)*(x676));
IkReal x691=((cj13)*(cj18)*(r00));
IkReal x692=((IkReal(1.00000000000000))*(cj15)*(x677));
evalcond[0]=((((r21)*(x678)))+(((IkReal(-1.00000000000000))*(r22)*(x679)))+(((IkReal(-1.00000000000000))*(x680)*(x686)))+(x687)+(((IkReal(-1.00000000000000))*(x692))));
evalcond[1]=((((r21)*(x685)))+(((IkReal(-1.00000000000000))*(x679)*(x680)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x689)))+(((IkReal(-1.00000000000000))*(x690))));
evalcond[2]=((((sj17)*(x683)))+(((IkReal(-1.00000000000000))*(x678)*(x684)))+(((cj17)*(x691)))+(((cj17)*(sj13)*(x682)))+(((IkReal(-1.00000000000000))*(x678)*(x688)))+(x689)+(x690)+(((r12)*(x681))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj13)*(x686)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x679)))+(((x681)*(x682)))+(x687)+(((sj17)*(x691)))+(((IkReal(-1.00000000000000))*(x692)))+(((IkReal(-1.00000000000000))*(sj18)*(x679)*(x684)))+(((IkReal(-1.00000000000000))*(x683)*(x686))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x693=((cj16)*(sj17));
IkReal x694=((cj16)*(cj17)*(cj18));
IkReal x695=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r11)*(x695)))+(((r12)*(x693)))+(((r10)*(x694))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x695)))+(((r02)*(x693)))+(((r00)*(x694))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r11)*(x695)))+(((r12)*(x693)))+(((r10)*(x694)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x695)))+(((r02)*(x693)))+(((r00)*(x694)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x696=IKsin(j13);
IkReal x697=IKcos(j13);
IkReal x698=((IkReal(1.00000000000000))*(sj17));
IkReal x699=((IkReal(1.00000000000000))*(cj17));
IkReal x700=((r00)*(x696));
IkReal x701=((r02)*(x696));
IkReal x702=((r01)*(x696));
IkReal x703=((r10)*(x697));
IkReal x704=((r12)*(x697));
IkReal x705=((r11)*(sj18)*(x697));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj18)*(r11)*(x697)))+(((cj18)*(x702)))+(cj16)+(((IkReal(-1.00000000000000))*(sj18)*(x703)))+(((sj18)*(x700))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj18)*(x699)*(x700)))+(((IkReal(-1.00000000000000))*(x699)*(x705)))+(((IkReal(-1.00000000000000))*(x698)*(x701)))+(((cj17)*(sj18)*(x702)))+(((sj17)*(x704)))+(((cj17)*(cj18)*(x703))));
evalcond[2]=((((cj18)*(sj17)*(x703)))+(((cj17)*(x701)))+(((sj17)*(sj18)*(x702)))+(sj16)+(((IkReal(-1.00000000000000))*(x699)*(x704)))+(((IkReal(-1.00000000000000))*(cj18)*(x698)*(x700)))+(((IkReal(-1.00000000000000))*(x698)*(x705))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x706=((IkReal(1.00000000000000))*(sj13));
IkReal x707=((r10)*(sj18));
IkReal x708=((IkReal(1.00000000000000))*(cj18));
IkReal x709=((cj13)*(r11));
IkReal x710=((r01)*(sj13));
IkReal x711=((cj13)*(r12));
IkReal x712=((cj18)*(r00));
IkReal x713=((npy)*(sj18));
IkReal x714=((sj17)*(sj18));
IkReal x715=((IkReal(1.00000000000000))*(cj17));
IkReal x716=((r00)*(sj18));
IkReal x717=((IkReal(1.00000000000000))*(cj13));
IkReal x718=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((cj17)*(x713)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x708)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x707)*(x717)))+(((cj18)*(x710)))+(((IkReal(-1.00000000000000))*(x708)*(x709)))+(((sj13)*(x716))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x708)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x713))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x706)*(x707)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x708)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x706)))+(((IkReal(-1.00000000000000))*(x716)*(x717))));
evalcond[7]=((((cj17)*(x718)))+(((IkReal(-1.00000000000000))*(cj17)*(x706)*(x712)))+(((cj17)*(sj18)*(x710)))+(((sj17)*(x711)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x706)))+(((IkReal(-1.00000000000000))*(sj18)*(x709)*(x715))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x711)*(x715)))+(((cj17)*(r02)*(sj13)))+(((x710)*(x714)))+(((IkReal(-1.00000000000000))*(x709)*(x714)))+(((IkReal(-1.00000000000000))*(sj17)*(x706)*(x712)))+(((sj17)*(x718))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x719=((cj15)*(cj17));
IkReal x720=((r21)*(sj18));
IkReal x721=((cj18)*(r20));
IkReal x722=((sj15)*(sj17));
IkReal x723=((cj15)*(sj17));
IkReal x724=((cj17)*(sj15));
if( IKabs(((gconst4)*(((((r22)*(x719)))+(((IkReal(-1.00000000000000))*(x721)*(x723)))+(((IkReal(-1.00000000000000))*(x721)*(x724)))+(((x720)*(x724)))+(((x720)*(x723)))+(((IkReal(-1.00000000000000))*(r22)*(x722))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x721)*(x722)))+(((x720)*(x722)))+(((x719)*(x721)))+(((IkReal(-1.00000000000000))*(x719)*(x720)))+(((r22)*(x723)))+(((r22)*(x724))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst4)*(((((r22)*(x719)))+(((IkReal(-1.00000000000000))*(x721)*(x723)))+(((IkReal(-1.00000000000000))*(x721)*(x724)))+(((x720)*(x724)))+(((x720)*(x723)))+(((IkReal(-1.00000000000000))*(r22)*(x722)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x721)*(x722)))+(((x720)*(x722)))+(((x719)*(x721)))+(((IkReal(-1.00000000000000))*(x719)*(x720)))+(((r22)*(x723)))+(((r22)*(x724)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x725=IKsin(j14);
IkReal x726=IKcos(j14);
IkReal x727=((cj17)*(sj18));
IkReal x728=((IkReal(1.00000000000000))*(sj17));
IkReal x729=((cj18)*(r20));
IkReal x730=((sj13)*(sj17));
IkReal x731=((cj18)*(r10));
IkReal x732=((cj13)*(r02));
IkReal x733=((cj13)*(r01));
IkReal x734=((sj17)*(sj18));
IkReal x735=((IkReal(1.00000000000000))*(cj17));
IkReal x736=((cj15)*(x725));
IkReal x737=((sj15)*(x726));
IkReal x738=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x739=((sj15)*(x725));
IkReal x740=((cj13)*(cj18)*(r00));
IkReal x741=((cj15)*(x726));
IkReal x742=((x737)+(x736));
evalcond[0]=((((IkReal(-1.00000000000000))*(x741)))+(x739)+(((IkReal(-1.00000000000000))*(r22)*(x728)))+(((r21)*(x727)))+(((IkReal(-1.00000000000000))*(x729)*(x735))));
evalcond[1]=((((cj17)*(r22)))+(x742)+(((r21)*(x734)))+(((IkReal(-1.00000000000000))*(x728)*(x729))));
evalcond[2]=((((r12)*(x730)))+(((cj17)*(x740)))+(((IkReal(-1.00000000000000))*(x727)*(x738)))+(((sj17)*(x732)))+(((cj17)*(sj13)*(x731)))+(x742)+(((IkReal(-1.00000000000000))*(x727)*(x733))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x728)))+(((IkReal(-1.00000000000000))*(x732)*(x735)))+(((IkReal(-1.00000000000000))*(x739)))+(x741)+(((sj17)*(x740)))+(((IkReal(-1.00000000000000))*(sj18)*(x728)*(x733)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x735)))+(((x730)*(x731))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x743=((IkReal(1.00000000000000))*(sj13));
IkReal x744=((r10)*(sj18));
IkReal x745=((IkReal(1.00000000000000))*(cj18));
IkReal x746=((cj13)*(r11));
IkReal x747=((r01)*(sj13));
IkReal x748=((cj13)*(r12));
IkReal x749=((cj18)*(r00));
IkReal x750=((npy)*(sj18));
IkReal x751=((sj17)*(sj18));
IkReal x752=((IkReal(1.00000000000000))*(cj17));
IkReal x753=((r00)*(sj18));
IkReal x754=((IkReal(1.00000000000000))*(cj13));
IkReal x755=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj17)*(x750)))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x745)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj13)*(x753)))+(((IkReal(-1.00000000000000))*(x745)*(x746)))+(((IkReal(-1.00000000000000))*(x744)*(x754)))+(((cj18)*(x747))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((sj17)*(x750)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x745))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj18)*(r11)*(x743)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x745)))+(((IkReal(-1.00000000000000))*(x753)*(x754)))+(((IkReal(-1.00000000000000))*(x743)*(x744))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj18)*(x746)*(x752)))+(((cj17)*(x755)))+(((IkReal(-1.00000000000000))*(cj17)*(x743)*(x749)))+(((cj17)*(sj18)*(x747)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x743)))+(((sj17)*(x748))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj17)*(x743)*(x749)))+(((x747)*(x751)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x746)*(x751)))+(((sj17)*(x755)))+(((IkReal(-1.00000000000000))*(x748)*(x752))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x756=((r21)*(sj18));
IkReal x757=((cj15)*(cj17));
IkReal x758=((sj15)*(sj17));
IkReal x759=((cj15)*(sj17));
IkReal x760=((cj17)*(sj15));
IkReal x761=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst5)*(((((x756)*(x759)))+(((IkReal(-1.00000000000000))*(x756)*(x760)))+(((r22)*(x757)))+(((r22)*(x758)))+(((cj18)*(r20)*(x760)))+(((IkReal(-1.00000000000000))*(x759)*(x761))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((x756)*(x757)))+(((x756)*(x758)))+(((IkReal(-1.00000000000000))*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(x757)*(x761)))+(((IkReal(-1.00000000000000))*(r22)*(x759)))+(((r22)*(x760))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst5)*(((((x756)*(x759)))+(((IkReal(-1.00000000000000))*(x756)*(x760)))+(((r22)*(x757)))+(((r22)*(x758)))+(((cj18)*(r20)*(x760)))+(((IkReal(-1.00000000000000))*(x759)*(x761)))))), ((gconst5)*(((((x756)*(x757)))+(((x756)*(x758)))+(((IkReal(-1.00000000000000))*(x758)*(x761)))+(((IkReal(-1.00000000000000))*(x757)*(x761)))+(((IkReal(-1.00000000000000))*(r22)*(x759)))+(((r22)*(x760)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x762=IKsin(j14);
IkReal x763=IKcos(j14);
IkReal x764=((cj17)*(sj18));
IkReal x765=((IkReal(1.00000000000000))*(sj17));
IkReal x766=((cj18)*(r20));
IkReal x767=((sj13)*(sj17));
IkReal x768=((cj18)*(r10));
IkReal x769=((cj13)*(r02));
IkReal x770=((cj13)*(r01));
IkReal x771=((sj17)*(sj18));
IkReal x772=((IkReal(1.00000000000000))*(cj17));
IkReal x773=((sj15)*(x762));
IkReal x774=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x775=((sj15)*(x763));
IkReal x776=((cj15)*(x762));
IkReal x777=((cj13)*(cj18)*(r00));
IkReal x778=((IkReal(1.00000000000000))*(cj15)*(x763));
evalcond[0]=((((r21)*(x764)))+(((IkReal(-1.00000000000000))*(x766)*(x772)))+(x773)+(((IkReal(-1.00000000000000))*(x778)))+(((IkReal(-1.00000000000000))*(r22)*(x765))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x765)*(x766)))+(((cj17)*(r22)))+(((r21)*(x771)))+(((IkReal(-1.00000000000000))*(x776)))+(((IkReal(-1.00000000000000))*(x775))));
evalcond[2]=((((cj17)*(x777)))+(((cj17)*(sj13)*(x768)))+(((IkReal(-1.00000000000000))*(x764)*(x774)))+(((IkReal(-1.00000000000000))*(x764)*(x770)))+(((r12)*(x767)))+(x776)+(x775)+(((sj17)*(x769))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x765)))+(((IkReal(-1.00000000000000))*(sj18)*(x765)*(x770)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x772)))+(((IkReal(-1.00000000000000))*(x769)*(x772)))+(x773)+(((IkReal(-1.00000000000000))*(x778)))+(((sj17)*(x777)))+(((x767)*(x768))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x779=((sj15)*(sj16));
IkReal x780=((r22)*(sj17));
IkReal x781=((cj18)*(r21));
IkReal x782=((r20)*(sj18));
IkReal x783=((cj15)*(sj16));
IkReal x784=((cj17)*(r21)*(sj18));
IkReal x785=((cj17)*(cj18)*(r20));
if( IKabs(((gconst3)*(((((x779)*(x780)))+(((x779)*(x785)))+(((cj15)*(x782)))+(((cj15)*(x781)))+(((IkReal(-1.00000000000000))*(x779)*(x784))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((sj15)*(x782)))+(((sj15)*(x781)))+(((x783)*(x784)))+(((IkReal(-1.00000000000000))*(x780)*(x783)))+(((IkReal(-1.00000000000000))*(x783)*(x785))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst3)*(((((x779)*(x780)))+(((x779)*(x785)))+(((cj15)*(x782)))+(((cj15)*(x781)))+(((IkReal(-1.00000000000000))*(x779)*(x784)))))), ((gconst3)*(((((sj15)*(x782)))+(((sj15)*(x781)))+(((x783)*(x784)))+(((IkReal(-1.00000000000000))*(x780)*(x783)))+(((IkReal(-1.00000000000000))*(x783)*(x785)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x786=IKsin(j14);
IkReal x787=IKcos(j14);
IkReal x788=((IkReal(1.00000000000000))*(cj18));
IkReal x789=((cj13)*(r01));
IkReal x790=((IkReal(1.00000000000000))*(sj18));
IkReal x791=((cj13)*(r00));
IkReal x792=((sj13)*(sj17));
IkReal x793=((cj18)*(r10));
IkReal x794=((r21)*(sj18));
IkReal x795=((IkReal(1.00000000000000))*(sj16));
IkReal x796=((cj13)*(r02));
IkReal x797=((IkReal(1.00000000000000))*(cj17));
IkReal x798=((sj13)*(x790));
IkReal x799=((cj16)*(x787));
IkReal x800=((sj15)*(x786));
IkReal x801=((cj15)*(x786));
IkReal x802=((cj15)*(x787));
IkReal x803=((sj15)*(x787));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x795)*(x803)))+(((IkReal(-1.00000000000000))*(x795)*(x801))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x802)))+(((cj17)*(x794)))+(((IkReal(-1.00000000000000))*(cj17)*(r20)*(x788)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x800));
evalcond[2]=((((sj17)*(x794)))+(((sj15)*(x799)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x788)))+(((cj16)*(x801))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x788)*(x789)))+(((IkReal(-1.00000000000000))*(x790)*(x791)))+(((IkReal(-1.00000000000000))*(x795)*(x802)))+(((IkReal(-1.00000000000000))*(r10)*(x798)))+(((sj16)*(x800)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(x788))));
evalcond[4]=((((cj17)*(cj18)*(x791)))+(((sj17)*(x796)))+(((IkReal(-1.00000000000000))*(cj17)*(x789)*(x790)))+(((cj17)*(sj13)*(x793)))+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x798)))+(x801)+(x803)+(((r12)*(x792))));
evalcond[5]=((((IkReal(-1.00000000000000))*(sj17)*(x789)*(x790)))+(((IkReal(-1.00000000000000))*(r11)*(x790)*(x792)))+(((IkReal(-1.00000000000000))*(x796)*(x797)))+(((cj18)*(sj17)*(x791)))+(((x792)*(x793)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x797)))+(((IkReal(-1.00000000000000))*(cj16)*(x800)))+(((cj15)*(x799))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x804=((sj15)*(sj16));
IkReal x805=((r22)*(sj17));
IkReal x806=((cj18)*(r21));
IkReal x807=((r20)*(sj18));
IkReal x808=((cj15)*(sj16));
IkReal x809=((cj17)*(r21)*(sj18));
IkReal x810=((cj17)*(cj18)*(r20));
if( IKabs(((gconst2)*(((((x804)*(x805)))+(((IkReal(-1.00000000000000))*(x804)*(x809)))+(((x804)*(x810)))+(((cj15)*(x807)))+(((cj15)*(x806))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x805)*(x808)))+(((IkReal(-1.00000000000000))*(x808)*(x810)))+(((sj15)*(x807)))+(((sj15)*(x806)))+(((x808)*(x809))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst2)*(((((x804)*(x805)))+(((IkReal(-1.00000000000000))*(x804)*(x809)))+(((x804)*(x810)))+(((cj15)*(x807)))+(((cj15)*(x806)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x805)*(x808)))+(((IkReal(-1.00000000000000))*(x808)*(x810)))+(((sj15)*(x807)))+(((sj15)*(x806)))+(((x808)*(x809)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[3];
IkReal x811=IKsin(j14);
IkReal x812=IKcos(j14);
IkReal x813=((IkReal(1.00000000000000))*(sj17));
IkReal x814=((cj18)*(r20));
IkReal x815=((r21)*(sj18));
IkReal x816=((IkReal(1.00000000000000))*(x812));
IkReal x817=((cj15)*(x811));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj15)*(sj16)*(x816)))+(((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(sj16)*(x817))));
evalcond[1]=((((cj17)*(x815)))+(((IkReal(-1.00000000000000))*(cj17)*(x814)))+(((IkReal(-1.00000000000000))*(r22)*(x813)))+(((sj15)*(x811)))+(((IkReal(-1.00000000000000))*(cj15)*(x816))));
evalcond[2]=((((sj17)*(x815)))+(((cj16)*(sj15)*(x812)))+(((cj16)*(x817)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x813)*(x814))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x818=(sj18)*(sj18);
IkReal x819=(cj18)*(cj18);
IkReal x820=((r00)*(r11));
IkReal x821=((r02)*(sj17));
IkReal x822=((cj17)*(x818));
IkReal x823=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x824=((cj17)*(x819));
IkReal x825=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x822)*(x823)))+(((x820)*(x824)))+(((x820)*(x822)))+(((cj18)*(r11)*(x821)))+(((r10)*(sj18)*(x821)))+(((IkReal(-1.00000000000000))*(x823)*(x824)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x825)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x825)))));
IkReal x826=(sj18)*(sj18);
IkReal x827=(cj18)*(cj18);
IkReal x828=((r00)*(r11));
IkReal x829=((r02)*(sj17));
IkReal x830=((cj17)*(x826));
IkReal x831=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x832=((cj17)*(x827));
IkReal x833=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((cj18)*(r11)*(x829)))+(((r10)*(sj18)*(x829)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x833)))+(((IkReal(-1.00000000000000))*(x830)*(x831)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x833)))+(((x828)*(x830)))+(((x828)*(x832)))+(((IkReal(-1.00000000000000))*(x831)*(x832))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x834=((cj16)*(sj17));
IkReal x835=((cj16)*(cj17)*(cj18));
IkReal x836=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst6)*(((((r10)*(x835)))+(((r12)*(x834)))+(((IkReal(-1.00000000000000))*(r11)*(x836))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r02)*(x834)))+(((r00)*(x835)))+(((IkReal(-1.00000000000000))*(r01)*(x836))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst6)*(((((r10)*(x835)))+(((r12)*(x834)))+(((IkReal(-1.00000000000000))*(r11)*(x836)))))), ((gconst6)*(((((r02)*(x834)))+(((r00)*(x835)))+(((IkReal(-1.00000000000000))*(r01)*(x836)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x837=IKsin(j13);
IkReal x838=IKcos(j13);
IkReal x839=((IkReal(1.00000000000000))*(sj17));
IkReal x840=((r11)*(sj18));
IkReal x841=((r10)*(sj17));
IkReal x842=((cj17)*(r10));
IkReal x843=((cj14)*(cj15));
IkReal x844=((IkReal(1.00000000000000))*(r11));
IkReal x845=((IkReal(1.00000000000000))*(r10));
IkReal x846=((IkReal(1.00000000000000))*(r00));
IkReal x847=((r12)*(sj17));
IkReal x848=((sj14)*(sj15));
IkReal x849=((cj18)*(x837));
IkReal x850=((cj18)*(x838));
IkReal x851=((sj18)*(x837));
IkReal x852=((r02)*(x837));
IkReal x853=((sj18)*(x838));
IkReal x854=((IkReal(1.00000000000000))*(cj17)*(x838));
IkReal x855=((IkReal(1.00000000000000))*(cj17)*(x837));
evalcond[0]=((((r00)*(x851)))+(((IkReal(-1.00000000000000))*(x844)*(x850)))+(((IkReal(-1.00000000000000))*(x845)*(x853)))+(((r01)*(x849)))+(cj16));
evalcond[1]=((((IkReal(-1.00000000000000))*(x846)*(x853)))+(((IkReal(-1.00000000000000))*(r01)*(x850)))+(((IkReal(-1.00000000000000))*(x845)*(x851)))+(((IkReal(-1.00000000000000))*(x844)*(x849)))+(((IkReal(-1.00000000000000))*(sj16)*(x843)))+(((sj16)*(x848))));
evalcond[2]=((((x838)*(x847)))+(((x842)*(x850)))+(((IkReal(-1.00000000000000))*(x839)*(x852)))+(((IkReal(-1.00000000000000))*(cj17)*(x846)*(x849)))+(((IkReal(-1.00000000000000))*(x840)*(x854)))+(((cj17)*(r01)*(x851))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x854)))+(((r01)*(sj17)*(x851)))+(((x841)*(x850)))+(sj16)+(((cj17)*(x852)))+(((IkReal(-1.00000000000000))*(x838)*(x839)*(x840)))+(((IkReal(-1.00000000000000))*(r00)*(x839)*(x849))));
evalcond[4]=((((cj15)*(sj14)))+(((cj17)*(r00)*(x850)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x853)))+(((cj14)*(sj15)))+(((x837)*(x847)))+(((x842)*(x849)))+(((IkReal(-1.00000000000000))*(x840)*(x855)))+(((r02)*(sj17)*(x838))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x837)*(x839)*(x840)))+(((cj16)*(x843)))+(((IkReal(-1.00000000000000))*(r12)*(x855)))+(((IkReal(-1.00000000000000))*(r01)*(x839)*(x853)))+(((IkReal(-1.00000000000000))*(cj16)*(x848)))+(((r00)*(sj17)*(x850)))+(((IkReal(-1.00000000000000))*(r02)*(x854)))+(((x841)*(x849))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x856=((IkReal(4.00000000000000))*(npx));
IkReal x857=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x857)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x856))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x856)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x857)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x857)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x856)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x856)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x857)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x857)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x856)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x856)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x857)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x858=IKsin(j15);
IkReal x859=((npy)*(sj18));
IkReal x860=((IkReal(1.00000000000000))*(sj17));
IkReal x861=((cj18)*(npx));
IkReal x862=((IkReal(0.250000000000000))*(x858));
evalcond[0]=((((cj18)*(npy)))+(((sj16)*(x862)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x860)))+(((cj17)*(x859)))+(((IkReal(-1.00000000000000))*(cj17)*(x861)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((sj17)*(x859)))+(((IkReal(-1.00000000000000))*(cj16)*(x862)))+(((IkReal(-1.00000000000000))*(x860)*(x861)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x863=(sj18)*(sj18);
IkReal x864=(cj18)*(cj18);
IkReal x865=((r00)*(r11));
IkReal x866=((r02)*(sj17));
IkReal x867=((cj17)*(x863));
IkReal x868=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x869=((cj17)*(x864));
IkReal x870=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x868)*(x869)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x870)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x870)))+(((r10)*(sj18)*(x866)))+(((IkReal(-1.00000000000000))*(x867)*(x868)))+(((x865)*(x867)))+(((x865)*(x869)))+(((cj18)*(r11)*(x866)))));
IkReal x871=(sj18)*(sj18);
IkReal x872=(cj18)*(cj18);
IkReal x873=((r00)*(r11));
IkReal x874=((r02)*(sj17));
IkReal x875=((cj17)*(x871));
IkReal x876=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x877=((cj17)*(x872));
IkReal x878=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x876)*(x877)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x878)))+(((x873)*(x877)))+(((x873)*(x875)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x878)))+(((r10)*(sj18)*(x874)))+(((IkReal(-1.00000000000000))*(x875)*(x876)))+(((cj18)*(r11)*(x874))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x879=((npy)*(sj18));
IkReal x880=((IkReal(1.00000000000000))*(sj17));
IkReal x881=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(x880)))+(((IkReal(-1.00000000000000))*(cj17)*(x881)))+(((cj17)*(x879))));
evalcond[4]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((sj17)*(x879)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(x880)*(x881))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
IkReal x882=(sj18)*(sj18);
IkReal x883=(cj18)*(cj18);
IkReal x884=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst7=IKsign(((((r10)*(r11)*(x884)))+(((x882)*((r10)*(r10))))+(((x882)*((r00)*(r00))))+(((x883)*((r01)*(r01))))+(((x883)*((r11)*(r11))))+(((r00)*(r01)*(x884)))));
IkReal x885=(sj18)*(sj18);
IkReal x886=(cj18)*(cj18);
IkReal x887=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x885)*((r10)*(r10))))+(((x885)*((r00)*(r00))))+(((r10)*(r11)*(x887)))+(((r00)*(r01)*(x887)))+(((x886)*((r01)*(r01))))+(((x886)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x888=((r21)*(sj18));
IkReal x889=((IkReal(1.00000000000000))*(cj15));
IkReal x890=((r22)*(sj17));
IkReal x891=((sj15)*(sj17));
IkReal x892=((cj18)*(r20));
IkReal x893=((IkReal(1.00000000000000))*(sj15));
IkReal x894=((cj17)*(sj15));
IkReal x895=((cj15)*(cj17));
if( IKabs(((gconst8)*(((((cj15)*(sj17)*(x888)))+(((IkReal(-1.00000000000000))*(sj17)*(x889)*(x892)))+(((IkReal(-1.00000000000000))*(cj17)*(x892)*(x893)))+(((r22)*(x895)))+(((x888)*(x894)))+(((IkReal(-1.00000000000000))*(x890)*(x893))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(cj17)*(x888)*(x889)))+(((cj15)*(x890)))+(((x892)*(x895)))+(((IkReal(-1.00000000000000))*(x891)*(x892)))+(((r22)*(x894)))+(((x888)*(x891))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst8)*(((((cj15)*(sj17)*(x888)))+(((IkReal(-1.00000000000000))*(sj17)*(x889)*(x892)))+(((IkReal(-1.00000000000000))*(cj17)*(x892)*(x893)))+(((r22)*(x895)))+(((x888)*(x894)))+(((IkReal(-1.00000000000000))*(x890)*(x893)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(cj17)*(x888)*(x889)))+(((cj15)*(x890)))+(((x892)*(x895)))+(((IkReal(-1.00000000000000))*(x891)*(x892)))+(((r22)*(x894)))+(((x888)*(x891)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x896=IKsin(j14);
IkReal x897=IKcos(j14);
IkReal x898=((IkReal(1.00000000000000))*(sj17));
IkReal x899=((cj18)*(r20));
IkReal x900=((r21)*(sj18));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj15)*(x897)))+(((IkReal(-1.00000000000000))*(cj17)*(x899)))+(((cj17)*(x900)))+(((IkReal(-1.00000000000000))*(r22)*(x898)))+(((sj15)*(x896))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x898)*(x899)))+(((cj15)*(x896)))+(((sj17)*(x900)))+(((cj17)*(r22)))+(((sj15)*(x897))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x901=(sj18)*(sj18);
IkReal x902=(cj18)*(cj18);
IkReal x903=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst9=IKsign(((((x901)*((r00)*(r00))))+(((r00)*(r01)*(x903)))+(((x902)*((r01)*(r01))))+(((x902)*((r11)*(r11))))+(((r10)*(r11)*(x903)))+(((x901)*((r10)*(r10))))));
IkReal x904=(sj18)*(sj18);
IkReal x905=(cj18)*(cj18);
IkReal x906=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((r00)*(r01)*(x906)))+(((x905)*((r01)*(r01))))+(((r10)*(r11)*(x906)))+(((x905)*((r11)*(r11))))+(((x904)*((r00)*(r00))))+(((x904)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x907=IKsin(j13);
IkReal x908=IKcos(j13);
IkReal x909=((IkReal(1.00000000000000))*(sj17));
IkReal x910=((r11)*(sj18));
IkReal x911=((r10)*(sj17));
IkReal x912=((cj17)*(r10));
IkReal x913=((IkReal(1.00000000000000))*(r11));
IkReal x914=((IkReal(1.00000000000000))*(r10));
IkReal x915=((IkReal(1.00000000000000))*(r00));
IkReal x916=((r12)*(sj17));
IkReal x917=((cj18)*(x907));
IkReal x918=((cj18)*(x908));
IkReal x919=((sj18)*(x907));
IkReal x920=((r02)*(x907));
IkReal x921=((sj18)*(x908));
IkReal x922=((IkReal(1.00000000000000))*(cj17)*(x908));
IkReal x923=((IkReal(1.00000000000000))*(cj17)*(x907));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x913)*(x918)))+(((IkReal(-1.00000000000000))*(x914)*(x921)))+(((r01)*(x917)))+(((r00)*(x919))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x913)*(x917)))+(((IkReal(-1.00000000000000))*(r01)*(x918)))+(((IkReal(-1.00000000000000))*(x914)*(x919)))+(((IkReal(-1.00000000000000))*(x915)*(x921))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x915)*(x917)))+(((IkReal(-1.00000000000000))*(x909)*(x920)))+(((cj17)*(r01)*(x919)))+(((x908)*(x916)))+(((x912)*(x918)))+(((IkReal(-1.00000000000000))*(x910)*(x922))));
evalcond[3]=((((cj17)*(x920)))+(((IkReal(-1.00000000000000))*(r12)*(x922)))+(((r01)*(sj17)*(x919)))+(((x911)*(x918)))+(((IkReal(-1.00000000000000))*(r00)*(x909)*(x917)))+(((IkReal(-1.00000000000000))*(x908)*(x909)*(x910))));
evalcond[4]=((((cj15)*(sj14)))+(((r02)*(sj17)*(x908)))+(((cj14)*(sj15)))+(((cj17)*(r00)*(x918)))+(((x907)*(x916)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x921)))+(((x912)*(x917)))+(((IkReal(-1.00000000000000))*(x910)*(x923))));
evalcond[5]=((((cj14)*(cj15)))+(((r00)*(sj17)*(x918)))+(((IkReal(-1.00000000000000))*(r12)*(x923)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r02)*(x922)))+(((x911)*(x917)))+(((IkReal(-1.00000000000000))*(x907)*(x909)*(x910)))+(((IkReal(-1.00000000000000))*(r01)*(x909)*(x921))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x924=IKsin(j13);
IkReal x925=IKcos(j13);
IkReal x926=((cj18)*(r01));
IkReal x927=((r11)*(sj18));
IkReal x928=((IkReal(1.00000000000000))*(x925));
IkReal x929=((sj18)*(x924));
IkReal x930=((r02)*(x924));
IkReal x931=((IkReal(1.00000000000000))*(cj18)*(x924));
IkReal x932=((cj18)*(r10)*(x925));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x928)))+(((x924)*(x926)))+(((r00)*(x929)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x928))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x929)))+(((IkReal(-1.00000000000000))*(r11)*(x931)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x928)))+(((IkReal(-1.00000000000000))*(x926)*(x928))));
evalcond[2]=((((cj17)*(x932)))+(((r12)*(sj17)*(x925)))+(((cj17)*(r01)*(x929)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x931)))+(((IkReal(-1.00000000000000))*(cj17)*(x927)*(x928)))+(((IkReal(-1.00000000000000))*(sj17)*(x930))));
evalcond[3]=((((cj17)*(x930)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x931)))+(((IkReal(-1.00000000000000))*(sj17)*(x927)*(x928)))+(((r01)*(sj17)*(x929)))+(((sj17)*(x932)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x928))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x933=((r21)*(sj18));
IkReal x934=((IkReal(1.00000000000000))*(cj15));
IkReal x935=((r22)*(sj17));
IkReal x936=((sj15)*(sj17));
IkReal x937=((cj18)*(r20));
IkReal x938=((IkReal(1.00000000000000))*(sj15));
IkReal x939=((cj17)*(sj15));
IkReal x940=((cj15)*(cj17));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x935)*(x938)))+(((IkReal(-1.00000000000000))*(cj17)*(x937)*(x938)))+(((r22)*(x940)))+(((IkReal(-1.00000000000000))*(sj17)*(x934)*(x937)))+(((cj15)*(sj17)*(x933)))+(((x933)*(x939))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj15)*(x935)))+(((r22)*(x939)))+(((IkReal(-1.00000000000000))*(cj17)*(x933)*(x934)))+(((x937)*(x940)))+(((IkReal(-1.00000000000000))*(x936)*(x937)))+(((x933)*(x936))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(x935)*(x938)))+(((IkReal(-1.00000000000000))*(cj17)*(x937)*(x938)))+(((r22)*(x940)))+(((IkReal(-1.00000000000000))*(sj17)*(x934)*(x937)))+(((cj15)*(sj17)*(x933)))+(((x933)*(x939)))))), ((gconst10)*(((((cj15)*(x935)))+(((r22)*(x939)))+(((IkReal(-1.00000000000000))*(cj17)*(x933)*(x934)))+(((x937)*(x940)))+(((IkReal(-1.00000000000000))*(x936)*(x937)))+(((x933)*(x936)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x941=IKsin(j14);
IkReal x942=IKcos(j14);
IkReal x943=((cj17)*(sj18));
IkReal x944=((IkReal(1.00000000000000))*(sj17));
IkReal x945=((cj18)*(r20));
IkReal x946=((sj13)*(sj17));
IkReal x947=((cj18)*(r10));
IkReal x948=((cj13)*(r02));
IkReal x949=((cj13)*(r01));
IkReal x950=((sj17)*(sj18));
IkReal x951=((IkReal(1.00000000000000))*(cj17));
IkReal x952=((cj15)*(x941));
IkReal x953=((sj15)*(x942));
IkReal x954=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x955=((sj15)*(x941));
IkReal x956=((cj13)*(cj18)*(r00));
IkReal x957=((cj15)*(x942));
IkReal x958=((x953)+(x952));
evalcond[0]=((((r21)*(x943)))+(((IkReal(-1.00000000000000))*(x957)))+(((IkReal(-1.00000000000000))*(r22)*(x944)))+(((IkReal(-1.00000000000000))*(x945)*(x951)))+(x955));
evalcond[1]=((((r21)*(x950)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x944)*(x945)))+(x958));
evalcond[2]=((((cj17)*(sj13)*(x947)))+(((IkReal(-1.00000000000000))*(x943)*(x949)))+(((r12)*(x946)))+(((cj17)*(x956)))+(((IkReal(-1.00000000000000))*(x943)*(x954)))+(((sj17)*(x948)))+(x958));
evalcond[3]=((((sj17)*(x956)))+(((x946)*(x947)))+(((IkReal(-1.00000000000000))*(sj18)*(x944)*(x949)))+(((IkReal(-1.00000000000000))*(x955)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x951)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x944)))+(x957)+(((IkReal(-1.00000000000000))*(x948)*(x951))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x959=((npy)*(sj18));
IkReal x960=((IkReal(1.00000000000000))*(sj17));
IkReal x961=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(x960)))+(((cj17)*(x959)))+(((IkReal(-1.00000000000000))*(cj17)*(x961))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x960)*(x961)))+(((sj17)*(x959)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x962=(sj18)*(sj18);
IkReal x963=(cj18)*(cj18);
IkReal x964=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x965=((IkReal(1.00000000000000))*(x962));
IkReal x966=((IkReal(1.00000000000000))*(x963));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(x966)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x965)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x966)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x964)))+(((IkReal(-1.00000000000000))*(x965)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x964)))));
IkReal x967=(sj18)*(sj18);
IkReal x968=(cj18)*(cj18);
IkReal x969=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x970=((IkReal(1.00000000000000))*(x967));
IkReal x971=((IkReal(1.00000000000000))*(x968));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x970)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x971)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x969)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x969)))+(((IkReal(-1.00000000000000))*(x970)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x971)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x972=((r21)*(sj18));
IkReal x973=((cj15)*(cj17));
IkReal x974=((sj15)*(sj17));
IkReal x975=((cj15)*(sj17));
IkReal x976=((cj17)*(sj15));
IkReal x977=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst12)*(((((r22)*(x973)))+(((r22)*(x974)))+(((IkReal(-1.00000000000000))*(x972)*(x976)))+(((cj18)*(r20)*(x976)))+(((IkReal(-1.00000000000000))*(x975)*(x977)))+(((x972)*(x975))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((r22)*(x976)))+(((IkReal(-1.00000000000000))*(r22)*(x975)))+(((IkReal(-1.00000000000000))*(x974)*(x977)))+(((x972)*(x973)))+(((x972)*(x974)))+(((IkReal(-1.00000000000000))*(x973)*(x977))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst12)*(((((r22)*(x973)))+(((r22)*(x974)))+(((IkReal(-1.00000000000000))*(x972)*(x976)))+(((cj18)*(r20)*(x976)))+(((IkReal(-1.00000000000000))*(x975)*(x977)))+(((x972)*(x975)))))), ((gconst12)*(((((r22)*(x976)))+(((IkReal(-1.00000000000000))*(r22)*(x975)))+(((IkReal(-1.00000000000000))*(x974)*(x977)))+(((x972)*(x973)))+(((x972)*(x974)))+(((IkReal(-1.00000000000000))*(x973)*(x977)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x978=IKsin(j14);
IkReal x979=IKcos(j14);
IkReal x980=((IkReal(1.00000000000000))*(sj17));
IkReal x981=((cj18)*(r20));
IkReal x982=((r21)*(sj18));
IkReal x983=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((cj17)*(x982)))+(((IkReal(-1.00000000000000))*(cj17)*(x981)))+(((sj15)*(x978)))+(((IkReal(-1.00000000000000))*(x979)*(x983)))+(((IkReal(-1.00000000000000))*(r22)*(x980))));
evalcond[1]=((((sj17)*(x982)))+(((IkReal(-1.00000000000000))*(sj15)*(x979)))+(((IkReal(-1.00000000000000))*(x978)*(x983)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x980)*(x981))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x984=(sj18)*(sj18);
IkReal x985=(cj18)*(cj18);
IkReal x986=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x987=((IkReal(1.00000000000000))*(x984));
IkReal x988=((IkReal(1.00000000000000))*(x985));
gconst13=IKsign(((((IkReal(-1.00000000000000))*(x987)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x986)))+(((IkReal(-1.00000000000000))*(x987)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x986)))+(((IkReal(-1.00000000000000))*(x988)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x988)*((r01)*(r01))))));
IkReal x989=(sj18)*(sj18);
IkReal x990=(cj18)*(cj18);
IkReal x991=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x992=((IkReal(1.00000000000000))*(x989));
IkReal x993=((IkReal(1.00000000000000))*(x990));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x992)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x993)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x993)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x992)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x991)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x991))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x994=IKsin(j13);
IkReal x995=IKcos(j13);
IkReal x996=((IkReal(1.00000000000000))*(sj17));
IkReal x997=((r11)*(sj18));
IkReal x998=((r10)*(sj17));
IkReal x999=((cj17)*(r10));
IkReal x1000=((IkReal(1.00000000000000))*(r11));
IkReal x1001=((IkReal(1.00000000000000))*(r10));
IkReal x1002=((IkReal(1.00000000000000))*(r00));
IkReal x1003=((r12)*(sj17));
IkReal x1004=((cj18)*(x994));
IkReal x1005=((cj18)*(x995));
IkReal x1006=((sj18)*(x994));
IkReal x1007=((r02)*(x994));
IkReal x1008=((sj18)*(x995));
IkReal x1009=((IkReal(1.00000000000000))*(cj17)*(x995));
IkReal x1010=((IkReal(1.00000000000000))*(cj17)*(x994));
evalcond[0]=((IkReal(-1.00000000000000))+(((r01)*(x1004)))+(((IkReal(-1.00000000000000))*(x1001)*(x1008)))+(((IkReal(-1.00000000000000))*(x1000)*(x1005)))+(((r00)*(x1006))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1005)))+(((IkReal(-1.00000000000000))*(x1002)*(x1008)))+(((IkReal(-1.00000000000000))*(x1001)*(x1006)))+(((IkReal(-1.00000000000000))*(x1000)*(x1004))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1009)*(x997)))+(((IkReal(-1.00000000000000))*(cj17)*(x1002)*(x1004)))+(((x1003)*(x995)))+(((cj17)*(r01)*(x1006)))+(((IkReal(-1.00000000000000))*(x1007)*(x996)))+(((x1005)*(x999))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1004)*(x996)))+(((r01)*(sj17)*(x1006)))+(((IkReal(-1.00000000000000))*(r12)*(x1009)))+(((cj17)*(x1007)))+(((x1005)*(x998)))+(((IkReal(-1.00000000000000))*(x995)*(x996)*(x997))));
evalcond[4]=((((cj15)*(sj14)))+(((cj17)*(r00)*(x1005)))+(((cj14)*(sj15)))+(((x1003)*(x994)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x1008)))+(((IkReal(-1.00000000000000))*(x1010)*(x997)))+(((r02)*(sj17)*(x995)))+(((x1004)*(x999))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x1008)*(x996)))+(((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(r02)*(x1009)))+(((IkReal(-1.00000000000000))*(x994)*(x996)*(x997)))+(((IkReal(-1.00000000000000))*(r12)*(x1010)))+(((x1004)*(x998)))+(((sj14)*(sj15)))+(((r00)*(sj17)*(x1005))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x1011=IKsin(j13);
IkReal x1012=IKcos(j13);
IkReal x1013=((cj18)*(r01));
IkReal x1014=((r11)*(sj18));
IkReal x1015=((IkReal(1.00000000000000))*(x1012));
IkReal x1016=((sj18)*(x1011));
IkReal x1017=((r02)*(x1011));
IkReal x1018=((IkReal(1.00000000000000))*(cj18)*(x1011));
IkReal x1019=((cj18)*(r10)*(x1012));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1015)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1015)))+(((r00)*(x1016)))+(((x1011)*(x1013))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(sj18)*(x1015)))+(((IkReal(-1.00000000000000))*(x1013)*(x1015)))+(((IkReal(-1.00000000000000))*(r11)*(x1018)))+(((IkReal(-1.00000000000000))*(r10)*(x1016))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x1014)*(x1015)))+(((cj17)*(r01)*(x1016)))+(((r12)*(sj17)*(x1012)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x1018)))+(((cj17)*(x1019)))+(((IkReal(-1.00000000000000))*(sj17)*(x1017))));
evalcond[3]=((((r01)*(sj17)*(x1016)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x1018)))+(((sj17)*(x1019)))+(((IkReal(-1.00000000000000))*(sj17)*(x1014)*(x1015)))+(((cj17)*(x1017)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x1015))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1020=((cj15)*(cj17));
IkReal x1021=((r21)*(sj18));
IkReal x1022=((sj15)*(sj17));
IkReal x1023=((cj15)*(sj17));
IkReal x1024=((cj17)*(sj15));
IkReal x1025=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1023)*(x1025)))+(((r22)*(x1020)))+(((r22)*(x1022)))+(((IkReal(-1.00000000000000))*(x1021)*(x1024)))+(((x1021)*(x1023)))+(((cj18)*(r20)*(x1024))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(r22)*(x1023)))+(((IkReal(-1.00000000000000))*(x1022)*(x1025)))+(((r22)*(x1024)))+(((IkReal(-1.00000000000000))*(x1020)*(x1025)))+(((x1021)*(x1022)))+(((x1020)*(x1021))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(x1023)*(x1025)))+(((r22)*(x1020)))+(((r22)*(x1022)))+(((IkReal(-1.00000000000000))*(x1021)*(x1024)))+(((x1021)*(x1023)))+(((cj18)*(r20)*(x1024)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(r22)*(x1023)))+(((IkReal(-1.00000000000000))*(x1022)*(x1025)))+(((r22)*(x1024)))+(((IkReal(-1.00000000000000))*(x1020)*(x1025)))+(((x1021)*(x1022)))+(((x1020)*(x1021)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1026=IKsin(j14);
IkReal x1027=IKcos(j14);
IkReal x1028=((cj17)*(sj18));
IkReal x1029=((IkReal(1.00000000000000))*(sj17));
IkReal x1030=((cj18)*(r20));
IkReal x1031=((sj13)*(sj17));
IkReal x1032=((cj18)*(r10));
IkReal x1033=((cj13)*(r02));
IkReal x1034=((cj13)*(r01));
IkReal x1035=((sj17)*(sj18));
IkReal x1036=((IkReal(1.00000000000000))*(cj17));
IkReal x1037=((sj15)*(x1026));
IkReal x1038=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1039=((sj15)*(x1027));
IkReal x1040=((cj15)*(x1026));
IkReal x1041=((cj13)*(cj18)*(r00));
IkReal x1042=((IkReal(1.00000000000000))*(cj15)*(x1027));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1029)))+(((r21)*(x1028)))+(x1037)+(((IkReal(-1.00000000000000))*(x1030)*(x1036)))+(((IkReal(-1.00000000000000))*(x1042))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1039)))+(((IkReal(-1.00000000000000))*(x1029)*(x1030)))+(((r21)*(x1035)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x1040))));
evalcond[2]=((((cj17)*(x1041)))+(((IkReal(-1.00000000000000))*(x1028)*(x1038)))+(x1040)+(x1039)+(((sj17)*(x1033)))+(((r12)*(x1031)))+(((cj17)*(sj13)*(x1032)))+(((IkReal(-1.00000000000000))*(x1028)*(x1034))));
evalcond[3]=((((x1031)*(x1032)))+(((IkReal(-1.00000000000000))*(x1033)*(x1036)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1029)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1036)))+(x1037)+(((IkReal(-1.00000000000000))*(sj18)*(x1029)*(x1034)))+(((sj17)*(x1041)))+(((IkReal(-1.00000000000000))*(x1042))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1043=((cj16)*(sj17));
IkReal x1044=((cj16)*(cj17)*(cj18));
IkReal x1045=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r11)*(x1045)))+(((r10)*(x1044)))+(((r12)*(x1043))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x1045)))+(((r02)*(x1043)))+(((r00)*(x1044))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(r11)*(x1045)))+(((r10)*(x1044)))+(((r12)*(x1043)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x1045)))+(((r02)*(x1043)))+(((r00)*(x1044)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1046=IKsin(j13);
IkReal x1047=IKcos(j13);
IkReal x1048=((IkReal(1.00000000000000))*(sj17));
IkReal x1049=((IkReal(1.00000000000000))*(cj17));
IkReal x1050=((r00)*(x1046));
IkReal x1051=((r02)*(x1046));
IkReal x1052=((r01)*(x1046));
IkReal x1053=((r10)*(x1047));
IkReal x1054=((r12)*(x1047));
IkReal x1055=((r11)*(sj18)*(x1047));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1047)))+(((cj18)*(x1052)))+(cj16)+(((IkReal(-1.00000000000000))*(sj18)*(x1053)))+(((sj18)*(x1050))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj18)*(x1049)*(x1050)))+(((IkReal(-1.00000000000000))*(x1048)*(x1051)))+(((cj17)*(cj18)*(x1053)))+(((sj17)*(x1054)))+(((IkReal(-1.00000000000000))*(x1049)*(x1055)))+(((cj17)*(sj18)*(x1052))));
evalcond[2]=((((cj17)*(x1051)))+(((IkReal(-1.00000000000000))*(cj18)*(x1048)*(x1050)))+(((cj18)*(sj17)*(x1053)))+(sj16)+(((sj17)*(sj18)*(x1052)))+(((IkReal(-1.00000000000000))*(x1048)*(x1055)))+(((IkReal(-1.00000000000000))*(x1049)*(x1054))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1056=((IkReal(1.00000000000000))*(sj13));
IkReal x1057=((r10)*(sj18));
IkReal x1058=((IkReal(1.00000000000000))*(cj18));
IkReal x1059=((cj13)*(r11));
IkReal x1060=((r01)*(sj13));
IkReal x1061=((cj13)*(r12));
IkReal x1062=((cj18)*(r00));
IkReal x1063=((npy)*(sj18));
IkReal x1064=((sj17)*(sj18));
IkReal x1065=((IkReal(1.00000000000000))*(cj17));
IkReal x1066=((r00)*(sj18));
IkReal x1067=((IkReal(1.00000000000000))*(cj13));
IkReal x1068=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x1063)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1058)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1058)*(x1059)))+(((cj18)*(x1060)))+(((IkReal(-1.00000000000000))*(x1057)*(x1067)))+(((sj13)*(x1066))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x1063)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1058))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1058)))+(((IkReal(-1.00000000000000))*(x1066)*(x1067)))+(((IkReal(-1.00000000000000))*(x1056)*(x1057)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1056))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj18)*(x1059)*(x1065)))+(((cj17)*(sj18)*(x1060)))+(((cj17)*(x1068)))+(((IkReal(-1.00000000000000))*(cj17)*(x1056)*(x1062)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1056)))+(((sj17)*(x1061))));
evalcond[8]=((((x1060)*(x1064)))+(((IkReal(-1.00000000000000))*(sj17)*(x1056)*(x1062)))+(((IkReal(-1.00000000000000))*(x1059)*(x1064)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x1061)*(x1065)))+(((sj17)*(x1068))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1069=((cj15)*(cj17));
IkReal x1070=((r21)*(sj18));
IkReal x1071=((cj18)*(r20));
IkReal x1072=((sj15)*(sj17));
IkReal x1073=((cj15)*(sj17));
IkReal x1074=((cj17)*(sj15));
if( IKabs(((gconst4)*(((((x1070)*(x1073)))+(((x1070)*(x1074)))+(((IkReal(-1.00000000000000))*(x1071)*(x1073)))+(((IkReal(-1.00000000000000))*(x1071)*(x1074)))+(((IkReal(-1.00000000000000))*(r22)*(x1072)))+(((r22)*(x1069))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1069)*(x1071)))+(((x1070)*(x1072)))+(((IkReal(-1.00000000000000))*(x1071)*(x1072)))+(((IkReal(-1.00000000000000))*(x1069)*(x1070)))+(((r22)*(x1074)))+(((r22)*(x1073))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst4)*(((((x1070)*(x1073)))+(((x1070)*(x1074)))+(((IkReal(-1.00000000000000))*(x1071)*(x1073)))+(((IkReal(-1.00000000000000))*(x1071)*(x1074)))+(((IkReal(-1.00000000000000))*(r22)*(x1072)))+(((r22)*(x1069)))))), ((gconst4)*(((((x1069)*(x1071)))+(((x1070)*(x1072)))+(((IkReal(-1.00000000000000))*(x1071)*(x1072)))+(((IkReal(-1.00000000000000))*(x1069)*(x1070)))+(((r22)*(x1074)))+(((r22)*(x1073)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1075=IKsin(j14);
IkReal x1076=IKcos(j14);
IkReal x1077=((cj17)*(sj18));
IkReal x1078=((IkReal(1.00000000000000))*(sj17));
IkReal x1079=((cj18)*(r20));
IkReal x1080=((sj13)*(sj17));
IkReal x1081=((cj18)*(r10));
IkReal x1082=((cj13)*(r02));
IkReal x1083=((cj13)*(r01));
IkReal x1084=((sj17)*(sj18));
IkReal x1085=((IkReal(1.00000000000000))*(cj17));
IkReal x1086=((cj15)*(x1075));
IkReal x1087=((sj15)*(x1076));
IkReal x1088=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1089=((sj15)*(x1075));
IkReal x1090=((cj13)*(cj18)*(r00));
IkReal x1091=((cj15)*(x1076));
IkReal x1092=((x1087)+(x1086));
evalcond[0]=((x1089)+(((IkReal(-1.00000000000000))*(r22)*(x1078)))+(((IkReal(-1.00000000000000))*(x1091)))+(((IkReal(-1.00000000000000))*(x1079)*(x1085)))+(((r21)*(x1077))));
evalcond[1]=((x1092)+(((IkReal(-1.00000000000000))*(x1078)*(x1079)))+(((cj17)*(r22)))+(((r21)*(x1084))));
evalcond[2]=((((sj17)*(x1082)))+(((IkReal(-1.00000000000000))*(x1077)*(x1083)))+(x1092)+(((r12)*(x1080)))+(((IkReal(-1.00000000000000))*(x1077)*(x1088)))+(((cj17)*(x1090)))+(((cj17)*(sj13)*(x1081))));
evalcond[3]=((x1091)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1078)))+(((sj17)*(x1090)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1085)))+(((IkReal(-1.00000000000000))*(x1089)))+(((IkReal(-1.00000000000000))*(x1082)*(x1085)))+(((x1080)*(x1081)))+(((IkReal(-1.00000000000000))*(sj18)*(x1078)*(x1083))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1093=((IkReal(1.00000000000000))*(sj13));
IkReal x1094=((r10)*(sj18));
IkReal x1095=((IkReal(1.00000000000000))*(cj18));
IkReal x1096=((cj13)*(r11));
IkReal x1097=((r01)*(sj13));
IkReal x1098=((cj13)*(r12));
IkReal x1099=((cj18)*(r00));
IkReal x1100=((npy)*(sj18));
IkReal x1101=((sj17)*(sj18));
IkReal x1102=((IkReal(1.00000000000000))*(cj17));
IkReal x1103=((r00)*(sj18));
IkReal x1104=((IkReal(1.00000000000000))*(cj13));
IkReal x1105=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1095)))+(((cj17)*(x1100)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj13)*(x1103)))+(((IkReal(-1.00000000000000))*(x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(x1094)*(x1104)))+(((cj18)*(x1097))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1095)))+(((sj17)*(x1100)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1103)*(x1104)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1095)))+(((IkReal(-1.00000000000000))*(x1093)*(x1094)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1093))));
evalcond[7]=((((sj17)*(x1098)))+(((cj17)*(x1105)))+(((IkReal(-1.00000000000000))*(cj17)*(x1093)*(x1099)))+(((cj17)*(sj18)*(x1097)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1093)))+(((IkReal(-1.00000000000000))*(sj18)*(x1096)*(x1102))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1096)*(x1101)))+(((IkReal(-1.00000000000000))*(x1098)*(x1102)))+(((x1097)*(x1101)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj17)*(x1093)*(x1099)))+(((sj17)*(x1105))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1106=((r21)*(sj18));
IkReal x1107=((cj15)*(cj17));
IkReal x1108=((sj15)*(sj17));
IkReal x1109=((cj15)*(sj17));
IkReal x1110=((cj17)*(sj15));
IkReal x1111=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst5)*(((((cj18)*(r20)*(x1110)))+(((IkReal(-1.00000000000000))*(x1109)*(x1111)))+(((r22)*(x1108)))+(((r22)*(x1107)))+(((x1106)*(x1109)))+(((IkReal(-1.00000000000000))*(x1106)*(x1110))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1107)*(x1111)))+(((IkReal(-1.00000000000000))*(x1108)*(x1111)))+(((r22)*(x1110)))+(((IkReal(-1.00000000000000))*(r22)*(x1109)))+(((x1106)*(x1108)))+(((x1106)*(x1107))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst5)*(((((cj18)*(r20)*(x1110)))+(((IkReal(-1.00000000000000))*(x1109)*(x1111)))+(((r22)*(x1108)))+(((r22)*(x1107)))+(((x1106)*(x1109)))+(((IkReal(-1.00000000000000))*(x1106)*(x1110)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x1107)*(x1111)))+(((IkReal(-1.00000000000000))*(x1108)*(x1111)))+(((r22)*(x1110)))+(((IkReal(-1.00000000000000))*(r22)*(x1109)))+(((x1106)*(x1108)))+(((x1106)*(x1107)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1112=IKsin(j14);
IkReal x1113=IKcos(j14);
IkReal x1114=((cj17)*(sj18));
IkReal x1115=((IkReal(1.00000000000000))*(sj17));
IkReal x1116=((cj18)*(r20));
IkReal x1117=((sj13)*(sj17));
IkReal x1118=((cj18)*(r10));
IkReal x1119=((cj13)*(r02));
IkReal x1120=((cj13)*(r01));
IkReal x1121=((sj17)*(sj18));
IkReal x1122=((IkReal(1.00000000000000))*(cj17));
IkReal x1123=((sj15)*(x1112));
IkReal x1124=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1125=((sj15)*(x1113));
IkReal x1126=((cj15)*(x1112));
IkReal x1127=((cj13)*(cj18)*(r00));
IkReal x1128=((IkReal(1.00000000000000))*(cj15)*(x1113));
evalcond[0]=((x1123)+(((IkReal(-1.00000000000000))*(r22)*(x1115)))+(((IkReal(-1.00000000000000))*(x1116)*(x1122)))+(((IkReal(-1.00000000000000))*(x1128)))+(((r21)*(x1114))));
evalcond[1]=((((cj17)*(r22)))+(((r21)*(x1121)))+(((IkReal(-1.00000000000000))*(x1125)))+(((IkReal(-1.00000000000000))*(x1126)))+(((IkReal(-1.00000000000000))*(x1115)*(x1116))));
evalcond[2]=((x1125)+(x1126)+(((IkReal(-1.00000000000000))*(x1114)*(x1124)))+(((cj17)*(sj13)*(x1118)))+(((cj17)*(x1127)))+(((IkReal(-1.00000000000000))*(x1114)*(x1120)))+(((sj17)*(x1119)))+(((r12)*(x1117))));
evalcond[3]=((x1123)+(((IkReal(-1.00000000000000))*(sj18)*(x1115)*(x1120)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1122)))+(((sj17)*(x1127)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1115)))+(((IkReal(-1.00000000000000))*(x1128)))+(((IkReal(-1.00000000000000))*(x1119)*(x1122)))+(((x1117)*(x1118))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1129=((sj15)*(sj16));
IkReal x1130=((r22)*(sj17));
IkReal x1131=((cj18)*(r21));
IkReal x1132=((r20)*(sj18));
IkReal x1133=((cj15)*(sj16));
IkReal x1134=((cj17)*(r21)*(sj18));
IkReal x1135=((cj17)*(cj18)*(r20));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1129)*(x1134)))+(((x1129)*(x1135)))+(((x1129)*(x1130)))+(((cj15)*(x1132)))+(((cj15)*(x1131))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((sj15)*(x1132)))+(((sj15)*(x1131)))+(((IkReal(-1.00000000000000))*(x1130)*(x1133)))+(((IkReal(-1.00000000000000))*(x1133)*(x1135)))+(((x1133)*(x1134))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(x1129)*(x1134)))+(((x1129)*(x1135)))+(((x1129)*(x1130)))+(((cj15)*(x1132)))+(((cj15)*(x1131)))))), ((gconst3)*(((((sj15)*(x1132)))+(((sj15)*(x1131)))+(((IkReal(-1.00000000000000))*(x1130)*(x1133)))+(((IkReal(-1.00000000000000))*(x1133)*(x1135)))+(((x1133)*(x1134)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x1136=IKsin(j14);
IkReal x1137=IKcos(j14);
IkReal x1138=((IkReal(1.00000000000000))*(cj18));
IkReal x1139=((cj13)*(r01));
IkReal x1140=((IkReal(1.00000000000000))*(sj18));
IkReal x1141=((cj13)*(r00));
IkReal x1142=((sj13)*(sj17));
IkReal x1143=((cj18)*(r10));
IkReal x1144=((r21)*(sj18));
IkReal x1145=((IkReal(1.00000000000000))*(sj16));
IkReal x1146=((cj13)*(r02));
IkReal x1147=((IkReal(1.00000000000000))*(cj17));
IkReal x1148=((sj13)*(x1140));
IkReal x1149=((cj16)*(x1137));
IkReal x1150=((sj15)*(x1136));
IkReal x1151=((cj15)*(x1136));
IkReal x1152=((cj15)*(x1137));
IkReal x1153=((sj15)*(x1137));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x1145)*(x1151)))+(((IkReal(-1.00000000000000))*(x1145)*(x1153))));
evalcond[1]=((x1150)+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(x1152)))+(((cj17)*(x1144)))+(((IkReal(-1.00000000000000))*(cj17)*(r20)*(x1138))));
evalcond[2]=((((sj15)*(x1149)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1138)))+(((sj17)*(x1144)))+(((cj16)*(x1151))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1140)*(x1141)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(x1138)))+(((IkReal(-1.00000000000000))*(r10)*(x1148)))+(((IkReal(-1.00000000000000))*(x1138)*(x1139)))+(((IkReal(-1.00000000000000))*(x1145)*(x1152)))+(((sj16)*(x1150))));
evalcond[4]=((x1151)+(x1153)+(((cj17)*(sj13)*(x1143)))+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x1148)))+(((IkReal(-1.00000000000000))*(cj17)*(x1139)*(x1140)))+(((cj17)*(cj18)*(x1141)))+(((sj17)*(x1146)))+(((r12)*(x1142))));
evalcond[5]=((((x1142)*(x1143)))+(((cj15)*(x1149)))+(((IkReal(-1.00000000000000))*(cj16)*(x1150)))+(((IkReal(-1.00000000000000))*(x1146)*(x1147)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1147)))+(((IkReal(-1.00000000000000))*(r11)*(x1140)*(x1142)))+(((IkReal(-1.00000000000000))*(sj17)*(x1139)*(x1140)))+(((cj18)*(sj17)*(x1141))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1154=((sj15)*(sj16));
IkReal x1155=((r22)*(sj17));
IkReal x1156=((cj18)*(r21));
IkReal x1157=((r20)*(sj18));
IkReal x1158=((cj15)*(sj16));
IkReal x1159=((cj17)*(r21)*(sj18));
IkReal x1160=((cj17)*(cj18)*(r20));
if( IKabs(((gconst2)*(((((cj15)*(x1157)))+(((cj15)*(x1156)))+(((IkReal(-1.00000000000000))*(x1154)*(x1159)))+(((x1154)*(x1160)))+(((x1154)*(x1155))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x1158)*(x1159)))+(((IkReal(-1.00000000000000))*(x1155)*(x1158)))+(((IkReal(-1.00000000000000))*(x1158)*(x1160)))+(((sj15)*(x1157)))+(((sj15)*(x1156))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst2)*(((((cj15)*(x1157)))+(((cj15)*(x1156)))+(((IkReal(-1.00000000000000))*(x1154)*(x1159)))+(((x1154)*(x1160)))+(((x1154)*(x1155)))))), ((gconst2)*(((((x1158)*(x1159)))+(((IkReal(-1.00000000000000))*(x1155)*(x1158)))+(((IkReal(-1.00000000000000))*(x1158)*(x1160)))+(((sj15)*(x1157)))+(((sj15)*(x1156)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[3];
IkReal x1161=IKsin(j14);
IkReal x1162=IKcos(j14);
IkReal x1163=((IkReal(1.00000000000000))*(sj17));
IkReal x1164=((cj18)*(r20));
IkReal x1165=((r21)*(sj18));
IkReal x1166=((IkReal(1.00000000000000))*(x1162));
IkReal x1167=((cj15)*(x1161));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj15)*(sj16)*(x1166)))+(((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(sj16)*(x1167))));
evalcond[1]=((((cj17)*(x1165)))+(((IkReal(-1.00000000000000))*(cj15)*(x1166)))+(((IkReal(-1.00000000000000))*(cj17)*(x1164)))+(((IkReal(-1.00000000000000))*(r22)*(x1163)))+(((sj15)*(x1161))));
evalcond[2]=((((cj16)*(sj15)*(x1162)))+(((IkReal(-1.00000000000000))*(x1163)*(x1164)))+(((sj17)*(x1165)))+(((cj16)*(x1167)))+(((cj17)*(r22))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1168=(sj18)*(sj18);
IkReal x1169=(cj18)*(cj18);
IkReal x1170=((r00)*(r11));
IkReal x1171=((r02)*(sj17));
IkReal x1172=((cj17)*(x1168));
IkReal x1173=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1174=((cj17)*(x1169));
IkReal x1175=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x1173)*(x1174)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x1175)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x1175)))+(((IkReal(-1.00000000000000))*(x1172)*(x1173)))+(((cj18)*(r11)*(x1171)))+(((x1170)*(x1172)))+(((x1170)*(x1174)))+(((r10)*(sj18)*(x1171)))));
IkReal x1176=(sj18)*(sj18);
IkReal x1177=(cj18)*(cj18);
IkReal x1178=((r00)*(r11));
IkReal x1179=((r02)*(sj17));
IkReal x1180=((cj17)*(x1176));
IkReal x1181=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1182=((cj17)*(x1177));
IkReal x1183=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1181)*(x1182)))+(((x1178)*(x1182)))+(((x1178)*(x1180)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x1183)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x1183)))+(((IkReal(-1.00000000000000))*(x1180)*(x1181)))+(((cj18)*(r11)*(x1179)))+(((r10)*(sj18)*(x1179))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1184=((cj16)*(sj17));
IkReal x1185=((cj16)*(cj17)*(cj18));
IkReal x1186=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r11)*(x1186)))+(((r10)*(x1185)))+(((r12)*(x1184))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x1186)))+(((r00)*(x1185)))+(((r02)*(x1184))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(r11)*(x1186)))+(((r10)*(x1185)))+(((r12)*(x1184)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x1186)))+(((r00)*(x1185)))+(((r02)*(x1184)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1187=IKsin(j13);
IkReal x1188=IKcos(j13);
IkReal x1189=((IkReal(1.00000000000000))*(sj17));
IkReal x1190=((r11)*(sj18));
IkReal x1191=((r10)*(sj17));
IkReal x1192=((cj17)*(r10));
IkReal x1193=((cj14)*(cj15));
IkReal x1194=((IkReal(1.00000000000000))*(r11));
IkReal x1195=((IkReal(1.00000000000000))*(r10));
IkReal x1196=((IkReal(1.00000000000000))*(r00));
IkReal x1197=((r12)*(sj17));
IkReal x1198=((sj14)*(sj15));
IkReal x1199=((cj18)*(x1187));
IkReal x1200=((cj18)*(x1188));
IkReal x1201=((sj18)*(x1187));
IkReal x1202=((r02)*(x1187));
IkReal x1203=((sj18)*(x1188));
IkReal x1204=((IkReal(1.00000000000000))*(cj17)*(x1188));
IkReal x1205=((IkReal(1.00000000000000))*(cj17)*(x1187));
evalcond[0]=((((r01)*(x1199)))+(cj16)+(((r00)*(x1201)))+(((IkReal(-1.00000000000000))*(x1194)*(x1200)))+(((IkReal(-1.00000000000000))*(x1195)*(x1203))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1196)*(x1203)))+(((IkReal(-1.00000000000000))*(x1194)*(x1199)))+(((sj16)*(x1198)))+(((IkReal(-1.00000000000000))*(sj16)*(x1193)))+(((IkReal(-1.00000000000000))*(x1195)*(x1201)))+(((IkReal(-1.00000000000000))*(r01)*(x1200))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x1196)*(x1199)))+(((IkReal(-1.00000000000000))*(x1190)*(x1204)))+(((x1192)*(x1200)))+(((IkReal(-1.00000000000000))*(x1189)*(x1202)))+(((x1188)*(x1197)))+(((cj17)*(r01)*(x1201))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1188)*(x1189)*(x1190)))+(((x1191)*(x1200)))+(sj16)+(((IkReal(-1.00000000000000))*(r00)*(x1189)*(x1199)))+(((cj17)*(x1202)))+(((IkReal(-1.00000000000000))*(r12)*(x1204)))+(((r01)*(sj17)*(x1201))));
evalcond[4]=((((cj15)*(sj14)))+(((IkReal(-1.00000000000000))*(x1190)*(x1205)))+(((x1187)*(x1197)))+(((cj14)*(sj15)))+(((cj17)*(r00)*(x1200)))+(((r02)*(sj17)*(x1188)))+(((x1192)*(x1199)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x1203))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj16)*(x1198)))+(((IkReal(-1.00000000000000))*(r01)*(x1189)*(x1203)))+(((IkReal(-1.00000000000000))*(r02)*(x1204)))+(((r00)*(sj17)*(x1200)))+(((cj16)*(x1193)))+(((IkReal(-1.00000000000000))*(x1187)*(x1189)*(x1190)))+(((IkReal(-1.00000000000000))*(r12)*(x1205)))+(((x1191)*(x1199))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1206=((cj16)*(sj17));
IkReal x1207=((cj16)*(cj17)*(cj18));
IkReal x1208=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst0)*(((((r10)*(x1207)))+(((r12)*(x1206)))+(((IkReal(-1.00000000000000))*(r11)*(x1208))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(r01)*(x1208)))+(((r00)*(x1207)))+(((r02)*(x1206))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst0)*(((((r10)*(x1207)))+(((r12)*(x1206)))+(((IkReal(-1.00000000000000))*(r11)*(x1208)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(r01)*(x1208)))+(((r00)*(x1207)))+(((r02)*(x1206)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1209=IKsin(j13);
IkReal x1210=IKcos(j13);
IkReal x1211=((IkReal(1.00000000000000))*(sj17));
IkReal x1212=((IkReal(1.00000000000000))*(cj17));
IkReal x1213=((r00)*(x1209));
IkReal x1214=((r02)*(x1209));
IkReal x1215=((r01)*(x1209));
IkReal x1216=((r10)*(x1210));
IkReal x1217=((r12)*(x1210));
IkReal x1218=((r11)*(sj18)*(x1210));
evalcond[0]=((((sj18)*(x1213)))+(cj16)+(((cj18)*(x1215)))+(((IkReal(-1.00000000000000))*(sj18)*(x1216)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1210))));
evalcond[1]=((((cj17)*(sj18)*(x1215)))+(((IkReal(-1.00000000000000))*(cj18)*(x1212)*(x1213)))+(((IkReal(-1.00000000000000))*(x1212)*(x1218)))+(((IkReal(-1.00000000000000))*(x1211)*(x1214)))+(((cj17)*(cj18)*(x1216)))+(((sj17)*(x1217))));
evalcond[2]=((((cj18)*(sj17)*(x1216)))+(((IkReal(-1.00000000000000))*(cj18)*(x1211)*(x1213)))+(((cj17)*(x1214)))+(((IkReal(-1.00000000000000))*(x1212)*(x1217)))+(sj16)+(((IkReal(-1.00000000000000))*(x1211)*(x1218)))+(((sj17)*(sj18)*(x1215))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1219=((IkReal(1.00000000000000))*(cj18));
IkReal x1220=((cj13)*(r11));
IkReal x1221=((r01)*(sj13));
IkReal x1222=((cj13)*(r12));
IkReal x1223=((sj13)*(sj17));
IkReal x1224=((sj17)*(sj18));
IkReal x1225=((IkReal(1.00000000000000))*(cj17));
IkReal x1226=((cj18)*(r10));
IkReal x1227=((IkReal(1.00000000000000))*(cj13));
IkReal x1228=((cj17)*(sj13));
IkReal x1229=((cj13)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((cj18)*(x1221)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1227)))+(((IkReal(-1.00000000000000))*(x1219)*(x1220)))+(((r00)*(sj13)*(sj18))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1219)))+(((cj17)*(r22)))+(((r21)*(x1224))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((npy)*(x1224)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1219)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
evalcond[4]=((((cj17)*(sj18)*(x1221)))+(((IkReal(-1.00000000000000))*(r00)*(x1219)*(x1228)))+(((cj13)*(cj17)*(x1226)))+(((IkReal(-1.00000000000000))*(sj18)*(x1220)*(x1225)))+(((sj17)*(x1222)))+(((IkReal(-1.00000000000000))*(r02)*(x1223))));
evalcond[5]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x1219)*(x1223)))+(((IkReal(-1.00000000000000))*(x1222)*(x1225)))+(((r02)*(x1228)))+(((IkReal(-1.00000000000000))*(x1220)*(x1224)))+(((x1221)*(x1224)))+(((x1226)*(x1229))));
evalcond[6]=((((x1223)*(x1226)))+(((IkReal(-1.00000000000000))*(cj13)*(r02)*(x1225)))+(((IkReal(-1.00000000000000))*(r01)*(x1224)*(x1227)))+(((cj18)*(r00)*(x1229)))+(((IkReal(-1.00000000000000))*(r11)*(sj18)*(x1223)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1225))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1230=((IkReal(4.00000000000000))*(npx));
IkReal x1231=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(x1231)))+(((IkReal(-1.00000000000000))*(sj18)*(x1230))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1230)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1231)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(x1231)))+(((IkReal(-1.00000000000000))*(sj18)*(x1230)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1230)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1231)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(x1231)))+(((IkReal(-1.00000000000000))*(sj18)*(x1230)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1230)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1231)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1232=((cj15)*(cj17));
IkReal x1233=((r21)*(sj18));
IkReal x1234=((cj18)*(r20));
IkReal x1235=((r20)*(sj18));
IkReal x1236=((cj18)*(r21));
IkReal x1237=((r22)*(sj17));
IkReal x1238=((cj17)*(sj15));
if( IKabs(((gconst18)*(((((x1234)*(x1238)))+(((IkReal(-1.00000000000000))*(x1233)*(x1238)))+(((cj15)*(x1236)))+(((cj15)*(x1235)))+(((sj15)*(x1237))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(x1232)*(x1234)))+(((IkReal(-1.00000000000000))*(cj15)*(x1237)))+(((sj15)*(x1236)))+(((sj15)*(x1235)))+(((x1232)*(x1233))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst18)*(((((x1234)*(x1238)))+(((IkReal(-1.00000000000000))*(x1233)*(x1238)))+(((cj15)*(x1236)))+(((cj15)*(x1235)))+(((sj15)*(x1237)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(x1232)*(x1234)))+(((IkReal(-1.00000000000000))*(cj15)*(x1237)))+(((sj15)*(x1236)))+(((sj15)*(x1235)))+(((x1232)*(x1233)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1239=IKsin(j14);
IkReal x1240=IKcos(j14);
IkReal x1241=((IkReal(1.00000000000000))*(cj15));
IkReal x1242=((IkReal(1.00000000000000))*(sj13));
IkReal x1243=((cj17)*(cj18));
IkReal x1244=((cj17)*(sj18));
IkReal x1245=((cj13)*(r00));
IkReal x1246=((sj15)*(x1239));
IkReal x1247=((IkReal(1.00000000000000))*(cj13)*(r01));
IkReal x1248=((sj15)*(x1240));
IkReal x1249=((x1240)*(x1241));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1239)*(x1241)))+(((IkReal(-1.00000000000000))*(x1248)))+(((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[1]=((x1246)+(((IkReal(-1.00000000000000))*(r20)*(x1243)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(x1249)))+(((r21)*(x1244))));
evalcond[2]=((x1246)+(((IkReal(-1.00000000000000))*(cj18)*(x1247)))+(((IkReal(-1.00000000000000))*(x1249)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1242)))+(((IkReal(-1.00000000000000))*(sj18)*(x1245)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1242))));
evalcond[3]=((x1248)+(((IkReal(-1.00000000000000))*(x1244)*(x1247)))+(((r12)*(sj13)*(sj17)))+(((cj15)*(x1239)))+(((cj13)*(r02)*(sj17)))+(((x1243)*(x1245)))+(((r10)*(sj13)*(x1243)))+(((IkReal(-1.00000000000000))*(r11)*(x1242)*(x1244))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1250=((IkReal(1.00000000000000))*(cj18));
IkReal x1251=((cj13)*(r11));
IkReal x1252=((r01)*(sj13));
IkReal x1253=((cj13)*(r12));
IkReal x1254=((sj13)*(sj17));
IkReal x1255=((sj17)*(sj18));
IkReal x1256=((IkReal(1.00000000000000))*(cj17));
IkReal x1257=((cj18)*(r10));
IkReal x1258=((IkReal(1.00000000000000))*(cj13));
IkReal x1259=((cj17)*(sj13));
IkReal x1260=((cj13)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1258)))+(((IkReal(-1.00000000000000))*(x1250)*(x1251)))+(((cj18)*(x1252)))+(((r00)*(sj13)*(sj18))));
evalcond[2]=((((r21)*(x1255)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1250))));
evalcond[3]=((IkReal(0.0950000000000000))+(((npy)*(x1255)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1250)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
evalcond[4]=((((sj17)*(x1253)))+(((IkReal(-1.00000000000000))*(sj18)*(x1251)*(x1256)))+(((cj13)*(cj17)*(x1257)))+(((IkReal(-1.00000000000000))*(r00)*(x1250)*(x1259)))+(((IkReal(-1.00000000000000))*(r02)*(x1254)))+(((cj17)*(sj18)*(x1252))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1253)*(x1256)))+(((r02)*(x1259)))+(((IkReal(-1.00000000000000))*(x1251)*(x1255)))+(((IkReal(-1.00000000000000))*(r00)*(x1250)*(x1254)))+(((x1252)*(x1255)))+(((x1257)*(x1260))));
evalcond[6]=((((cj18)*(r00)*(x1260)))+(((IkReal(-1.00000000000000))*(r01)*(x1255)*(x1258)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1256)))+(((IkReal(-1.00000000000000))*(r11)*(sj18)*(x1254)))+(((IkReal(-1.00000000000000))*(cj13)*(r02)*(x1256)))+(((x1254)*(x1257))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1261=((IkReal(4.00000000000000))*(npx));
IkReal x1262=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((sj18)*(x1261)))+(((cj18)*(x1262))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x1261)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1262)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((sj18)*(x1261)))+(((cj18)*(x1262)))))+IKsqr(((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x1261)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1262)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((sj18)*(x1261)))+(((cj18)*(x1262)))), ((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x1261)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1262)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1263=((cj15)*(r21));
IkReal x1264=((cj17)*(sj18));
IkReal x1265=((r22)*(sj17));
IkReal x1266=((IkReal(1.00000000000000))*(sj15));
IkReal x1267=((cj15)*(r20));
IkReal x1268=((r21)*(sj15));
IkReal x1269=((cj17)*(cj18));
if( IKabs(((gconst19)*(((((x1264)*(x1268)))+(((IkReal(-1.00000000000000))*(x1265)*(x1266)))+(((sj18)*(x1267)))+(((cj18)*(x1263)))+(((IkReal(-1.00000000000000))*(r20)*(x1266)*(x1269))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((r20)*(sj15)*(sj18)))+(((x1267)*(x1269)))+(((cj18)*(x1268)))+(((IkReal(-1.00000000000000))*(x1263)*(x1264)))+(((cj15)*(x1265))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst19)*(((((x1264)*(x1268)))+(((IkReal(-1.00000000000000))*(x1265)*(x1266)))+(((sj18)*(x1267)))+(((cj18)*(x1263)))+(((IkReal(-1.00000000000000))*(r20)*(x1266)*(x1269)))))), ((gconst19)*(((((r20)*(sj15)*(sj18)))+(((x1267)*(x1269)))+(((cj18)*(x1268)))+(((IkReal(-1.00000000000000))*(x1263)*(x1264)))+(((cj15)*(x1265)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1270=IKsin(j14);
IkReal x1271=IKcos(j14);
IkReal x1272=((IkReal(1.00000000000000))*(cj17));
IkReal x1273=((r11)*(sj13));
IkReal x1274=((IkReal(1.00000000000000))*(cj18));
IkReal x1275=((cj13)*(r01));
IkReal x1276=((IkReal(1.00000000000000))*(sj18));
IkReal x1277=((cj13)*(r00));
IkReal x1278=((r10)*(sj13));
IkReal x1279=((cj17)*(cj18));
IkReal x1280=((cj15)*(x1270));
IkReal x1281=((sj15)*(x1271));
IkReal x1282=((cj15)*(x1271));
IkReal x1283=((sj15)*(x1270));
IkReal x1284=((x1281)+(x1280));
evalcond[0]=((x1284)+(((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1282)))+(x1283)+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((cj17)*(r21)*(sj18)))+(((IkReal(-1.00000000000000))*(cj18)*(r20)*(x1272))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1283)))+(x1282)+(((IkReal(-1.00000000000000))*(x1276)*(x1278)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((IkReal(-1.00000000000000))*(x1273)*(x1274)))+(((IkReal(-1.00000000000000))*(x1274)*(x1275))));
evalcond[3]=((x1284)+(((x1277)*(x1279)))+(((r12)*(sj13)*(sj17)))+(((IkReal(-1.00000000000000))*(sj18)*(x1272)*(x1275)))+(((IkReal(-1.00000000000000))*(sj18)*(x1272)*(x1273)))+(((x1278)*(x1279)))+(((cj13)*(r02)*(sj17))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1285=((IkReal(1.00000000000000))*(sj13));
IkReal x1286=((r10)*(sj18));
IkReal x1287=((r01)*(sj13));
IkReal x1288=((cj13)*(r12));
IkReal x1289=((cj18)*(r00));
IkReal x1290=((sj17)*(sj18));
IkReal x1291=((IkReal(1.00000000000000))*(cj17));
IkReal x1292=((r00)*(sj18));
IkReal x1293=((IkReal(1.00000000000000))*(cj13));
IkReal x1294=((cj18)*(x1293));
IkReal x1295=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(1.00000000000000))+(((sj13)*(x1292)))+(((IkReal(-1.00000000000000))*(x1286)*(x1293)))+(((IkReal(-1.00000000000000))*(r11)*(x1294)))+(((cj18)*(x1287))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x1294)))+(((IkReal(-1.00000000000000))*(x1285)*(x1286)))+(((IkReal(-1.00000000000000))*(x1292)*(x1293)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1285))));
evalcond[5]=((((cj17)*(sj18)*(x1287)))+(((IkReal(-1.00000000000000))*(cj13)*(r11)*(sj18)*(x1291)))+(((IkReal(-1.00000000000000))*(cj17)*(x1285)*(x1289)))+(((sj17)*(x1288)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1285)))+(((cj17)*(x1295))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(x1290)*(x1293)))+(((sj17)*(x1295)))+(((x1287)*(x1290)))+(((IkReal(-1.00000000000000))*(sj17)*(x1285)*(x1289)))+(((IkReal(-1.00000000000000))*(x1288)*(x1291)))+(((cj17)*(r02)*(sj13))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1296=((IkReal(4.00000000000000))*(npz));
IkReal x1297=((IkReal(4.00000000000000))*(sj17));
IkReal x1298=((npy)*(sj18));
IkReal x1299=((cj18)*(npx));
IkReal x1300=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((x1297)*(x1298)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(x1297)*(x1299)))+(((cj17)*(x1296))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x1299)*(x1300)))+(((sj17)*(x1296)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1298)*(x1300))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x1297)*(x1298)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(x1297)*(x1299)))+(((cj17)*(x1296)))))+IKsqr(((IkReal(-0.940000000000000))+(((x1299)*(x1300)))+(((sj17)*(x1296)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1298)*(x1300)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((x1297)*(x1298)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(x1297)*(x1299)))+(((cj17)*(x1296)))), ((IkReal(-0.940000000000000))+(((x1299)*(x1300)))+(((sj17)*(x1296)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1298)*(x1300)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x1301=((npy)*(sj18));
IkReal x1302=((IkReal(1.00000000000000))*(sj17));
IkReal x1303=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x1302)))+(((IkReal(-1.00000000000000))*(cj17)*(x1303)))+(((cj17)*(x1301)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((IkReal(0.0900000000000000))*(sj17)))+(((sj17)*(x1301)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(x1302)*(x1303))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1304=((r21)*(sj18));
IkReal x1305=((IkReal(1.00000000000000))*(cj15));
IkReal x1306=((sj15)*(sj17));
IkReal x1307=((cj15)*(sj17));
IkReal x1308=((cj18)*(r20));
IkReal x1309=((cj17)*(sj15));
IkReal x1310=((cj15)*(cj17));
if( IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(sj17)*(x1305)*(x1308)))+(((IkReal(-1.00000000000000))*(r22)*(x1306)))+(((r22)*(x1310)))+(((x1304)*(x1307)))+(((x1304)*(x1309)))+(((IkReal(-1.00000000000000))*(x1308)*(x1309))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((IkReal(-1.00000000000000))*(cj17)*(x1304)*(x1305)))+(((IkReal(-1.00000000000000))*(x1306)*(x1308)))+(((x1308)*(x1310)))+(((x1304)*(x1306)))+(((r22)*(x1307)))+(((r22)*(x1309))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst20)*(((((IkReal(-1.00000000000000))*(sj17)*(x1305)*(x1308)))+(((IkReal(-1.00000000000000))*(r22)*(x1306)))+(((r22)*(x1310)))+(((x1304)*(x1307)))+(((x1304)*(x1309)))+(((IkReal(-1.00000000000000))*(x1308)*(x1309)))))), ((gconst20)*(((((IkReal(-1.00000000000000))*(cj17)*(x1304)*(x1305)))+(((IkReal(-1.00000000000000))*(x1306)*(x1308)))+(((x1308)*(x1310)))+(((x1304)*(x1306)))+(((r22)*(x1307)))+(((r22)*(x1309)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1311=IKsin(j14);
IkReal x1312=IKcos(j14);
IkReal x1313=((cj17)*(sj18));
IkReal x1314=((IkReal(1.00000000000000))*(sj17));
IkReal x1315=((cj18)*(r20));
IkReal x1316=((sj13)*(sj17));
IkReal x1317=((cj18)*(r10));
IkReal x1318=((cj13)*(r02));
IkReal x1319=((cj13)*(r01));
IkReal x1320=((sj17)*(sj18));
IkReal x1321=((IkReal(1.00000000000000))*(cj17));
IkReal x1322=((cj15)*(x1311));
IkReal x1323=((sj15)*(x1312));
IkReal x1324=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1325=((sj15)*(x1311));
IkReal x1326=((cj13)*(cj18)*(r00));
IkReal x1327=((cj15)*(x1312));
IkReal x1328=((x1322)+(x1323));
evalcond[0]=((x1325)+(((IkReal(-1.00000000000000))*(x1315)*(x1321)))+(((IkReal(-1.00000000000000))*(r22)*(x1314)))+(((IkReal(-1.00000000000000))*(x1327)))+(((r21)*(x1313))));
evalcond[1]=((x1328)+(((IkReal(-1.00000000000000))*(x1314)*(x1315)))+(((cj17)*(r22)))+(((r21)*(x1320))));
evalcond[2]=((x1328)+(((IkReal(-1.00000000000000))*(x1313)*(x1324)))+(((IkReal(-1.00000000000000))*(x1313)*(x1319)))+(((r12)*(x1316)))+(((cj17)*(x1326)))+(((sj17)*(x1318)))+(((cj17)*(sj13)*(x1317))));
evalcond[3]=((x1327)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1314)))+(((x1316)*(x1317)))+(((IkReal(-1.00000000000000))*(sj18)*(x1314)*(x1319)))+(((IkReal(-1.00000000000000))*(x1325)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1321)))+(((sj17)*(x1326)))+(((IkReal(-1.00000000000000))*(x1318)*(x1321))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1329=((IkReal(1.00000000000000))*(sj13));
IkReal x1330=((r10)*(sj18));
IkReal x1331=((r01)*(sj13));
IkReal x1332=((cj13)*(r12));
IkReal x1333=((cj18)*(r00));
IkReal x1334=((sj17)*(sj18));
IkReal x1335=((IkReal(1.00000000000000))*(cj17));
IkReal x1336=((r00)*(sj18));
IkReal x1337=((IkReal(1.00000000000000))*(cj13));
IkReal x1338=((cj18)*(x1337));
IkReal x1339=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(-1.00000000000000))+(((sj13)*(x1336)))+(((IkReal(-1.00000000000000))*(x1330)*(x1337)))+(((cj18)*(x1331)))+(((IkReal(-1.00000000000000))*(r11)*(x1338))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1329)))+(((IkReal(-1.00000000000000))*(x1329)*(x1330)))+(((IkReal(-1.00000000000000))*(x1336)*(x1337)))+(((IkReal(-1.00000000000000))*(r01)*(x1338))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1329)))+(((IkReal(-1.00000000000000))*(cj13)*(r11)*(sj18)*(x1335)))+(((IkReal(-1.00000000000000))*(cj17)*(x1329)*(x1333)))+(((cj17)*(x1339)))+(((cj17)*(sj18)*(x1331)))+(((sj17)*(x1332))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj17)*(x1329)*(x1333)))+(((x1331)*(x1334)))+(((cj17)*(r02)*(sj13)))+(((sj17)*(x1339)))+(((IkReal(-1.00000000000000))*(x1332)*(x1335)))+(((IkReal(-1.00000000000000))*(r11)*(x1334)*(x1337))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1340=((IkReal(4.00000000000000))*(npz));
IkReal x1341=((IkReal(4.00000000000000))*(sj17));
IkReal x1342=((npy)*(sj18));
IkReal x1343=((cj18)*(npx));
IkReal x1344=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x1341)*(x1342)))+(((x1341)*(x1343)))+(((IkReal(-1.00000000000000))*(cj17)*(x1340)))+(((IkReal(-0.360000000000000))*(sj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((sj17)*(x1340)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1342)*(x1344)))+(((x1343)*(x1344))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x1341)*(x1342)))+(((x1341)*(x1343)))+(((IkReal(-1.00000000000000))*(cj17)*(x1340)))+(((IkReal(-0.360000000000000))*(sj17)))))+IKsqr(((IkReal(-0.940000000000000))+(((sj17)*(x1340)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1342)*(x1344)))+(((x1343)*(x1344)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x1341)*(x1342)))+(((x1341)*(x1343)))+(((IkReal(-1.00000000000000))*(cj17)*(x1340)))+(((IkReal(-0.360000000000000))*(sj17)))), ((IkReal(-0.940000000000000))+(((sj17)*(x1340)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1342)*(x1344)))+(((x1343)*(x1344)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x1345=((npy)*(sj18));
IkReal x1346=((IkReal(1.00000000000000))*(sj17));
IkReal x1347=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x1346)))+(((IkReal(-1.00000000000000))*(cj17)*(x1347)))+(((IkReal(0.250000000000000))*(IKcos(j15))))+(((cj17)*(x1345))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((sj17)*(x1345)))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1348=((r21)*(sj18));
IkReal x1349=((cj15)*(cj17));
IkReal x1350=((sj15)*(sj17));
IkReal x1351=((cj15)*(sj17));
IkReal x1352=((cj17)*(sj15));
IkReal x1353=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst21)*(((((r22)*(x1350)))+(((r22)*(x1349)))+(((x1348)*(x1351)))+(((IkReal(-1.00000000000000))*(x1348)*(x1352)))+(((cj18)*(r20)*(x1352)))+(((IkReal(-1.00000000000000))*(x1351)*(x1353))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((r22)*(x1352)))+(((IkReal(-1.00000000000000))*(x1350)*(x1353)))+(((x1348)*(x1350)))+(((IkReal(-1.00000000000000))*(r22)*(x1351)))+(((x1348)*(x1349)))+(((IkReal(-1.00000000000000))*(x1349)*(x1353))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst21)*(((((r22)*(x1350)))+(((r22)*(x1349)))+(((x1348)*(x1351)))+(((IkReal(-1.00000000000000))*(x1348)*(x1352)))+(((cj18)*(r20)*(x1352)))+(((IkReal(-1.00000000000000))*(x1351)*(x1353)))))), ((gconst21)*(((((r22)*(x1352)))+(((IkReal(-1.00000000000000))*(x1350)*(x1353)))+(((x1348)*(x1350)))+(((IkReal(-1.00000000000000))*(r22)*(x1351)))+(((x1348)*(x1349)))+(((IkReal(-1.00000000000000))*(x1349)*(x1353)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1354=IKsin(j14);
IkReal x1355=IKcos(j14);
IkReal x1356=((cj17)*(sj18));
IkReal x1357=((IkReal(1.00000000000000))*(sj17));
IkReal x1358=((cj18)*(r20));
IkReal x1359=((sj13)*(sj17));
IkReal x1360=((cj18)*(r10));
IkReal x1361=((cj13)*(r02));
IkReal x1362=((cj13)*(r01));
IkReal x1363=((sj17)*(sj18));
IkReal x1364=((IkReal(1.00000000000000))*(cj17));
IkReal x1365=((sj15)*(x1354));
IkReal x1366=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1367=((sj15)*(x1355));
IkReal x1368=((cj15)*(x1354));
IkReal x1369=((cj13)*(cj18)*(r00));
IkReal x1370=((IkReal(1.00000000000000))*(cj15)*(x1355));
evalcond[0]=((x1365)+(((IkReal(-1.00000000000000))*(x1370)))+(((IkReal(-1.00000000000000))*(r22)*(x1357)))+(((r21)*(x1356)))+(((IkReal(-1.00000000000000))*(x1358)*(x1364))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1367)))+(((IkReal(-1.00000000000000))*(x1368)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x1357)*(x1358)))+(((r21)*(x1363))));
evalcond[2]=((x1367)+(x1368)+(((sj17)*(x1361)))+(((cj17)*(x1369)))+(((cj17)*(sj13)*(x1360)))+(((IkReal(-1.00000000000000))*(x1356)*(x1362)))+(((IkReal(-1.00000000000000))*(x1356)*(x1366)))+(((r12)*(x1359))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1364)))+(x1365)+(((IkReal(-1.00000000000000))*(sj18)*(x1357)*(x1362)))+(((sj17)*(x1369)))+(((x1359)*(x1360)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1357)))+(((IkReal(-1.00000000000000))*(x1370)))+(((IkReal(-1.00000000000000))*(x1361)*(x1364))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1371=((IkReal(4.00000000000000))*(npz));
IkReal x1372=((IkReal(4.00000000000000))*(sj17));
IkReal x1373=((npy)*(sj18));
IkReal x1374=((cj18)*(npx));
IkReal x1375=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(x1372)*(x1374)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((cj17)*(x1371)))+(((IkReal(-0.380000000000000))*(sj16))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x1374)*(x1375)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1373)*(x1375)))+(((sj17)*(x1371))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(x1372)*(x1374)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((cj17)*(x1371)))+(((IkReal(-0.380000000000000))*(sj16)))))))+IKsqr(((IkReal(-0.940000000000000))+(((x1374)*(x1375)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1373)*(x1375)))+(((sj17)*(x1371)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(x1372)*(x1374)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((cj17)*(x1371)))+(((IkReal(-0.380000000000000))*(sj16)))))), ((IkReal(-0.940000000000000))+(((x1374)*(x1375)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(x1373)*(x1375)))+(((sj17)*(x1371)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x1376=IKsin(j15);
IkReal x1377=((npy)*(sj18));
IkReal x1378=((IkReal(1.00000000000000))*(sj17));
IkReal x1379=((cj18)*(npx));
IkReal x1380=((IkReal(0.250000000000000))*(x1376));
evalcond[0]=((((cj18)*(npy)))+(((sj16)*(x1380)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x1378)))+(((IkReal(-1.00000000000000))*(cj17)*(x1379)))+(((cj17)*(x1377)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379)))+(((IkReal(-1.00000000000000))*(cj16)*(x1380)))+(((sj17)*(x1377))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1381=((IkReal(1.00000000000000))*(sj13));
IkReal x1382=((r10)*(sj18));
IkReal x1383=((IkReal(1.00000000000000))*(cj18));
IkReal x1384=((cj13)*(r11));
IkReal x1385=((r01)*(sj13));
IkReal x1386=((cj13)*(r12));
IkReal x1387=((cj18)*(r00));
IkReal x1388=((npy)*(sj18));
IkReal x1389=((sj17)*(sj18));
IkReal x1390=((IkReal(1.00000000000000))*(cj17));
IkReal x1391=((r00)*(sj18));
IkReal x1392=((IkReal(1.00000000000000))*(cj13));
IkReal x1393=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x1388)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1383))));
evalcond[4]=((IkReal(1.00000000000000))+(((cj18)*(x1385)))+(((IkReal(-1.00000000000000))*(x1383)*(x1384)))+(((IkReal(-1.00000000000000))*(x1382)*(x1392)))+(((sj13)*(x1391))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((sj17)*(x1388)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1383)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1383)))+(((IkReal(-1.00000000000000))*(x1391)*(x1392)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1381)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj18)*(x1384)*(x1390)))+(((cj17)*(x1393)))+(((sj17)*(x1386)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1381)))+(((IkReal(-1.00000000000000))*(cj17)*(x1381)*(x1387)))+(((cj17)*(sj18)*(x1385))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1384)*(x1389)))+(((sj17)*(x1393)))+(((IkReal(-1.00000000000000))*(sj17)*(x1381)*(x1387)))+(((cj17)*(r02)*(sj13)))+(((x1385)*(x1389)))+(((IkReal(-1.00000000000000))*(x1386)*(x1390))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1394=((r21)*(sj18));
IkReal x1395=((IkReal(1.00000000000000))*(cj15));
IkReal x1396=((r22)*(sj17));
IkReal x1397=((sj15)*(sj17));
IkReal x1398=((cj18)*(r20));
IkReal x1399=((IkReal(1.00000000000000))*(sj15));
IkReal x1400=((cj17)*(sj15));
IkReal x1401=((cj15)*(cj17));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1398)*(x1399)))+(((cj15)*(sj17)*(x1394)))+(((IkReal(-1.00000000000000))*(x1396)*(x1399)))+(((IkReal(-1.00000000000000))*(sj17)*(x1395)*(x1398)))+(((x1394)*(x1400)))+(((r22)*(x1401))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((x1394)*(x1397)))+(((x1398)*(x1401)))+(((cj15)*(x1396)))+(((IkReal(-1.00000000000000))*(x1397)*(x1398)))+(((IkReal(-1.00000000000000))*(cj17)*(x1394)*(x1395)))+(((r22)*(x1400))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1398)*(x1399)))+(((cj15)*(sj17)*(x1394)))+(((IkReal(-1.00000000000000))*(x1396)*(x1399)))+(((IkReal(-1.00000000000000))*(sj17)*(x1395)*(x1398)))+(((x1394)*(x1400)))+(((r22)*(x1401)))))), ((gconst16)*(((((x1394)*(x1397)))+(((x1398)*(x1401)))+(((cj15)*(x1396)))+(((IkReal(-1.00000000000000))*(x1397)*(x1398)))+(((IkReal(-1.00000000000000))*(cj17)*(x1394)*(x1395)))+(((r22)*(x1400)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1402=IKsin(j14);
IkReal x1403=IKcos(j14);
IkReal x1404=((cj17)*(sj18));
IkReal x1405=((IkReal(1.00000000000000))*(sj17));
IkReal x1406=((cj18)*(r20));
IkReal x1407=((sj13)*(sj17));
IkReal x1408=((cj18)*(r10));
IkReal x1409=((cj13)*(r02));
IkReal x1410=((cj13)*(r01));
IkReal x1411=((sj17)*(sj18));
IkReal x1412=((IkReal(1.00000000000000))*(cj17));
IkReal x1413=((cj15)*(x1402));
IkReal x1414=((sj15)*(x1403));
IkReal x1415=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1416=((sj15)*(x1402));
IkReal x1417=((cj13)*(cj18)*(r00));
IkReal x1418=((cj15)*(x1403));
IkReal x1419=((x1413)+(x1414));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1405)))+(((r21)*(x1404)))+(x1416)+(((IkReal(-1.00000000000000))*(x1406)*(x1412)))+(((IkReal(-1.00000000000000))*(x1418))));
evalcond[1]=((((r21)*(x1411)))+(((IkReal(-1.00000000000000))*(x1405)*(x1406)))+(((cj17)*(r22)))+(x1419));
evalcond[2]=((((sj17)*(x1409)))+(((IkReal(-1.00000000000000))*(x1404)*(x1410)))+(((r12)*(x1407)))+(((cj17)*(sj13)*(x1408)))+(((IkReal(-1.00000000000000))*(x1404)*(x1415)))+(x1419)+(((cj17)*(x1417))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj18)*(x1405)*(x1410)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1412)))+(((sj17)*(x1417)))+(x1418)+(((IkReal(-1.00000000000000))*(x1409)*(x1412)))+(((IkReal(-1.00000000000000))*(x1416)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1405)))+(((x1407)*(x1408))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1420=((IkReal(1.00000000000000))*(sj13));
IkReal x1421=((r10)*(sj18));
IkReal x1422=((IkReal(1.00000000000000))*(cj18));
IkReal x1423=((cj13)*(r11));
IkReal x1424=((r01)*(sj13));
IkReal x1425=((cj13)*(r12));
IkReal x1426=((cj18)*(r00));
IkReal x1427=((npy)*(sj18));
IkReal x1428=((sj17)*(sj18));
IkReal x1429=((IkReal(1.00000000000000))*(cj17));
IkReal x1430=((r00)*(sj18));
IkReal x1431=((IkReal(1.00000000000000))*(cj13));
IkReal x1432=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x1427)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1422)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj13)*(x1430)))+(((cj18)*(x1424)))+(((IkReal(-1.00000000000000))*(x1422)*(x1423)))+(((IkReal(-1.00000000000000))*(x1421)*(x1431))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1422)))+(((sj17)*(x1427)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1420)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(x1430)*(x1431)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1422))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj18)*(x1423)*(x1429)))+(((cj17)*(sj18)*(x1424)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1420)))+(((sj17)*(x1425)))+(((cj17)*(x1432)))+(((IkReal(-1.00000000000000))*(cj17)*(x1420)*(x1426))));
evalcond[8]=((((x1424)*(x1428)))+(((sj17)*(x1432)))+(((IkReal(-1.00000000000000))*(x1425)*(x1429)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj17)*(x1420)*(x1426)))+(((IkReal(-1.00000000000000))*(x1423)*(x1428))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1433=((r21)*(sj18));
IkReal x1434=((cj15)*(cj17));
IkReal x1435=((sj15)*(sj17));
IkReal x1436=((cj15)*(sj17));
IkReal x1437=((cj17)*(sj15));
IkReal x1438=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x1436)*(x1438)))+(((cj18)*(r20)*(x1437)))+(((x1433)*(x1436)))+(((IkReal(-1.00000000000000))*(x1433)*(x1437)))+(((r22)*(x1434)))+(((r22)*(x1435))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r22)*(x1436)))+(((IkReal(-1.00000000000000))*(x1435)*(x1438)))+(((IkReal(-1.00000000000000))*(x1434)*(x1438)))+(((x1433)*(x1435)))+(((x1433)*(x1434)))+(((r22)*(x1437))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(x1436)*(x1438)))+(((cj18)*(r20)*(x1437)))+(((x1433)*(x1436)))+(((IkReal(-1.00000000000000))*(x1433)*(x1437)))+(((r22)*(x1434)))+(((r22)*(x1435)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r22)*(x1436)))+(((IkReal(-1.00000000000000))*(x1435)*(x1438)))+(((IkReal(-1.00000000000000))*(x1434)*(x1438)))+(((x1433)*(x1435)))+(((x1433)*(x1434)))+(((r22)*(x1437)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1439=IKsin(j14);
IkReal x1440=IKcos(j14);
IkReal x1441=((cj17)*(sj18));
IkReal x1442=((IkReal(1.00000000000000))*(sj17));
IkReal x1443=((cj18)*(r20));
IkReal x1444=((sj13)*(sj17));
IkReal x1445=((cj18)*(r10));
IkReal x1446=((cj13)*(r02));
IkReal x1447=((cj13)*(r01));
IkReal x1448=((sj17)*(sj18));
IkReal x1449=((IkReal(1.00000000000000))*(cj17));
IkReal x1450=((sj15)*(x1439));
IkReal x1451=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1452=((sj15)*(x1440));
IkReal x1453=((cj15)*(x1439));
IkReal x1454=((cj13)*(cj18)*(r00));
IkReal x1455=((IkReal(1.00000000000000))*(cj15)*(x1440));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1442)))+(((IkReal(-1.00000000000000))*(x1455)))+(((r21)*(x1441)))+(x1450)+(((IkReal(-1.00000000000000))*(x1443)*(x1449))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1452)))+(((IkReal(-1.00000000000000))*(x1453)))+(((r21)*(x1448)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x1442)*(x1443))));
evalcond[2]=((((r12)*(x1444)))+(((IkReal(-1.00000000000000))*(x1441)*(x1451)))+(((cj17)*(sj13)*(x1445)))+(((IkReal(-1.00000000000000))*(x1441)*(x1447)))+(x1452)+(x1453)+(((cj17)*(x1454)))+(((sj17)*(x1446))));
evalcond[3]=((((x1444)*(x1445)))+(((IkReal(-1.00000000000000))*(x1446)*(x1449)))+(((IkReal(-1.00000000000000))*(sj18)*(x1442)*(x1447)))+(((sj17)*(x1454)))+(((IkReal(-1.00000000000000))*(x1455)))+(x1450)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1442)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1449))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1456=((sj15)*(sj16));
IkReal x1457=((r22)*(sj17));
IkReal x1458=((cj18)*(r21));
IkReal x1459=((r20)*(sj18));
IkReal x1460=((cj15)*(sj16));
IkReal x1461=((cj17)*(r21)*(sj18));
IkReal x1462=((cj17)*(cj18)*(r20));
if( IKabs(((gconst15)*(((((x1456)*(x1457)))+(((IkReal(-1.00000000000000))*(x1456)*(x1461)))+(((x1456)*(x1462)))+(((cj15)*(x1458)))+(((cj15)*(x1459))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x1457)*(x1460)))+(((sj15)*(x1458)))+(((sj15)*(x1459)))+(((IkReal(-1.00000000000000))*(x1460)*(x1462)))+(((x1460)*(x1461))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst15)*(((((x1456)*(x1457)))+(((IkReal(-1.00000000000000))*(x1456)*(x1461)))+(((x1456)*(x1462)))+(((cj15)*(x1458)))+(((cj15)*(x1459)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(x1457)*(x1460)))+(((sj15)*(x1458)))+(((sj15)*(x1459)))+(((IkReal(-1.00000000000000))*(x1460)*(x1462)))+(((x1460)*(x1461)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x1463=IKsin(j14);
IkReal x1464=IKcos(j14);
IkReal x1465=((IkReal(1.00000000000000))*(cj18));
IkReal x1466=((cj13)*(r01));
IkReal x1467=((IkReal(1.00000000000000))*(sj18));
IkReal x1468=((cj13)*(r00));
IkReal x1469=((sj13)*(sj17));
IkReal x1470=((cj18)*(r10));
IkReal x1471=((r21)*(sj18));
IkReal x1472=((IkReal(1.00000000000000))*(sj16));
IkReal x1473=((cj13)*(r02));
IkReal x1474=((IkReal(1.00000000000000))*(cj17));
IkReal x1475=((sj13)*(x1467));
IkReal x1476=((cj16)*(x1464));
IkReal x1477=((sj15)*(x1463));
IkReal x1478=((cj15)*(x1463));
IkReal x1479=((cj15)*(x1464));
IkReal x1480=((sj15)*(x1464));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x1472)*(x1480)))+(((IkReal(-1.00000000000000))*(x1472)*(x1478))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1479)))+(((cj17)*(x1471)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(r20)*(x1465)))+(x1477));
evalcond[2]=((((cj16)*(x1478)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1465)))+(((sj17)*(x1471)))+(((sj15)*(x1476))));
evalcond[3]=((((sj16)*(x1477)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(x1465)))+(((IkReal(-1.00000000000000))*(x1467)*(x1468)))+(((IkReal(-1.00000000000000))*(r10)*(x1475)))+(((IkReal(-1.00000000000000))*(x1465)*(x1466)))+(((IkReal(-1.00000000000000))*(x1472)*(x1479))));
evalcond[4]=((((cj17)*(sj13)*(x1470)))+(((IkReal(-1.00000000000000))*(cj17)*(x1466)*(x1467)))+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x1475)))+(((r12)*(x1469)))+(x1478)+(x1480)+(((sj17)*(x1473)))+(((cj17)*(cj18)*(x1468))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(x1467)*(x1469)))+(((cj15)*(x1476)))+(((IkReal(-1.00000000000000))*(sj17)*(x1466)*(x1467)))+(((cj18)*(sj17)*(x1468)))+(((IkReal(-1.00000000000000))*(cj16)*(x1477)))+(((x1469)*(x1470)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1474)))+(((IkReal(-1.00000000000000))*(x1473)*(x1474))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1481=((IkReal(4.00000000000000))*(npx));
IkReal x1482=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x1481)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x1482))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1482)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x1481))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x1481)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x1482)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1482)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x1481)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x1481)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x1482)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1482)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x1481)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x1483=IKsin(j15);
IkReal x1484=((npy)*(sj18));
IkReal x1485=((IkReal(1.00000000000000))*(sj17));
IkReal x1486=((cj18)*(npx));
IkReal x1487=((IkReal(0.250000000000000))*(x1483));
evalcond[0]=((((cj18)*(npy)))+(((sj16)*(x1487)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(x1486)))+(((IkReal(-1.00000000000000))*(npz)*(x1485)))+(((cj17)*(x1484)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj16)*(x1487)))+(((IkReal(-1.00000000000000))*(x1485)*(x1486)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x1484))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1488=((IkReal(1.00000000000000))*(sj13));
IkReal x1489=((r10)*(sj18));
IkReal x1490=((IkReal(1.00000000000000))*(cj18));
IkReal x1491=((cj13)*(r11));
IkReal x1492=((r01)*(sj13));
IkReal x1493=((cj13)*(r12));
IkReal x1494=((cj18)*(r00));
IkReal x1495=((npy)*(sj18));
IkReal x1496=((sj17)*(sj18));
IkReal x1497=((IkReal(1.00000000000000))*(cj17));
IkReal x1498=((r00)*(sj18));
IkReal x1499=((IkReal(1.00000000000000))*(cj13));
IkReal x1500=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1490)))+(((cj17)*(x1495)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1490)*(x1491)))+(((sj13)*(x1498)))+(((cj18)*(x1492)))+(((IkReal(-1.00000000000000))*(x1489)*(x1499))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1490)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x1495))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1490)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1488)))+(((IkReal(-1.00000000000000))*(x1488)*(x1489)))+(((IkReal(-1.00000000000000))*(x1498)*(x1499))));
evalcond[7]=((((cj17)*(x1500)))+(((IkReal(-1.00000000000000))*(cj17)*(x1488)*(x1494)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1488)))+(((IkReal(-1.00000000000000))*(sj18)*(x1491)*(x1497)))+(((cj17)*(sj18)*(x1492)))+(((sj17)*(x1493))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj17)*(x1488)*(x1494)))+(((IkReal(-1.00000000000000))*(x1491)*(x1496)))+(((IkReal(-1.00000000000000))*(x1493)*(x1497)))+(((cj17)*(r02)*(sj13)))+(((x1492)*(x1496)))+(((sj17)*(x1500))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1501=((r21)*(sj18));
IkReal x1502=((IkReal(1.00000000000000))*(cj15));
IkReal x1503=((r22)*(sj17));
IkReal x1504=((sj15)*(sj17));
IkReal x1505=((cj18)*(r20));
IkReal x1506=((IkReal(1.00000000000000))*(sj15));
IkReal x1507=((cj17)*(sj15));
IkReal x1508=((cj15)*(cj17));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1505)*(x1506)))+(((cj15)*(sj17)*(x1501)))+(((IkReal(-1.00000000000000))*(sj17)*(x1502)*(x1505)))+(((x1501)*(x1507)))+(((r22)*(x1508)))+(((IkReal(-1.00000000000000))*(x1503)*(x1506))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x1504)*(x1505)))+(((x1501)*(x1504)))+(((cj15)*(x1503)))+(((r22)*(x1507)))+(((IkReal(-1.00000000000000))*(cj17)*(x1501)*(x1502)))+(((x1505)*(x1508))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1505)*(x1506)))+(((cj15)*(sj17)*(x1501)))+(((IkReal(-1.00000000000000))*(sj17)*(x1502)*(x1505)))+(((x1501)*(x1507)))+(((r22)*(x1508)))+(((IkReal(-1.00000000000000))*(x1503)*(x1506)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(x1504)*(x1505)))+(((x1501)*(x1504)))+(((cj15)*(x1503)))+(((r22)*(x1507)))+(((IkReal(-1.00000000000000))*(cj17)*(x1501)*(x1502)))+(((x1505)*(x1508)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1509=IKsin(j14);
IkReal x1510=IKcos(j14);
IkReal x1511=((cj17)*(sj18));
IkReal x1512=((IkReal(1.00000000000000))*(sj17));
IkReal x1513=((cj18)*(r20));
IkReal x1514=((sj13)*(sj17));
IkReal x1515=((cj18)*(r10));
IkReal x1516=((cj13)*(r02));
IkReal x1517=((cj13)*(r01));
IkReal x1518=((sj17)*(sj18));
IkReal x1519=((IkReal(1.00000000000000))*(cj17));
IkReal x1520=((cj15)*(x1509));
IkReal x1521=((sj15)*(x1510));
IkReal x1522=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1523=((sj15)*(x1509));
IkReal x1524=((cj13)*(cj18)*(r00));
IkReal x1525=((cj15)*(x1510));
IkReal x1526=((x1520)+(x1521));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1512)))+(((IkReal(-1.00000000000000))*(x1513)*(x1519)))+(x1523)+(((r21)*(x1511)))+(((IkReal(-1.00000000000000))*(x1525))));
evalcond[1]=((((cj17)*(r22)))+(x1526)+(((r21)*(x1518)))+(((IkReal(-1.00000000000000))*(x1512)*(x1513))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1511)*(x1517)))+(((r12)*(x1514)))+(x1526)+(((cj17)*(sj13)*(x1515)))+(((sj17)*(x1516)))+(((cj17)*(x1524)))+(((IkReal(-1.00000000000000))*(x1511)*(x1522))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1516)*(x1519)))+(((x1514)*(x1515)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1519)))+(x1525)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1512)))+(((IkReal(-1.00000000000000))*(sj18)*(x1512)*(x1517)))+(((sj17)*(x1524)))+(((IkReal(-1.00000000000000))*(x1523))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1527=((IkReal(1.00000000000000))*(sj13));
IkReal x1528=((r10)*(sj18));
IkReal x1529=((IkReal(1.00000000000000))*(cj18));
IkReal x1530=((cj13)*(r11));
IkReal x1531=((r01)*(sj13));
IkReal x1532=((cj13)*(r12));
IkReal x1533=((cj18)*(r00));
IkReal x1534=((npy)*(sj18));
IkReal x1535=((sj17)*(sj18));
IkReal x1536=((IkReal(1.00000000000000))*(cj17));
IkReal x1537=((r00)*(sj18));
IkReal x1538=((IkReal(1.00000000000000))*(cj13));
IkReal x1539=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1529)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((cj17)*(x1534))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1529)*(x1530)))+(((cj18)*(x1531)))+(((IkReal(-1.00000000000000))*(x1528)*(x1538)))+(((sj13)*(x1537))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1529)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x1534)))+(((IkReal(0.250000000000000))*(sj15))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1529)))+(((IkReal(-1.00000000000000))*(x1527)*(x1528)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1527))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj17)*(x1527)*(x1533)))+(((cj17)*(sj18)*(x1531)))+(((IkReal(-1.00000000000000))*(sj18)*(x1530)*(x1536)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1527)))+(((sj17)*(x1532)))+(((cj17)*(x1539))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1530)*(x1535)))+(((IkReal(-1.00000000000000))*(x1532)*(x1536)))+(((x1531)*(x1535)))+(((cj17)*(r02)*(sj13)))+(((sj17)*(x1539)))+(((IkReal(-1.00000000000000))*(sj17)*(x1527)*(x1533))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1540=((r21)*(sj18));
IkReal x1541=((cj15)*(cj17));
IkReal x1542=((sj15)*(sj17));
IkReal x1543=((cj15)*(sj17));
IkReal x1544=((cj17)*(sj15));
IkReal x1545=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x1543)*(x1545)))+(((cj18)*(r20)*(x1544)))+(((x1540)*(x1543)))+(((r22)*(x1542)))+(((r22)*(x1541)))+(((IkReal(-1.00000000000000))*(x1540)*(x1544))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(r22)*(x1543)))+(((x1540)*(x1541)))+(((x1540)*(x1542)))+(((IkReal(-1.00000000000000))*(x1542)*(x1545)))+(((r22)*(x1544)))+(((IkReal(-1.00000000000000))*(x1541)*(x1545))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(x1543)*(x1545)))+(((cj18)*(r20)*(x1544)))+(((x1540)*(x1543)))+(((r22)*(x1542)))+(((r22)*(x1541)))+(((IkReal(-1.00000000000000))*(x1540)*(x1544)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(r22)*(x1543)))+(((x1540)*(x1541)))+(((x1540)*(x1542)))+(((IkReal(-1.00000000000000))*(x1542)*(x1545)))+(((r22)*(x1544)))+(((IkReal(-1.00000000000000))*(x1541)*(x1545)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1546=IKsin(j14);
IkReal x1547=IKcos(j14);
IkReal x1548=((cj17)*(sj18));
IkReal x1549=((IkReal(1.00000000000000))*(sj17));
IkReal x1550=((cj18)*(r20));
IkReal x1551=((sj13)*(sj17));
IkReal x1552=((cj18)*(r10));
IkReal x1553=((cj13)*(r02));
IkReal x1554=((cj13)*(r01));
IkReal x1555=((sj17)*(sj18));
IkReal x1556=((IkReal(1.00000000000000))*(cj17));
IkReal x1557=((sj15)*(x1546));
IkReal x1558=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1559=((sj15)*(x1547));
IkReal x1560=((cj15)*(x1546));
IkReal x1561=((cj13)*(cj18)*(r00));
IkReal x1562=((IkReal(1.00000000000000))*(cj15)*(x1547));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1549)))+(x1557)+(((r21)*(x1548)))+(((IkReal(-1.00000000000000))*(x1550)*(x1556)))+(((IkReal(-1.00000000000000))*(x1562))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1559)))+(((IkReal(-1.00000000000000))*(x1549)*(x1550)))+(((cj17)*(r22)))+(((r21)*(x1555)))+(((IkReal(-1.00000000000000))*(x1560))));
evalcond[2]=((((cj17)*(sj13)*(x1552)))+(((sj17)*(x1553)))+(((cj17)*(x1561)))+(((IkReal(-1.00000000000000))*(x1548)*(x1554)))+(((IkReal(-1.00000000000000))*(x1548)*(x1558)))+(((r12)*(x1551)))+(x1560)+(x1559));
evalcond[3]=((((x1551)*(x1552)))+(((sj17)*(x1561)))+(((IkReal(-1.00000000000000))*(sj18)*(x1549)*(x1554)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1556)))+(((IkReal(-1.00000000000000))*(x1553)*(x1556)))+(x1557)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1549)))+(((IkReal(-1.00000000000000))*(x1562))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1563=((sj15)*(sj16));
IkReal x1564=((r22)*(sj17));
IkReal x1565=((cj18)*(r21));
IkReal x1566=((r20)*(sj18));
IkReal x1567=((cj15)*(sj16));
IkReal x1568=((cj17)*(r21)*(sj18));
IkReal x1569=((cj17)*(cj18)*(r20));
if( IKabs(((gconst15)*(((((cj15)*(x1565)))+(((cj15)*(x1566)))+(((x1563)*(x1564)))+(((x1563)*(x1569)))+(((IkReal(-1.00000000000000))*(x1563)*(x1568))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((x1567)*(x1568)))+(((sj15)*(x1565)))+(((sj15)*(x1566)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-1.00000000000000))*(x1564)*(x1567))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst15)*(((((cj15)*(x1565)))+(((cj15)*(x1566)))+(((x1563)*(x1564)))+(((x1563)*(x1569)))+(((IkReal(-1.00000000000000))*(x1563)*(x1568)))))), ((gconst15)*(((((x1567)*(x1568)))+(((sj15)*(x1565)))+(((sj15)*(x1566)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-1.00000000000000))*(x1564)*(x1567)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x1570=IKsin(j14);
IkReal x1571=IKcos(j14);
IkReal x1572=((IkReal(1.00000000000000))*(cj18));
IkReal x1573=((cj13)*(r01));
IkReal x1574=((IkReal(1.00000000000000))*(sj18));
IkReal x1575=((cj13)*(r00));
IkReal x1576=((sj13)*(sj17));
IkReal x1577=((cj18)*(r10));
IkReal x1578=((r21)*(sj18));
IkReal x1579=((IkReal(1.00000000000000))*(sj16));
IkReal x1580=((cj13)*(r02));
IkReal x1581=((IkReal(1.00000000000000))*(cj17));
IkReal x1582=((sj13)*(x1574));
IkReal x1583=((cj16)*(x1571));
IkReal x1584=((sj15)*(x1570));
IkReal x1585=((cj15)*(x1570));
IkReal x1586=((cj15)*(x1571));
IkReal x1587=((sj15)*(x1571));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x1579)*(x1587)))+(((IkReal(-1.00000000000000))*(x1579)*(x1585))));
evalcond[1]=((((cj17)*(x1578)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(r20)*(x1572)))+(x1584)+(((IkReal(-1.00000000000000))*(x1586))));
evalcond[2]=((((sj17)*(x1578)))+(((cj16)*(x1585)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1572)))+(((sj15)*(x1583))));
evalcond[3]=((((sj16)*(x1584)))+(((IkReal(-1.00000000000000))*(x1572)*(x1573)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(x1572)))+(((IkReal(-1.00000000000000))*(x1574)*(x1575)))+(((IkReal(-1.00000000000000))*(x1579)*(x1586)))+(((IkReal(-1.00000000000000))*(r10)*(x1582))));
evalcond[4]=((((cj17)*(sj13)*(x1577)))+(((IkReal(-1.00000000000000))*(cj17)*(x1573)*(x1574)))+(((r12)*(x1576)))+(x1587)+(x1585)+(((cj17)*(cj18)*(x1575)))+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x1582)))+(((sj17)*(x1580))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(x1574)*(x1576)))+(((x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(x1580)*(x1581)))+(((cj18)*(sj17)*(x1575)))+(((cj15)*(x1583)))+(((IkReal(-1.00000000000000))*(cj16)*(x1584)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1581)))+(((IkReal(-1.00000000000000))*(sj17)*(x1573)*(x1574))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j13;
vinfos[1].indices[0] = _ij13[0];
vinfos[1].indices[1] = _ij13[1];
vinfos[1].maxsolutions = _nj13;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j14;
vinfos[2].indices[0] = _ij14[0];
vinfos[2].indices[1] = _ij14[1];
vinfos[2].maxsolutions = _nj14;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j15;
vinfos[3].indices[0] = _ij15[0];
vinfos[3].indices[1] = _ij15[1];
vinfos[3].maxsolutions = _nj15;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j16;
vinfos[4].indices[0] = _ij16[0];
vinfos[4].indices[1] = _ij16[1];
vinfos[4].maxsolutions = _nj16;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j17;
vinfos[5].indices[0] = _ij17[0];
vinfos[5].indices[1] = _ij17[1];
vinfos[5].maxsolutions = _nj17;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j18;
vinfos[6].indices[0] = _ij18[0];
vinfos[6].indices[1] = _ij18[1];
vinfos[6].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "2302df6197be58eba53c61597ce2b929"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE

int ik_solve(IkReal eerot[9], IkReal eetrans[3], std::vector<std::vector<IkReal> >& sol_joint, std::vector<IkReal> free_joint)
{
    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
	for(std::size_t i = 0; i < vfree.size(); ++i)
		vfree[i] = free_joint[i];
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        return -1;
    }

	sol_joint.resize(solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
		sol_joint[i].resize(solvalues.size());
        for( std::size_t j = 0; j < solvalues.size(); ++j)
			sol_joint[i][j] = solvalues[j];
    }
    return 0;
}

} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_LEFT6DF0_NAMESPACE
using namespace IKFAST_LEFT6DF0_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
