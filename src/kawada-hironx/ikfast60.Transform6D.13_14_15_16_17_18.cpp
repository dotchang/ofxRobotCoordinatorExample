/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 60 generated on 2012-09-02 09:35:50.532666
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==60);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_LEFT6D {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKcos(j[2]);
x3=IKsin(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[5]);
x9=IKsin(j[5]);
x10=IKcos(j[4]);
x11=IKsin(j[4]);
x12=((IkReal(0.965925532213041))*(x10));
x13=((IkReal(0.258820142606703))*(x10));
x14=((IkReal(0.258820142606703))*(x11));
x15=((IkReal(1.00000000000000))*(x10));
x16=((IkReal(0.965925532213041))*(x9));
x17=((IkReal(0.258820142606703))*(x8));
x18=((IkReal(1.00000000000000))*(x7));
x19=((IkReal(0.965925532213041))*(x11));
x20=((IkReal(0.0289777659663912))*(x6));
x21=((IkReal(0.00776460427820108))*(x6));
x22=((IkReal(1.00000000000000))*(x11));
x23=((IkReal(0.0900000000000000))*(x0));
x24=((IkReal(1.00000000000000))*(x2));
x25=((IkReal(0.0300000000000000))*(x0));
x26=((IkReal(0.0900000000000000))*(x5));
x27=((IkReal(0.258820142606703))*(x9));
x28=((IkReal(1.00000000000000))*(x0));
x29=((IkReal(0.965925532213041))*(x8));
x30=((IkReal(1.00000000000000))*(x5));
x31=((x3)*(x4));
x32=((x1)*(x2));
x33=((x3)*(x6));
x34=((x0)*(x3));
x35=((x1)*(x4));
x36=((x2)*(x3));
x37=((x30)*(x6));
x38=((x1)*(x24));
x39=((IkReal(0.0900000000000000))*(x31));
x40=((IkReal(0.0900000000000000))*(x32));
x41=((x35)*(x6));
x42=((x28)*(x31));
x43=((IkReal(1.00000000000000))*(x31)*(x6));
x44=((((IkReal(-1.00000000000000))*(x31)))+(x38));
x45=((((IkReal(-1.00000000000000))*(x40)))+(x39));
x46=((((IkReal(-1.00000000000000))*(x39)))+(x40));
x47=((((IkReal(1.00000000000000))*(x35)))+(((x24)*(x3))));
x48=((((IkReal(0.0900000000000000))*(x36)))+(((IkReal(0.0900000000000000))*(x35))));
x49=((IkReal(-1.00000000000000))*(x47));
x50=((x10)*(x45));
x51=((((IkReal(-1.00000000000000))*(x42)))+(((x0)*(x32))));
x52=((((IkReal(-1.00000000000000))*(x43)))+(((x32)*(x6))));
x53=((x48)*(x5));
x54=((x49)*(x7));
x55=((x47)*(x5));
x56=((((IkReal(-1.00000000000000))*(x0)*(x38)))+(x42));
x57=((((IkReal(-1.00000000000000))*(x38)*(x6)))+(x43));
x58=((((x28)*(x35)))+(((x24)*(x34))));
x59=((x23)*(((x36)+(x35))));
x60=((((x24)*(x33)))+(((IkReal(1.00000000000000))*(x41))));
x61=((((IkReal(0.0900000000000000))*(x41)))+(((IkReal(0.0900000000000000))*(x2)*(x33))));
x62=((IkReal(-1.00000000000000))*(x61));
x63=((x47)*(x7)*(x8));
x64=((x5)*(x52));
x65=((x56)*(x7));
x66=((((x18)*(x6)))+(((IkReal(-1.00000000000000))*(x30)*(x51))));
x67=((((IkReal(-1.00000000000000))*(x26)*(x51)))+(((IkReal(0.0900000000000000))*(x6)*(x7))));
x68=((((x0)*(x5)))+(((x57)*(x7))));
x69=((((IkReal(-1.00000000000000))*(x0)*(x18)))+(((IkReal(-1.00000000000000))*(x30)*(x52))));
x70=((((IkReal(-1.00000000000000))*(x26)*(x52)))+(((IkReal(-1.00000000000000))*(x23)*(x7))));
x71=((((IkReal(-1.00000000000000))*(x18)*(x57)))+(((IkReal(-1.00000000000000))*(x28)*(x5))));
x72=((((x15)*(((((IkReal(-1.00000000000000))*(x31)))+(x38)))))+(((IkReal(-1.00000000000000))*(x22)*(x55))));
x73=((((x15)*(x58)))+(((IkReal(-1.00000000000000))*(x22)*(x66))));
x74=((((x15)*(x60)))+(((IkReal(-1.00000000000000))*(x22)*(x69))));
eerot[0]=((((x9)*(((((IkReal(-1.00000000000000))*(x18)*(x56)))+(x37)))))+(((x73)*(x8))));
eerot[1]=((((x73)*(x9)))+(((x8)*(((((IkReal(-1.00000000000000))*(x37)))+(x65))))));
eerot[2]=((((x11)*(x58)))+(((x10)*(x66))));
eetrans[0]=((((IkReal(-0.250000000000000))*(x34)))+(((IkReal(-0.235000000000000))*(x2)*(x34)))+(((IkReal(-1.00000000000000))*(x10)*(x59)))+(((x11)*(x67)))+(((IkReal(-1.00000000000000))*(x25)*(x32)))+(((x11)*(x59)))+(((IkReal(-0.235000000000000))*(x0)*(x35)))+(((x10)*(x67)))+(((x25)*(x31)))+(((IkReal(-0.0950000000000000))*(x6))));
eerot[3]=((((x27)*(x54)))+(((x16)*(x71)))+(((x17)*(x72)))+(((x29)*(x74))));
eerot[4]=((((x29)*(x68)))+(((x16)*(x74)))+(((x17)*(x47)*(x7)))+(((x27)*(x72))));
eerot[5]=((((x12)*(x69)))+(((x13)*(x55)))+(((x14)*(x44)))+(((x19)*(x60))));
eetrans[1]=((IkReal(0.145000000000000))+(((IkReal(0.0917629255602389))*(x0)))+(((x12)*(x62)))+(((x13)*(x53)))+(((IkReal(0.0608227335125751))*(x31)))+(((x20)*(x31)))+(((IkReal(-0.0647050356516757))*(x1)))+(((IkReal(-1.00000000000000))*(x20)*(x32)))+(((x14)*(x53)))+(((IkReal(-0.0608227335125751))*(x32)))+(((x19)*(x70)))+(((x14)*(x46)))+(((x19)*(x61)))+(((IkReal(-0.226992500070065))*(x41)))+(((IkReal(0.00776460427820108))*(x36)))+(((IkReal(0.00776460427820108))*(x35)))+(((IkReal(-0.241481383053260))*(x33)))+(((x13)*(x45)))+(((x12)*(x70)))+(((IkReal(-0.226992500070065))*(x2)*(x33))));
eerot[6]=((((x16)*(x54)))+(((IkReal(-1.00000000000000))*(x27)*(x71)))+(((x29)*(x72)))+(((IkReal(-1.00000000000000))*(x17)*(x74))));
eerot[7]=((((x16)*(x72)))+(((x29)*(x47)*(x7)))+(((IkReal(-1.00000000000000))*(x27)*(x74)))+(((IkReal(-1.00000000000000))*(x17)*(x68))));
eerot[8]=((((x12)*(x55)))+(((x19)*(x44)))+(((IkReal(-1.00000000000000))*(x14)*(x60)))+(((IkReal(-1.00000000000000))*(x13)*(x69))));
IkReal x75=((IkReal(1.00000000000000))*(x14));
IkReal x76=((IkReal(1.00000000000000))*(x13));
eetrans[2]=((IkReal(0.370296000000000))+(((IkReal(0.0608227335125751))*(x41)))+(((IkReal(0.226992500070065))*(x31)))+(((x12)*(x53)))+(((x19)*(x46)))+(((IkReal(0.0608227335125751))*(x2)*(x33)))+(((IkReal(-1.00000000000000))*(x70)*(x76)))+(((IkReal(-1.00000000000000))*(x70)*(x75)))+(((IkReal(-0.0245879135476367))*(x0)))+(((x19)*(x53)))+(((IkReal(-0.226992500070065))*(x32)))+(((x21)*(x32)))+(((IkReal(-0.241481383053260))*(x1)))+(((IkReal(-1.00000000000000))*(x62)*(x76)))+(((IkReal(-1.00000000000000))*(x61)*(x75)))+(((x12)*(x45)))+(((IkReal(0.0289777659663912))*(x36)))+(((IkReal(0.0289777659663912))*(x35)))+(((IkReal(-1.00000000000000))*(x21)*(x31)))+(((IkReal(0.0647050356516757))*(x33))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j13,cj13,sj13,htj13,j14,cj14,sj14,htj14,j15,cj15,sj15,htj15,j16,cj16,sj16,htj16,j17,cj17,sj17,htj17,j18,cj18,sj18,htj18,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij13[2], _nj13,_ij14[2], _nj14,_ij15[2], _nj15,_ij16[2], _nj16,_ij17[2], _nj17,_ij18[2], _nj18;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j13=numeric_limits<IkReal>::quiet_NaN(); _ij13[0] = -1; _ij13[1] = -1; _nj13 = -1; j14=numeric_limits<IkReal>::quiet_NaN(); _ij14[0] = -1; _ij14[1] = -1; _nj14 = -1; j15=numeric_limits<IkReal>::quiet_NaN(); _ij15[0] = -1; _ij15[1] = -1; _nj15 = -1; j16=numeric_limits<IkReal>::quiet_NaN(); _ij16[0] = -1; _ij16[1] = -1; _nj16 = -1; j17=numeric_limits<IkReal>::quiet_NaN(); _ij17[0] = -1; _ij17[1] = -1; _nj17 = -1; j18=numeric_limits<IkReal>::quiet_NaN(); _ij18[0] = -1; _ij18[1] = -1; _nj18 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((IkReal(-1.00000000000000))*(r00));
new_r01=r01;
new_r02=((IkReal(-1.00000000000000))*(r02));
new_px=((px)+(((IkReal(-0.0900000000000000))*(r02))));
new_r10=((((IkReal(-0.965925532213041))*(r10)))+(((IkReal(0.258820142606703))*(r20))));
new_r11=((((IkReal(0.965925532213041))*(r11)))+(((IkReal(-0.258820142606703))*(r21))));
new_r12=((((IkReal(-0.965925532213041))*(r12)))+(((IkReal(0.258820142606703))*(r22))));
new_py=((IkReal(-0.0442191386441994))+(((IkReal(-0.258820142606703))*(pz)))+(((IkReal(0.0232938128346032))*(r22)))+(((IkReal(-0.0869332978991737))*(r12)))+(((IkReal(0.965925532213041))*(py))));
new_r20=((((IkReal(-0.965925532213041))*(r20)))+(((IkReal(-0.258820142606703))*(r10))));
new_r21=((((IkReal(0.258820142606703))*(r11)))+(((IkReal(0.965925532213041))*(r21))));
new_r22=((((IkReal(-0.965925532213041))*(r22)))+(((IkReal(-0.258820142606703))*(r12))));
new_pz=((IkReal(-0.395207281554332))+(((IkReal(0.258820142606703))*(py)))+(((IkReal(-0.0232938128346032))*(r12)))+(((IkReal(0.965925532213041))*(pz)))+(((IkReal(-0.0869332978991737))*(r22))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[72], zeror[48];
int numroots;
IkReal x77=((IkReal(0.650000000000000))*(npx));
IkReal x78=((IkReal(0.0600000000000000))*(npz));
IkReal x79=((IkReal(1.00000000000000))*(pp));
IkReal x80=((IkReal(0.0600000000000000))*(npy));
IkReal x81=((IkReal(0.0950000000000000))*(r22));
IkReal x82=((IkReal(0.120000000000000))*(npx));
IkReal x83=((IkReal(1.00000000000000))*(rxp0_2));
IkReal x84=((IkReal(2.00000000000000))*(rxp1_2));
IkReal x85=((IkReal(0.0950000000000000))*(r21));
IkReal x86=((IkReal(0.940000000000000))*(npz));
IkReal x87=((IkReal(0.190000000000000))*(r20));
IkReal x88=((IkReal(2.00000000000000))*(rxp2_2));
IkReal x89=((IkReal(0.180000000000000))*(r21));
IkReal x90=((IkReal(0.360000000000000))*(r20));
IkReal x91=((IkReal(0.380000000000000))*(r21));
IkReal x92=((IkReal(0.290000000000000))*(npx));
IkReal x93=((IkReal(0.00570000000000000))+(((IkReal(-1.00000000000000))*(x80))));
IkReal x94=((rxp0_2)+(((IkReal(-1.00000000000000))*(x81))));
IkReal x95=((IkReal(0.580000000000000))*(npy));
IkReal x96=((IkReal(-0.00570000000000000))+(((IkReal(-1.00000000000000))*(x80))));
IkReal x97=((IkReal(-1.30000000000000))*(npy));
IkReal x98=((IkReal(-0.0950000000000000))*(r21));
IkReal x99=((IkReal(-0.190000000000000))*(r20));
IkReal x100=((IkReal(0.00570000000000000))+(x80));
IkReal x101=((IkReal(-0.00570000000000000))+(x80));
IkReal x102=((rxp0_2)+(x81));
IkReal x103=((IkReal(-2.00000000000000))*(rxp1_2));
IkReal x104=((x81)+(((IkReal(-1.00000000000000))*(x83))));
IkReal x105=((IkReal(-0.0350000000000000))+(x77));
IkReal x106=((IkReal(0.0496000000000000))+(x78));
IkReal x107=((((IkReal(-1.00000000000000))*(x81)))+(((IkReal(-1.00000000000000))*(x83))));
IkReal x108=((x79)+(x78));
IkReal x109=((x82)+(x86));
IkReal x110=((x88)+(x89));
op[0]=((((IkReal(-1.00000000000000))*(x108)))+(x105));
op[1]=x100;
op[2]=x97;
op[3]=x82;
op[4]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x77)))+(((IkReal(-1.00000000000000))*(x108))));
op[5]=x93;
op[6]=x104;
op[7]=x98;
op[8]=x84;
op[9]=x99;
op[10]=x102;
op[11]=x85;
op[12]=x101;
op[13]=((((IkReal(-1.00000000000000))*(x79)))+(x105)+(x78));
op[14]=x82;
op[15]=x97;
op[16]=x96;
op[17]=((IkReal(-0.0350000000000000))+(((IkReal(-1.00000000000000))*(x77)))+(((IkReal(-1.00000000000000))*(x79)))+(x78));
op[18]=x98;
op[19]=x107;
op[20]=x99;
op[21]=x84;
op[22]=x85;
op[23]=x94;
op[24]=((IkReal(-0.0108000000000000))+(x109));
op[25]=IkReal(0);
op[26]=((IkReal(-0.240000000000000))*(npy));
op[27]=IkReal(0);
op[28]=((IkReal(-0.0108000000000000))+(x86)+(((IkReal(-1.00000000000000))*(x82))));
op[29]=IkReal(0);
op[30]=((x89)+(((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x87))));
op[31]=IkReal(0);
op[32]=((x91)+(x90));
op[33]=IkReal(0);
op[34]=((((IkReal(-1.00000000000000))*(x110)))+(x87));
op[35]=IkReal(0);
op[36]=IkReal(0);
op[37]=((IkReal(0.0108000000000000))+(x86)+(((IkReal(-1.00000000000000))*(x82))));
op[38]=IkReal(0);
op[39]=((IkReal(0.240000000000000))*(npy));
op[40]=IkReal(0);
op[41]=((IkReal(0.0108000000000000))+(x109));
op[42]=IkReal(0);
op[43]=((x89)+(x87)+(((IkReal(-1.00000000000000))*(x88))));
op[44]=IkReal(0);
op[45]=((x90)+(((IkReal(-1.00000000000000))*(x91))));
op[46]=IkReal(0);
op[47]=((((IkReal(-1.00000000000000))*(x110)))+(((IkReal(-1.00000000000000))*(x87))));
op[48]=((((IkReal(-1.00000000000000))*(x79)))+(x106)+(((IkReal(-1.00000000000000))*(x92))));
op[49]=x100;
op[50]=x95;
op[51]=x82;
op[52]=((((IkReal(-1.00000000000000))*(x79)))+(x106)+(x92));
op[53]=x93;
op[54]=x94;
op[55]=x98;
op[56]=x103;
op[57]=x99;
op[58]=x107;
op[59]=x85;
op[60]=x101;
op[61]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x108)))+(((IkReal(-1.00000000000000))*(x92))));
op[62]=x82;
op[63]=x95;
op[64]=x96;
op[65]=((IkReal(0.0496000000000000))+(((IkReal(-1.00000000000000))*(x108)))+(x92));
op[66]=x98;
op[67]=x102;
op[68]=x99;
op[69]=x103;
op[70]=x85;
op[71]=x104;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j17array[16], cj17array[16], sj17array[16], j18array[16], cj18array[16], sj18array[16], j16array[16], cj16array[16], sj16array[16];
int numsolutions = 0;
for(int ij17 = 0; ij17 < numroots; ij17 += 3)
{
IkReal htj17 = zeror[ij17+0], htj18 = zeror[ij17+1], htj16 = zeror[ij17+2];
j17array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj17)));
j18array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj18)));
j16array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj16)));
IkReal x111=(htj17)*(htj17);
IkReal x112=(htj18)*(htj18);
IkReal x113=(htj16)*(htj16);
cj17array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x111))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x111)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x111))))));
cj18array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x112))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x112)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x112))))));
cj16array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x113))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x113)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x113))))));
sj17array[numsolutions]=((IkReal(2.00000000000000))*(htj17)*(((IKabs(((IkReal(1.00000000000000))+((htj17)*(htj17)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj17)*(htj17))))):(IkReal)1.0e30)));
sj18array[numsolutions]=((IkReal(2.00000000000000))*(htj18)*(((IKabs(((IkReal(1.00000000000000))+((htj18)*(htj18)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj18)*(htj18))))):(IkReal)1.0e30)));
sj16array[numsolutions]=((IkReal(2.00000000000000))*(htj16)*(((IKabs(((IkReal(1.00000000000000))+((htj16)*(htj16)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj16)*(htj16))))):(IkReal)1.0e30)));
if( j17array[numsolutions] > IKPI )
{
    j17array[numsolutions]-=IK2PI;
}
else if( j17array[numsolutions] < -IKPI )
{
    j17array[numsolutions]+=IK2PI;
}
if( j18array[numsolutions] > IKPI )
{
    j18array[numsolutions]-=IK2PI;
}
else if( j18array[numsolutions] < -IKPI )
{
    j18array[numsolutions]+=IK2PI;
}
if( j16array[numsolutions] > IKPI )
{
    j16array[numsolutions]-=IK2PI;
}
else if( j16array[numsolutions] < -IKPI )
{
    j16array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j17valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj17 = 16;
_nj18 = 1;
_nj16 = 1;
for(int ij17 = 0; ij17 < numsolutions; ++ij17)
    {
if( !j17valid[ij17] )
{
    continue;
}
_ij17[0] = ij17; _ij17[1] = -1;
_ij18[0] = 0; _ij18[1] = -1;
_ij16[0] = 0; _ij16[1] = -1;
for(int iij17 = ij17+1; iij17 < numsolutions; ++iij17)
{
if( !j17valid[iij17] ) { continue; }
if( IKabs(cj17array[ij17]-cj17array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(sj17array[ij17]-sj17array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(cj18array[ij17]-cj18array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(sj18array[ij17]-sj18array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(cj16array[ij17]-cj16array[iij17]) < IKFAST_SOLUTION_THRESH && IKabs(sj16array[ij17]-sj16array[iij17]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j17valid[iij17]=false; _ij17[1] = iij17; _ij18[1] = 0; _ij16[1] = 0;  break; 
}
}
    j17 = j17array[ij17]; cj17 = cj17array[ij17]; sj17 = sj17array[ij17];

    j18 = j18array[ij17]; cj18 = cj18array[ij17]; sj18 = sj18array[ij17];

    j16 = j16array[ij17]; cj16 = cj16array[ij17]; sj16 = sj16array[ij17];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x114=(sj18)*(sj18);
IkReal x115=(cj18)*(cj18);
IkReal x116=((r00)*(r11));
IkReal x117=((r02)*(sj17));
IkReal x118=((cj17)*(x114));
IkReal x119=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x120=((cj17)*(x115));
IkReal x121=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(x119)*(x120)))+(((IkReal(-1.00000000000000))*(x118)*(x119)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x121)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x121)))+(((x116)*(x120)))+(((x116)*(x118)))+(((r10)*(sj18)*(x117)))+(((cj18)*(r11)*(x117)))));
IkReal x122=(sj18)*(sj18);
IkReal x123=(cj18)*(cj18);
IkReal x124=((r00)*(r11));
IkReal x125=((r02)*(sj17));
IkReal x126=((cj17)*(x122));
IkReal x127=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x128=((cj17)*(x123));
IkReal x129=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj18)*(r01)*(x129)))+(((IkReal(-1.00000000000000))*(x126)*(x127)))+(((x124)*(x126)))+(((x124)*(x128)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x129)))+(((cj18)*(r11)*(x125)))+(((r10)*(sj18)*(x125)))+(((IkReal(-1.00000000000000))*(x127)*(x128))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
IkReal x130=((sj17)*(sj18));
IkReal x131=((IkReal(1.00000000000000))*(cj18)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(x130)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x131))));
evalcond[2]=((IkReal(-0.0950000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x131)))+(((IkReal(0.0900000000000000))*(sj17)))+(((npy)*(x130)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x132=((IkReal(4.00000000000000))*(npx));
IkReal x133=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj18)*(x132)))+(((IkReal(-1.00000000000000))*(cj18)*(x133))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x132)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x133))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj18)*(x132)))+(((IkReal(-1.00000000000000))*(cj18)*(x133)))))+IKsqr(((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x132)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x133)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(sj18)*(x132)))+(((IkReal(-1.00000000000000))*(cj18)*(x133)))), ((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x132)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x133)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst24;
gconst24=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst23;
IkReal x134=(sj18)*(sj18);
IkReal x135=(cj18)*(cj18);
IkReal x136=((cj17)*(r02));
IkReal x137=((r01)*(r10)*(sj17));
IkReal x138=((IkReal(1.00000000000000))*(cj17)*(r12));
IkReal x139=((IkReal(1.00000000000000))*(r00)*(r11)*(sj17));
gconst23=IKsign(((((IkReal(-1.00000000000000))*(x135)*(x139)))+(((IkReal(-1.00000000000000))*(x134)*(x139)))+(((x135)*(x137)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x138)))+(((x134)*(x137)))+(((r10)*(sj18)*(x136)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x138)))+(((cj18)*(r11)*(x136)))));
IkReal x140=(sj18)*(sj18);
IkReal x141=(cj18)*(cj18);
IkReal x142=((cj17)*(r02));
IkReal x143=((r01)*(r10)*(sj17));
IkReal x144=((IkReal(1.00000000000000))*(cj17)*(r12));
IkReal x145=x139;
dummyeval[0]=((((x140)*(x143)))+(((IkReal(-1.00000000000000))*(x140)*(x145)))+(((r10)*(sj18)*(x142)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x144)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x144)))+(((x141)*(x143)))+(((cj18)*(r11)*(x142)))+(((IkReal(-1.00000000000000))*(x141)*(x145))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x146=((IkReal(1.00000000000000))*(cj18));
IkReal x147=((IkReal(1.00000000000000))*(sj18));
if( IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(x147)))+(((IkReal(-1.00000000000000))*(r11)*(x146))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst23)*(((((IkReal(-1.00000000000000))*(r01)*(x146)))+(((IkReal(-1.00000000000000))*(r00)*(x147))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst23)*(((((IkReal(-1.00000000000000))*(r10)*(x147)))+(((IkReal(-1.00000000000000))*(r11)*(x146)))))), ((gconst23)*(((((IkReal(-1.00000000000000))*(r01)*(x146)))+(((IkReal(-1.00000000000000))*(r00)*(x147)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x148=IKsin(j13);
IkReal x149=IKcos(j13);
IkReal x150=((IkReal(1.00000000000000))*(sj17));
IkReal x151=((r11)*(sj18));
IkReal x152=((r10)*(sj17));
IkReal x153=((IkReal(1.00000000000000))*(cj17));
IkReal x154=((cj18)*(x148));
IkReal x155=((cj18)*(x149));
IkReal x156=((r02)*(x148));
IkReal x157=((sj18)*(x149));
IkReal x158=((x149)*(x153));
IkReal x159=((r01)*(sj18)*(x148));
evalcond[0]=((((r01)*(x154)))+(((IkReal(-1.00000000000000))*(r10)*(x157)))+(((IkReal(-1.00000000000000))*(r11)*(x155)))+(((r00)*(sj18)*(x148))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x151)*(x158)))+(((cj17)*(r10)*(x155)))+(((IkReal(-1.00000000000000))*(x150)*(x156)))+(((cj17)*(x159)))+(((IkReal(-1.00000000000000))*(r00)*(x153)*(x154)))+(((r12)*(sj17)*(x149))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r00)*(x150)*(x154)))+(((x152)*(x155)))+(((cj17)*(x156)))+(((IkReal(-1.00000000000000))*(x149)*(x150)*(x151)))+(((IkReal(-1.00000000000000))*(r12)*(x158)))+(((sj17)*(x159))));
evalcond[3]=((((r00)*(sj17)*(x155)))+(((x152)*(x154)))+(((IkReal(-1.00000000000000))*(r02)*(x158)))+(((IkReal(-1.00000000000000))*(x148)*(x150)*(x151)))+(((IkReal(-1.00000000000000))*(r12)*(x148)*(x153)))+(((IkReal(-1.00000000000000))*(r01)*(x150)*(x157))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst25;
gconst25=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x160=((cj15)*(r21));
IkReal x161=((cj17)*(sj18));
IkReal x162=((r20)*(sj18));
IkReal x163=((cj18)*(sj15));
IkReal x164=((cj17)*(r20));
IkReal x165=((IkReal(1.00000000000000))*(cj15));
IkReal x166=((r22)*(sj17));
if( IKabs(((gconst25)*(((((sj15)*(x166)))+(((IkReal(-1.00000000000000))*(r21)*(sj15)*(x161)))+(((cj18)*(x160)))+(((cj15)*(x162)))+(((x163)*(x164))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst25)*(((((sj15)*(x162)))+(((r21)*(x163)))+(((IkReal(-1.00000000000000))*(x165)*(x166)))+(((x160)*(x161)))+(((IkReal(-1.00000000000000))*(cj18)*(x164)*(x165))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst25)*(((((sj15)*(x166)))+(((IkReal(-1.00000000000000))*(r21)*(sj15)*(x161)))+(((cj18)*(x160)))+(((cj15)*(x162)))+(((x163)*(x164)))))), ((gconst25)*(((((sj15)*(x162)))+(((r21)*(x163)))+(((IkReal(-1.00000000000000))*(x165)*(x166)))+(((x160)*(x161)))+(((IkReal(-1.00000000000000))*(cj18)*(x164)*(x165)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x167=IKsin(j14);
IkReal x168=IKcos(j14);
IkReal x169=((IkReal(1.00000000000000))*(cj15));
IkReal x170=((IkReal(1.00000000000000))*(sj13));
IkReal x171=((cj17)*(cj18));
IkReal x172=((cj17)*(sj18));
IkReal x173=((cj13)*(r00));
IkReal x174=((sj15)*(x167));
IkReal x175=((IkReal(1.00000000000000))*(cj13)*(r01));
IkReal x176=((sj15)*(x168));
IkReal x177=((x168)*(x169));
evalcond[0]=((((r20)*(sj18)))+(((IkReal(-1.00000000000000))*(x176)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x167)*(x169))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x171)))+(((IkReal(-1.00000000000000))*(x177)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x174)+(((r21)*(x172))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(sj18)*(x170)))+(((IkReal(-1.00000000000000))*(x177)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x170)))+(x174)+(((IkReal(-1.00000000000000))*(sj18)*(x173)))+(((IkReal(-1.00000000000000))*(cj18)*(x175))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(x170)*(x172)))+(((r12)*(sj13)*(sj17)))+(x176)+(((cj13)*(r02)*(sj17)))+(((r10)*(sj13)*(x171)))+(((x171)*(x173)))+(((cj15)*(x167)))+(((IkReal(-1.00000000000000))*(x172)*(x175))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x178=((cj15)*(r21));
IkReal x179=((cj17)*(sj18));
IkReal x180=((r20)*(sj18));
IkReal x181=((cj18)*(sj15));
IkReal x182=((cj17)*(r20));
IkReal x183=((IkReal(1.00000000000000))*(cj15));
IkReal x184=((r22)*(sj17));
if( IKabs(((gconst24)*(((((IkReal(-1.00000000000000))*(r21)*(sj15)*(x179)))+(((cj18)*(x178)))+(((cj15)*(x180)))+(((x181)*(x182)))+(((sj15)*(x184))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst24)*(((((x178)*(x179)))+(((IkReal(-1.00000000000000))*(cj18)*(x182)*(x183)))+(((r21)*(x181)))+(((IkReal(-1.00000000000000))*(x183)*(x184)))+(((sj15)*(x180))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst24)*(((((IkReal(-1.00000000000000))*(r21)*(sj15)*(x179)))+(((cj18)*(x178)))+(((cj15)*(x180)))+(((x181)*(x182)))+(((sj15)*(x184)))))), ((gconst24)*(((((x178)*(x179)))+(((IkReal(-1.00000000000000))*(cj18)*(x182)*(x183)))+(((r21)*(x181)))+(((IkReal(-1.00000000000000))*(x183)*(x184)))+(((sj15)*(x180)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x185=IKsin(j14);
IkReal x186=IKcos(j14);
IkReal x187=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj15)*(x186)))+(((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x185)*(x187))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x186)*(x187)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(r20)))+(((cj17)*(r21)*(sj18)))+(((sj15)*(x185))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst26;
IkReal x188=(sj18)*(sj18);
IkReal x189=(cj18)*(cj18);
IkReal x190=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x191=((IkReal(1.00000000000000))*(x188));
IkReal x192=((IkReal(1.00000000000000))*(x189));
gconst26=IKsign(((((IkReal(-1.00000000000000))*(x192)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x191)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x192)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x191)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x190)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x190)))));
IkReal x193=(sj18)*(sj18);
IkReal x194=(cj18)*(cj18);
IkReal x195=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x196=((IkReal(1.00000000000000))*(x193));
IkReal x197=((IkReal(1.00000000000000))*(x194));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x196)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x197)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x197)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x195)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x195)))+(((IkReal(-1.00000000000000))*(x196)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x198=((cj18)*(r01));
IkReal x199=((cj14)*(cj15));
IkReal x200=((r00)*(sj18));
IkReal x201=((cj18)*(r11));
IkReal x202=((r10)*(sj18));
IkReal x203=((IkReal(1.00000000000000))*(sj14)*(sj15));
if( IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(x201)*(x203)))+(((IkReal(-1.00000000000000))*(x202)*(x203)))+(((x199)*(x202)))+(((x199)*(x201))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst26)*(((((IkReal(-1.00000000000000))*(x200)*(x203)))+(((x198)*(x199)))+(((IkReal(-1.00000000000000))*(x198)*(x203)))+(((x199)*(x200))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst26)*(((((IkReal(-1.00000000000000))*(x201)*(x203)))+(((IkReal(-1.00000000000000))*(x202)*(x203)))+(((x199)*(x202)))+(((x199)*(x201)))))), ((gconst26)*(((((IkReal(-1.00000000000000))*(x200)*(x203)))+(((x198)*(x199)))+(((IkReal(-1.00000000000000))*(x198)*(x203)))+(((x199)*(x200)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x204=IKsin(j13);
IkReal x205=IKcos(j13);
IkReal x206=((IkReal(1.00000000000000))*(sj17));
IkReal x207=((r11)*(sj18));
IkReal x208=((r10)*(sj17));
IkReal x209=((cj17)*(r10));
IkReal x210=((IkReal(1.00000000000000))*(r11));
IkReal x211=((IkReal(1.00000000000000))*(r10));
IkReal x212=((IkReal(1.00000000000000))*(r00));
IkReal x213=((r12)*(sj17));
IkReal x214=((cj18)*(x204));
IkReal x215=((cj18)*(x205));
IkReal x216=((sj18)*(x204));
IkReal x217=((r02)*(x204));
IkReal x218=((sj18)*(x205));
IkReal x219=((IkReal(1.00000000000000))*(cj17)*(x205));
IkReal x220=((IkReal(1.00000000000000))*(cj17)*(x204));
evalcond[0]=((((IkReal(-1.00000000000000))*(x210)*(x215)))+(((IkReal(-1.00000000000000))*(x211)*(x218)))+(((r01)*(x214)))+(((r00)*(x216))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(x210)*(x214)))+(((IkReal(-1.00000000000000))*(x211)*(x216)))+(((IkReal(-1.00000000000000))*(r01)*(x215)))+(((IkReal(-1.00000000000000))*(x212)*(x218)))+(((sj14)*(sj15))));
evalcond[2]=((((cj17)*(r01)*(x216)))+(((IkReal(-1.00000000000000))*(x206)*(x217)))+(((IkReal(-1.00000000000000))*(x207)*(x219)))+(((x205)*(x213)))+(((x209)*(x215)))+(((IkReal(-1.00000000000000))*(cj17)*(x212)*(x214))));
evalcond[3]=((IkReal(1.00000000000000))+(((x208)*(x215)))+(((cj17)*(x217)))+(((r01)*(sj17)*(x216)))+(((IkReal(-1.00000000000000))*(r12)*(x219)))+(((IkReal(-1.00000000000000))*(r00)*(x206)*(x214)))+(((IkReal(-1.00000000000000))*(x205)*(x206)*(x207))));
evalcond[4]=((((cj15)*(sj14)))+(((x204)*(x213)))+(((IkReal(-1.00000000000000))*(x207)*(x220)))+(((cj14)*(sj15)))+(((x209)*(x214)))+(((r02)*(sj17)*(x205)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x218)))+(((cj17)*(r00)*(x215))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x204)*(x206)*(x207)))+(((r00)*(sj17)*(x215)))+(((x208)*(x214)))+(((IkReal(-1.00000000000000))*(r01)*(x206)*(x218)))+(((IkReal(-1.00000000000000))*(r12)*(x220)))+(((IkReal(-1.00000000000000))*(r02)*(x219))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
IkReal x221=((sj17)*(sj18));
IkReal x222=((IkReal(1.00000000000000))*(cj18)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x222)))+(((cj17)*(r22)))+(((r21)*(x221))));
evalcond[2]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(npx)*(x222)))+(((npy)*(x221)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x223=((IkReal(4.00000000000000))*(npx));
IkReal x224=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((sj18)*(x223)))+(((cj18)*(x224))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x224)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x223)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((sj18)*(x223)))+(((cj18)*(x224)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x224)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x223)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((sj18)*(x223)))+(((cj18)*(x224)))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x224)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x223)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst29;
gconst29=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst28;
IkReal x225=(cj18)*(cj18);
IkReal x226=(sj18)*(sj18);
IkReal x227=((IkReal(1.00000000000000))*(r10));
IkReal x228=((cj17)*(r02));
IkReal x229=((r01)*(sj17));
IkReal x230=((cj17)*(r12));
IkReal x231=((r00)*(r11)*(sj17));
gconst28=IKsign(((((IkReal(-1.00000000000000))*(x226)*(x227)*(x229)))+(((IkReal(-1.00000000000000))*(x225)*(x227)*(x229)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x228)))+(((IkReal(-1.00000000000000))*(sj18)*(x227)*(x228)))+(((x226)*(x231)))+(((r00)*(sj18)*(x230)))+(((x225)*(x231)))+(((cj18)*(r01)*(x230)))));
IkReal x232=(cj18)*(cj18);
IkReal x233=(sj18)*(sj18);
IkReal x234=((IkReal(1.00000000000000))*(r10));
IkReal x235=((cj17)*(r02));
IkReal x236=((r01)*(sj17));
IkReal x237=((cj17)*(r12));
IkReal x238=((r00)*(r11)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x232)*(x234)*(x236)))+(((IkReal(-1.00000000000000))*(x233)*(x234)*(x236)))+(((x232)*(x238)))+(((x233)*(x238)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x235)))+(((r00)*(sj18)*(x237)))+(((cj18)*(r01)*(x237)))+(((IkReal(-1.00000000000000))*(sj18)*(x234)*(x235))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x239=((IkReal(1.00000000000000))*(sj18));
IkReal x240=((IkReal(1.00000000000000))*(cj18));
if( IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(r11)*(x240)))+(((IkReal(-1.00000000000000))*(r10)*(x239))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst28)*(((((IkReal(-1.00000000000000))*(r01)*(x240)))+(((IkReal(-1.00000000000000))*(r00)*(x239))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst28)*(((((IkReal(-1.00000000000000))*(r11)*(x240)))+(((IkReal(-1.00000000000000))*(r10)*(x239)))))), ((gconst28)*(((((IkReal(-1.00000000000000))*(r01)*(x240)))+(((IkReal(-1.00000000000000))*(r00)*(x239)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x241=IKsin(j13);
IkReal x242=IKcos(j13);
IkReal x243=((IkReal(1.00000000000000))*(sj17));
IkReal x244=((r11)*(sj18));
IkReal x245=((r10)*(sj17));
IkReal x246=((IkReal(1.00000000000000))*(cj17));
IkReal x247=((cj18)*(x241));
IkReal x248=((cj18)*(x242));
IkReal x249=((r02)*(x241));
IkReal x250=((sj18)*(x242));
IkReal x251=((x242)*(x246));
IkReal x252=((r01)*(sj18)*(x241));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x250)))+(((IkReal(-1.00000000000000))*(r11)*(x248)))+(((r01)*(x247)))+(((r00)*(sj18)*(x241))));
evalcond[1]=((((cj17)*(r10)*(x248)))+(((r12)*(sj17)*(x242)))+(((cj17)*(x252)))+(((IkReal(-1.00000000000000))*(x244)*(x251)))+(((IkReal(-1.00000000000000))*(x243)*(x249)))+(((IkReal(-1.00000000000000))*(r00)*(x246)*(x247))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x242)*(x243)*(x244)))+(((cj17)*(x249)))+(((IkReal(-1.00000000000000))*(r12)*(x251)))+(((IkReal(-1.00000000000000))*(r00)*(x243)*(x247)))+(((x245)*(x248)))+(((sj17)*(x252))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r02)*(x251)))+(((IkReal(-1.00000000000000))*(r01)*(x243)*(x250)))+(((r00)*(sj17)*(x248)))+(((IkReal(-1.00000000000000))*(r12)*(x241)*(x246)))+(((x245)*(x247)))+(((IkReal(-1.00000000000000))*(x241)*(x243)*(x244))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst30;
gconst30=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x253=((cj15)*(cj17));
IkReal x254=((r21)*(sj18));
IkReal x255=((cj18)*(r20));
IkReal x256=((r22)*(sj17));
IkReal x257=((cj18)*(r21));
IkReal x258=((IkReal(1.00000000000000))*(sj15));
IkReal x259=((r20)*(sj18));
if( IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x256)*(x258)))+(((cj15)*(x257)))+(((cj15)*(x259)))+(((IkReal(-1.00000000000000))*(cj17)*(x255)*(x258)))+(((cj17)*(sj15)*(x254))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst30)*(((((IkReal(-1.00000000000000))*(x253)*(x254)))+(((cj15)*(x256)))+(((x253)*(x255)))+(((sj15)*(x257)))+(((sj15)*(x259))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst30)*(((((IkReal(-1.00000000000000))*(x256)*(x258)))+(((cj15)*(x257)))+(((cj15)*(x259)))+(((IkReal(-1.00000000000000))*(cj17)*(x255)*(x258)))+(((cj17)*(sj15)*(x254)))))), ((gconst30)*(((((IkReal(-1.00000000000000))*(x253)*(x254)))+(((cj15)*(x256)))+(((x253)*(x255)))+(((sj15)*(x257)))+(((sj15)*(x259)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x260=IKsin(j14);
IkReal x261=IKcos(j14);
IkReal x262=((IkReal(1.00000000000000))*(cj17));
IkReal x263=((r11)*(sj13));
IkReal x264=((IkReal(1.00000000000000))*(cj18));
IkReal x265=((cj13)*(r01));
IkReal x266=((IkReal(1.00000000000000))*(sj18));
IkReal x267=((cj13)*(r00));
IkReal x268=((r10)*(sj13));
IkReal x269=((cj17)*(cj18));
IkReal x270=((cj15)*(x260));
IkReal x271=((sj15)*(x261));
IkReal x272=((cj15)*(x261));
IkReal x273=((sj15)*(x260));
IkReal x274=((x270)+(x271));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(x274));
evalcond[1]=((((IkReal(-1.00000000000000))*(x272)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x273)+(((cj17)*(r21)*(sj18)))+(((IkReal(-1.00000000000000))*(cj18)*(r20)*(x262))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x263)*(x264)))+(((IkReal(-1.00000000000000))*(x273)))+(x272)+(((IkReal(-1.00000000000000))*(x266)*(x268)))+(((IkReal(-1.00000000000000))*(x266)*(x267)))+(((IkReal(-1.00000000000000))*(x264)*(x265))));
evalcond[3]=((((x267)*(x269)))+(((r12)*(sj13)*(sj17)))+(((cj13)*(r02)*(sj17)))+(x274)+(((IkReal(-1.00000000000000))*(sj18)*(x262)*(x265)))+(((IkReal(-1.00000000000000))*(sj18)*(x262)*(x263)))+(((x268)*(x269))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x275=((cj15)*(r21));
IkReal x276=((cj17)*(sj18));
IkReal x277=((r22)*(sj17));
IkReal x278=((IkReal(1.00000000000000))*(sj15));
IkReal x279=((cj15)*(r20));
IkReal x280=((r21)*(sj15));
IkReal x281=((cj17)*(cj18));
if( IKabs(((gconst29)*(((((IkReal(-1.00000000000000))*(x277)*(x278)))+(((cj18)*(x275)))+(((sj18)*(x279)))+(((x276)*(x280)))+(((IkReal(-1.00000000000000))*(r20)*(x278)*(x281))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst29)*(((((x279)*(x281)))+(((r20)*(sj15)*(sj18)))+(((cj15)*(x277)))+(((cj18)*(x280)))+(((IkReal(-1.00000000000000))*(x275)*(x276))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst29)*(((((IkReal(-1.00000000000000))*(x277)*(x278)))+(((cj18)*(x275)))+(((sj18)*(x279)))+(((x276)*(x280)))+(((IkReal(-1.00000000000000))*(r20)*(x278)*(x281)))))), ((gconst29)*(((((x279)*(x281)))+(((r20)*(sj15)*(sj18)))+(((cj15)*(x277)))+(((cj18)*(x280)))+(((IkReal(-1.00000000000000))*(x275)*(x276)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x282=IKsin(j14);
IkReal x283=IKcos(j14);
evalcond[0]=((((sj15)*(x283)))+(((r20)*(sj18)))+(((cj15)*(x282)))+(((cj18)*(r21))));
evalcond[1]=((((sj15)*(x282)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(r20)))+(((cj17)*(r21)*(sj18)))+(((IkReal(-1.00000000000000))*(cj15)*(x283))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst31;
IkReal x284=(sj18)*(sj18);
IkReal x285=(cj18)*(cj18);
IkReal x286=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x287=((IkReal(1.00000000000000))*(x284));
IkReal x288=((IkReal(1.00000000000000))*(x285));
gconst31=IKsign(((((IkReal(-1.00000000000000))*(r10)*(r11)*(x286)))+(((IkReal(-1.00000000000000))*(x287)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x287)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x288)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x288)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x286)))));
IkReal x289=(sj18)*(sj18);
IkReal x290=(cj18)*(cj18);
IkReal x291=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x292=((IkReal(1.00000000000000))*(x289));
IkReal x293=((IkReal(1.00000000000000))*(x290));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x292)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x291)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x291)))+(((IkReal(-1.00000000000000))*(x293)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x293)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x292)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x294=((sj14)*(sj15));
IkReal x295=((cj18)*(r11));
IkReal x296=((cj18)*(r01));
IkReal x297=((r10)*(sj18));
IkReal x298=((r00)*(sj18));
IkReal x299=((IkReal(1.00000000000000))*(cj14)*(cj15));
if( IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(x297)*(x299)))+(((IkReal(-1.00000000000000))*(x295)*(x299)))+(((x294)*(x295)))+(((x294)*(x297))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst31)*(((((IkReal(-1.00000000000000))*(x296)*(x299)))+(((IkReal(-1.00000000000000))*(x298)*(x299)))+(((x294)*(x298)))+(((x294)*(x296))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst31)*(((((IkReal(-1.00000000000000))*(x297)*(x299)))+(((IkReal(-1.00000000000000))*(x295)*(x299)))+(((x294)*(x295)))+(((x294)*(x297)))))), ((gconst31)*(((((IkReal(-1.00000000000000))*(x296)*(x299)))+(((IkReal(-1.00000000000000))*(x298)*(x299)))+(((x294)*(x298)))+(((x294)*(x296)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x300=IKsin(j13);
IkReal x301=IKcos(j13);
IkReal x302=((IkReal(1.00000000000000))*(sj17));
IkReal x303=((r11)*(sj18));
IkReal x304=((cj18)*(r10));
IkReal x305=((IkReal(1.00000000000000))*(r11));
IkReal x306=((IkReal(1.00000000000000))*(r10));
IkReal x307=((IkReal(1.00000000000000))*(r00));
IkReal x308=((cj18)*(r00));
IkReal x309=((IkReal(1.00000000000000))*(cj17));
IkReal x310=((cj18)*(x300));
IkReal x311=((sj17)*(x301));
IkReal x312=((sj18)*(x300));
IkReal x313=((r02)*(x300));
IkReal x314=((sj18)*(x301));
IkReal x315=((r12)*(x300));
IkReal x316=((cj17)*(x301));
IkReal x317=((cj18)*(x301));
IkReal x318=((x301)*(x309));
evalcond[0]=((((r01)*(x310)))+(((IkReal(-1.00000000000000))*(x306)*(x314)))+(((IkReal(-1.00000000000000))*(x305)*(x317)))+(((r00)*(x312))));
evalcond[1]=((((cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r01)*(x317)))+(((IkReal(-1.00000000000000))*(x306)*(x312)))+(((IkReal(-1.00000000000000))*(x305)*(x310)))+(((IkReal(-1.00000000000000))*(x307)*(x314))));
evalcond[2]=((((x304)*(x316)))+(((IkReal(-1.00000000000000))*(cj17)*(x307)*(x310)))+(((IkReal(-1.00000000000000))*(x303)*(x318)))+(((IkReal(-1.00000000000000))*(x302)*(x313)))+(((cj17)*(r01)*(x312)))+(((r12)*(x311))));
evalcond[3]=((IkReal(-1.00000000000000))+(((x304)*(x311)))+(((r01)*(sj17)*(x312)))+(((cj17)*(x313)))+(((IkReal(-1.00000000000000))*(r12)*(x318)))+(((IkReal(-1.00000000000000))*(x300)*(x302)*(x308)))+(((IkReal(-1.00000000000000))*(x301)*(x302)*(x303))));
evalcond[4]=((((cj15)*(sj14)))+(((cj14)*(sj15)))+(((r02)*(x311)))+(((sj17)*(x315)))+(((x308)*(x316)))+(((IkReal(-1.00000000000000))*(x300)*(x303)*(x309)))+(((IkReal(-1.00000000000000))*(r01)*(x309)*(x314)))+(((cj17)*(x300)*(x304))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x318)))+(((sj17)*(x300)*(x304)))+(((IkReal(-1.00000000000000))*(r01)*(x302)*(x314)))+(((x308)*(x311)))+(((IkReal(-1.00000000000000))*(x300)*(x302)*(x303)))+(((IkReal(-1.00000000000000))*(x309)*(x315))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x319=((IkReal(4.00000000000000))*(npz));
IkReal x320=((IkReal(4.00000000000000))*(sj17));
IkReal x321=((npy)*(sj18));
IkReal x322=((cj18)*(npx));
IkReal x323=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((x320)*(x321)))+(((cj17)*(x319)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(x320)*(x322))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x322)*(x323)))+(((IkReal(-1.00000000000000))*(x321)*(x323)))+(((sj17)*(x319)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x320)*(x321)))+(((cj17)*(x319)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(x320)*(x322)))))+IKsqr(((IkReal(-0.940000000000000))+(((x322)*(x323)))+(((IkReal(-1.00000000000000))*(x321)*(x323)))+(((sj17)*(x319)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((x320)*(x321)))+(((cj17)*(x319)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(x320)*(x322)))), ((IkReal(-0.940000000000000))+(((x322)*(x323)))+(((IkReal(-1.00000000000000))*(x321)*(x323)))+(((sj17)*(x319)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x324=((npy)*(sj18));
IkReal x325=((IkReal(1.00000000000000))*(sj17));
IkReal x326=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x325)))+(((IkReal(-1.00000000000000))*(cj17)*(x326)))+(((cj17)*(x324)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[1]=((IkReal(0.0300000000000000))+(((IkReal(-1.00000000000000))*(x325)*(x326)))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((sj17)*(x324)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst33;
IkReal x327=(sj18)*(sj18);
IkReal x328=(cj18)*(cj18);
IkReal x329=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst33=IKsign(((((x328)*((r11)*(r11))))+(((r00)*(r01)*(x329)))+(((x327)*((r00)*(r00))))+(((x328)*((r01)*(r01))))+(((x327)*((r10)*(r10))))+(((r10)*(r11)*(x329)))));
IkReal x330=(sj18)*(sj18);
IkReal x331=(cj18)*(cj18);
IkReal x332=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((r00)*(r01)*(x332)))+(((x331)*((r11)*(r11))))+(((x331)*((r01)*(r01))))+(((x330)*((r00)*(r00))))+(((r10)*(r11)*(x332)))+(((x330)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst34;
gconst34=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x333=((r21)*(sj18));
IkReal x334=((IkReal(1.00000000000000))*(cj15));
IkReal x335=((r22)*(sj17));
IkReal x336=((sj15)*(sj17));
IkReal x337=((cj18)*(r20));
IkReal x338=((IkReal(1.00000000000000))*(sj15));
IkReal x339=((cj17)*(sj15));
IkReal x340=((cj15)*(cj17));
if( IKabs(((gconst34)*(((((r22)*(x340)))+(((IkReal(-1.00000000000000))*(sj17)*(x334)*(x337)))+(((cj15)*(sj17)*(x333)))+(((x333)*(x339)))+(((IkReal(-1.00000000000000))*(cj17)*(x337)*(x338)))+(((IkReal(-1.00000000000000))*(x335)*(x338))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst34)*(((((r22)*(x339)))+(((x337)*(x340)))+(((IkReal(-1.00000000000000))*(x336)*(x337)))+(((x333)*(x336)))+(((cj15)*(x335)))+(((IkReal(-1.00000000000000))*(cj17)*(x333)*(x334))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst34)*(((((r22)*(x340)))+(((IkReal(-1.00000000000000))*(sj17)*(x334)*(x337)))+(((cj15)*(sj17)*(x333)))+(((x333)*(x339)))+(((IkReal(-1.00000000000000))*(cj17)*(x337)*(x338)))+(((IkReal(-1.00000000000000))*(x335)*(x338)))))), ((gconst34)*(((((r22)*(x339)))+(((x337)*(x340)))+(((IkReal(-1.00000000000000))*(x336)*(x337)))+(((x333)*(x336)))+(((cj15)*(x335)))+(((IkReal(-1.00000000000000))*(cj17)*(x333)*(x334)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x341=IKsin(j14);
IkReal x342=IKcos(j14);
IkReal x343=((IkReal(1.00000000000000))*(sj17));
IkReal x344=((cj18)*(r20));
IkReal x345=((r21)*(sj18));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x343)))+(((IkReal(-1.00000000000000))*(cj17)*(x344)))+(((sj15)*(x341)))+(((cj17)*(x345)))+(((IkReal(-1.00000000000000))*(cj15)*(x342))));
evalcond[1]=((((sj17)*(x345)))+(((sj15)*(x342)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x343)*(x344)))+(((cj15)*(x341))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst35;
IkReal x346=(sj18)*(sj18);
IkReal x347=(cj18)*(cj18);
IkReal x348=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst35=IKsign(((((x346)*((r10)*(r10))))+(((r00)*(r01)*(x348)))+(((r10)*(r11)*(x348)))+(((x347)*((r01)*(r01))))+(((x347)*((r11)*(r11))))+(((x346)*((r00)*(r00))))));
IkReal x349=(sj18)*(sj18);
IkReal x350=(cj18)*(cj18);
IkReal x351=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((r00)*(r01)*(x351)))+(((x350)*((r11)*(r11))))+(((x349)*((r00)*(r00))))+(((x349)*((r10)*(r10))))+(((x350)*((r01)*(r01))))+(((r10)*(r11)*(x351))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst35)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst35)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst35)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst35)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x352=IKsin(j13);
IkReal x353=IKcos(j13);
IkReal x354=((IkReal(1.00000000000000))*(sj17));
IkReal x355=((r11)*(sj18));
IkReal x356=((r10)*(sj17));
IkReal x357=((cj17)*(r10));
IkReal x358=((IkReal(1.00000000000000))*(r11));
IkReal x359=((IkReal(1.00000000000000))*(r10));
IkReal x360=((IkReal(1.00000000000000))*(r00));
IkReal x361=((r12)*(sj17));
IkReal x362=((cj18)*(x352));
IkReal x363=((cj18)*(x353));
IkReal x364=((sj18)*(x352));
IkReal x365=((r02)*(x352));
IkReal x366=((sj18)*(x353));
IkReal x367=((IkReal(1.00000000000000))*(cj17)*(x353));
IkReal x368=((IkReal(1.00000000000000))*(cj17)*(x352));
evalcond[0]=((IkReal(1.00000000000000))+(((r01)*(x362)))+(((r00)*(x364)))+(((IkReal(-1.00000000000000))*(x358)*(x363)))+(((IkReal(-1.00000000000000))*(x359)*(x366))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x360)*(x366)))+(((IkReal(-1.00000000000000))*(x358)*(x362)))+(((IkReal(-1.00000000000000))*(r01)*(x363)))+(((IkReal(-1.00000000000000))*(x359)*(x364))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x354)*(x365)))+(((IkReal(-1.00000000000000))*(x355)*(x367)))+(((x353)*(x361)))+(((IkReal(-1.00000000000000))*(cj17)*(x360)*(x362)))+(((x357)*(x363)))+(((cj17)*(r01)*(x364))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x354)*(x362)))+(((cj17)*(x365)))+(((r01)*(sj17)*(x364)))+(((x356)*(x363)))+(((IkReal(-1.00000000000000))*(r12)*(x367)))+(((IkReal(-1.00000000000000))*(x353)*(x354)*(x355))));
evalcond[4]=((((cj15)*(sj14)))+(((cj14)*(sj15)))+(((IkReal(-1.00000000000000))*(x355)*(x368)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x366)))+(((cj17)*(r00)*(x363)))+(((x352)*(x361)))+(((r02)*(sj17)*(x353)))+(((x357)*(x362))));
evalcond[5]=((((r00)*(sj17)*(x363)))+(((IkReal(-1.00000000000000))*(r01)*(x354)*(x366)))+(((cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(r02)*(x367)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(x352)*(x354)*(x355)))+(((x356)*(x362)))+(((IkReal(-1.00000000000000))*(r12)*(x368))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst33)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst33)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst33)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst33)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x369=IKsin(j13);
IkReal x370=IKcos(j13);
IkReal x371=((cj18)*(r01));
IkReal x372=((r11)*(sj18));
IkReal x373=((IkReal(1.00000000000000))*(x370));
IkReal x374=((sj18)*(x369));
IkReal x375=((r02)*(x369));
IkReal x376=((IkReal(1.00000000000000))*(cj18)*(x369));
IkReal x377=((cj18)*(r10)*(x370));
evalcond[0]=((IkReal(1.00000000000000))+(((x369)*(x371)))+(((r00)*(x374)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x373)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x373))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(sj18)*(x373)))+(((IkReal(-1.00000000000000))*(r11)*(x376)))+(((IkReal(-1.00000000000000))*(x371)*(x373)))+(((IkReal(-1.00000000000000))*(r10)*(x374))));
evalcond[2]=((((r12)*(sj17)*(x370)))+(((cj17)*(x377)))+(((IkReal(-1.00000000000000))*(sj17)*(x375)))+(((IkReal(-1.00000000000000))*(cj17)*(x372)*(x373)))+(((cj17)*(r01)*(x374)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x376))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj17)*(x372)*(x373)))+(((sj17)*(x377)))+(((cj17)*(x375)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x373)))+(((r01)*(sj17)*(x374)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x376))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst36;
gconst36=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x378=((r21)*(sj18));
IkReal x379=((IkReal(1.00000000000000))*(cj15));
IkReal x380=((r22)*(sj17));
IkReal x381=((sj15)*(sj17));
IkReal x382=((cj18)*(r20));
IkReal x383=((IkReal(1.00000000000000))*(sj15));
IkReal x384=((cj17)*(sj15));
IkReal x385=((cj15)*(cj17));
if( IKabs(((gconst36)*(((((x378)*(x384)))+(((r22)*(x385)))+(((IkReal(-1.00000000000000))*(x380)*(x383)))+(((cj15)*(sj17)*(x378)))+(((IkReal(-1.00000000000000))*(cj17)*(x382)*(x383)))+(((IkReal(-1.00000000000000))*(sj17)*(x379)*(x382))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst36)*(((((x378)*(x381)))+(((r22)*(x384)))+(((x382)*(x385)))+(((cj15)*(x380)))+(((IkReal(-1.00000000000000))*(x381)*(x382)))+(((IkReal(-1.00000000000000))*(cj17)*(x378)*(x379))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst36)*(((((x378)*(x384)))+(((r22)*(x385)))+(((IkReal(-1.00000000000000))*(x380)*(x383)))+(((cj15)*(sj17)*(x378)))+(((IkReal(-1.00000000000000))*(cj17)*(x382)*(x383)))+(((IkReal(-1.00000000000000))*(sj17)*(x379)*(x382)))))), ((gconst36)*(((((x378)*(x381)))+(((r22)*(x384)))+(((x382)*(x385)))+(((cj15)*(x380)))+(((IkReal(-1.00000000000000))*(x381)*(x382)))+(((IkReal(-1.00000000000000))*(cj17)*(x378)*(x379)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x386=IKsin(j14);
IkReal x387=IKcos(j14);
IkReal x388=((cj17)*(sj18));
IkReal x389=((IkReal(1.00000000000000))*(sj17));
IkReal x390=((cj18)*(r20));
IkReal x391=((sj13)*(sj17));
IkReal x392=((cj18)*(r10));
IkReal x393=((cj13)*(r02));
IkReal x394=((cj13)*(r01));
IkReal x395=((sj17)*(sj18));
IkReal x396=((IkReal(1.00000000000000))*(cj17));
IkReal x397=((cj15)*(x386));
IkReal x398=((sj15)*(x387));
IkReal x399=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x400=((sj15)*(x386));
IkReal x401=((cj13)*(cj18)*(r00));
IkReal x402=((cj15)*(x387));
IkReal x403=((x397)+(x398));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x389)))+(((r21)*(x388)))+(x400)+(((IkReal(-1.00000000000000))*(x390)*(x396)))+(((IkReal(-1.00000000000000))*(x402))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x389)*(x390)))+(((cj17)*(r22)))+(x403)+(((r21)*(x395))));
evalcond[2]=((((sj17)*(x393)))+(((cj17)*(sj13)*(x392)))+(((IkReal(-1.00000000000000))*(x388)*(x394)))+(((IkReal(-1.00000000000000))*(x388)*(x399)))+(((cj17)*(x401)))+(x403)+(((r12)*(x391))));
evalcond[3]=((((sj17)*(x401)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x396)))+(((x391)*(x392)))+(((IkReal(-1.00000000000000))*(sj18)*(x389)*(x394)))+(x402)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x389)))+(((IkReal(-1.00000000000000))*(x393)*(x396)))+(((IkReal(-1.00000000000000))*(x400))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x404=((IkReal(4.00000000000000))*(npz));
IkReal x405=((IkReal(4.00000000000000))*(sj17));
IkReal x406=((npy)*(sj18));
IkReal x407=((cj18)*(npx));
IkReal x408=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((x405)*(x407)))+(((IkReal(-1.00000000000000))*(cj17)*(x404)))+(((IkReal(-1.00000000000000))*(x405)*(x406)))+(((IkReal(-0.360000000000000))*(sj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((x407)*(x408)))+(((sj17)*(x404)))+(((IkReal(-1.00000000000000))*(x406)*(x408)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x405)*(x407)))+(((IkReal(-1.00000000000000))*(cj17)*(x404)))+(((IkReal(-1.00000000000000))*(x405)*(x406)))+(((IkReal(-0.360000000000000))*(sj17)))))+IKsqr(((IkReal(-0.940000000000000))+(((x407)*(x408)))+(((sj17)*(x404)))+(((IkReal(-1.00000000000000))*(x406)*(x408)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((x405)*(x407)))+(((IkReal(-1.00000000000000))*(cj17)*(x404)))+(((IkReal(-1.00000000000000))*(x405)*(x406)))+(((IkReal(-0.360000000000000))*(sj17)))), ((IkReal(-0.940000000000000))+(((x407)*(x408)))+(((sj17)*(x404)))+(((IkReal(-1.00000000000000))*(x406)*(x408)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x409=((npy)*(sj18));
IkReal x410=((IkReal(1.00000000000000))*(sj17));
IkReal x411=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x410)))+(((cj17)*(x409)))+(((IkReal(0.250000000000000))*(IKcos(j15))))+(((IkReal(-1.00000000000000))*(cj17)*(x411))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((sj17)*(x409)))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(x410)*(x411))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst38;
IkReal x412=(sj18)*(sj18);
IkReal x413=(cj18)*(cj18);
IkReal x414=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x415=((IkReal(1.00000000000000))*(x412));
IkReal x416=((IkReal(1.00000000000000))*(x413));
gconst38=IKsign(((((IkReal(-1.00000000000000))*(x416)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x415)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x415)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x414)))+(((IkReal(-1.00000000000000))*(x416)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x414)))));
IkReal x417=(sj18)*(sj18);
IkReal x418=(cj18)*(cj18);
IkReal x419=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x420=((IkReal(1.00000000000000))*(x417));
IkReal x421=((IkReal(1.00000000000000))*(x418));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x421)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x420)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x420)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x419)))+(((IkReal(-1.00000000000000))*(x421)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x419))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst39;
gconst39=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x422=((r21)*(sj18));
IkReal x423=((cj15)*(cj17));
IkReal x424=((sj15)*(sj17));
IkReal x425=((cj15)*(sj17));
IkReal x426=((cj17)*(sj15));
IkReal x427=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst39)*(((((cj18)*(r20)*(x426)))+(((IkReal(-1.00000000000000))*(x422)*(x426)))+(((IkReal(-1.00000000000000))*(x425)*(x427)))+(((r22)*(x424)))+(((r22)*(x423)))+(((x422)*(x425))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst39)*(((((IkReal(-1.00000000000000))*(r22)*(x425)))+(((r22)*(x426)))+(((IkReal(-1.00000000000000))*(x424)*(x427)))+(((IkReal(-1.00000000000000))*(x423)*(x427)))+(((x422)*(x423)))+(((x422)*(x424))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst39)*(((((cj18)*(r20)*(x426)))+(((IkReal(-1.00000000000000))*(x422)*(x426)))+(((IkReal(-1.00000000000000))*(x425)*(x427)))+(((r22)*(x424)))+(((r22)*(x423)))+(((x422)*(x425)))))), ((gconst39)*(((((IkReal(-1.00000000000000))*(r22)*(x425)))+(((r22)*(x426)))+(((IkReal(-1.00000000000000))*(x424)*(x427)))+(((IkReal(-1.00000000000000))*(x423)*(x427)))+(((x422)*(x423)))+(((x422)*(x424)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x428=IKsin(j14);
IkReal x429=IKcos(j14);
IkReal x430=((IkReal(1.00000000000000))*(sj17));
IkReal x431=((cj18)*(r20));
IkReal x432=((r21)*(sj18));
IkReal x433=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((sj15)*(x428)))+(((IkReal(-1.00000000000000))*(x429)*(x433)))+(((cj17)*(x432)))+(((IkReal(-1.00000000000000))*(cj17)*(x431)))+(((IkReal(-1.00000000000000))*(r22)*(x430))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x430)*(x431)))+(((IkReal(-1.00000000000000))*(sj15)*(x429)))+(((cj17)*(r22)))+(((sj17)*(x432)))+(((IkReal(-1.00000000000000))*(x428)*(x433))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst40;
IkReal x434=(sj18)*(sj18);
IkReal x435=(cj18)*(cj18);
IkReal x436=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x437=((IkReal(1.00000000000000))*(x434));
IkReal x438=((IkReal(1.00000000000000))*(x435));
gconst40=IKsign(((((IkReal(-1.00000000000000))*(x438)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x437)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x437)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x436)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x436)))+(((IkReal(-1.00000000000000))*(x438)*((r11)*(r11))))));
IkReal x439=(sj18)*(sj18);
IkReal x440=(cj18)*(cj18);
IkReal x441=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x442=((IkReal(1.00000000000000))*(x439));
IkReal x443=((IkReal(1.00000000000000))*(x440));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x442)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x442)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x441)))+(((IkReal(-1.00000000000000))*(x443)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x443)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x441))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst40)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst40)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst40)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst40)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x444=IKsin(j13);
IkReal x445=IKcos(j13);
IkReal x446=((IkReal(1.00000000000000))*(sj17));
IkReal x447=((r11)*(sj18));
IkReal x448=((r10)*(sj17));
IkReal x449=((cj17)*(r10));
IkReal x450=((IkReal(1.00000000000000))*(r11));
IkReal x451=((IkReal(1.00000000000000))*(r10));
IkReal x452=((IkReal(1.00000000000000))*(r00));
IkReal x453=((r12)*(sj17));
IkReal x454=((cj18)*(x444));
IkReal x455=((cj18)*(x445));
IkReal x456=((sj18)*(x444));
IkReal x457=((r02)*(x444));
IkReal x458=((sj18)*(x445));
IkReal x459=((IkReal(1.00000000000000))*(cj17)*(x445));
IkReal x460=((IkReal(1.00000000000000))*(cj17)*(x444));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x450)*(x455)))+(((IkReal(-1.00000000000000))*(x451)*(x458)))+(((r00)*(x456)))+(((r01)*(x454))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x452)*(x458)))+(((IkReal(-1.00000000000000))*(x450)*(x454)))+(((IkReal(-1.00000000000000))*(r01)*(x455)))+(((IkReal(-1.00000000000000))*(x451)*(x456))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x446)*(x457)))+(((IkReal(-1.00000000000000))*(cj17)*(x452)*(x454)))+(((IkReal(-1.00000000000000))*(x447)*(x459)))+(((cj17)*(r01)*(x456)))+(((x449)*(x455)))+(((x445)*(x453))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x446)*(x454)))+(((IkReal(-1.00000000000000))*(x445)*(x446)*(x447)))+(((IkReal(-1.00000000000000))*(r12)*(x459)))+(((x448)*(x455)))+(((r01)*(sj17)*(x456)))+(((cj17)*(x457))));
evalcond[4]=((((cj15)*(sj14)))+(((cj14)*(sj15)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x458)))+(((IkReal(-1.00000000000000))*(x447)*(x460)))+(((x449)*(x454)))+(((cj17)*(r00)*(x455)))+(((x444)*(x453)))+(((r02)*(sj17)*(x445))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x444)*(x446)*(x447)))+(((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((r00)*(sj17)*(x455)))+(((IkReal(-1.00000000000000))*(r12)*(x460)))+(((x448)*(x454)))+(((IkReal(-1.00000000000000))*(r02)*(x459)))+(((sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r01)*(x446)*(x458))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst38)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst38)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst38)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst38)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x461=IKsin(j13);
IkReal x462=IKcos(j13);
IkReal x463=((cj18)*(r01));
IkReal x464=((r11)*(sj18));
IkReal x465=((IkReal(1.00000000000000))*(x462));
IkReal x466=((sj18)*(x461));
IkReal x467=((r02)*(x461));
IkReal x468=((IkReal(1.00000000000000))*(cj18)*(x461));
IkReal x469=((cj18)*(r10)*(x462));
evalcond[0]=((IkReal(-1.00000000000000))+(((x461)*(x463)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x465)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x465)))+(((r00)*(x466))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x463)*(x465)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x465)))+(((IkReal(-1.00000000000000))*(r10)*(x466)))+(((IkReal(-1.00000000000000))*(r11)*(x468))));
evalcond[2]=((((r12)*(sj17)*(x462)))+(((cj17)*(x469)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x468)))+(((IkReal(-1.00000000000000))*(cj17)*(x464)*(x465)))+(((cj17)*(r01)*(x466)))+(((IkReal(-1.00000000000000))*(sj17)*(x467))));
evalcond[3]=((((cj17)*(x467)))+(((sj17)*(x469)))+(((IkReal(-1.00000000000000))*(sj17)*(x464)*(x465)))+(((r01)*(sj17)*(x466)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x468)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x465))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst41;
gconst41=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x470=((r22)*(sj15));
IkReal x471=((r21)*(sj18));
IkReal x472=((cj15)*(cj17));
IkReal x473=((sj15)*(sj17));
IkReal x474=((cj15)*(sj17));
IkReal x475=((cj17)*(sj15));
IkReal x476=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst41)*(((((x471)*(x474)))+(((sj17)*(x470)))+(((IkReal(-1.00000000000000))*(x471)*(x475)))+(((r22)*(x472)))+(((IkReal(-1.00000000000000))*(x474)*(x476)))+(((cj18)*(r20)*(x475))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst41)*(((((x471)*(x472)))+(((x471)*(x473)))+(((cj17)*(x470)))+(((IkReal(-1.00000000000000))*(r22)*(x474)))+(((IkReal(-1.00000000000000))*(x472)*(x476)))+(((IkReal(-1.00000000000000))*(x473)*(x476))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst41)*(((((x471)*(x474)))+(((sj17)*(x470)))+(((IkReal(-1.00000000000000))*(x471)*(x475)))+(((r22)*(x472)))+(((IkReal(-1.00000000000000))*(x474)*(x476)))+(((cj18)*(r20)*(x475)))))), ((gconst41)*(((((x471)*(x472)))+(((x471)*(x473)))+(((cj17)*(x470)))+(((IkReal(-1.00000000000000))*(r22)*(x474)))+(((IkReal(-1.00000000000000))*(x472)*(x476)))+(((IkReal(-1.00000000000000))*(x473)*(x476)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x477=IKsin(j14);
IkReal x478=IKcos(j14);
IkReal x479=((cj17)*(sj18));
IkReal x480=((IkReal(1.00000000000000))*(sj17));
IkReal x481=((cj18)*(r20));
IkReal x482=((sj13)*(sj17));
IkReal x483=((cj18)*(r10));
IkReal x484=((cj13)*(r02));
IkReal x485=((cj13)*(r01));
IkReal x486=((sj17)*(sj18));
IkReal x487=((IkReal(1.00000000000000))*(cj17));
IkReal x488=((sj15)*(x477));
IkReal x489=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x490=((sj15)*(x478));
IkReal x491=((cj15)*(x477));
IkReal x492=((cj13)*(cj18)*(r00));
IkReal x493=((IkReal(1.00000000000000))*(cj15)*(x478));
evalcond[0]=((((r21)*(x479)))+(((IkReal(-1.00000000000000))*(x493)))+(((IkReal(-1.00000000000000))*(x481)*(x487)))+(x488)+(((IkReal(-1.00000000000000))*(r22)*(x480))));
evalcond[1]=((((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x490)))+(((IkReal(-1.00000000000000))*(x491)))+(((r21)*(x486)))+(((IkReal(-1.00000000000000))*(x480)*(x481))));
evalcond[2]=((((cj17)*(sj13)*(x483)))+(((r12)*(x482)))+(x490)+(x491)+(((IkReal(-1.00000000000000))*(x479)*(x489)))+(((cj17)*(x492)))+(((sj17)*(x484)))+(((IkReal(-1.00000000000000))*(x479)*(x485))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x484)*(x487)))+(((IkReal(-1.00000000000000))*(sj18)*(x480)*(x485)))+(((IkReal(-1.00000000000000))*(x493)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x487)))+(x488)+(((x482)*(x483)))+(((sj17)*(x492)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x480))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x494=((IkReal(4.00000000000000))*(npz));
IkReal x495=((IkReal(4.00000000000000))*(sj17));
IkReal x496=((npy)*(sj18));
IkReal x497=((cj18)*(npx));
IkReal x498=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((x495)*(x496)))+(((IkReal(-1.00000000000000))*(x495)*(x497)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((cj17)*(x494)))+(((IkReal(-0.380000000000000))*(sj16))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x496)*(x498)))+(((x497)*(x498)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x494))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((x495)*(x496)))+(((IkReal(-1.00000000000000))*(x495)*(x497)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((cj17)*(x494)))+(((IkReal(-0.380000000000000))*(sj16)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x496)*(x498)))+(((x497)*(x498)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x494)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((x495)*(x496)))+(((IkReal(-1.00000000000000))*(x495)*(x497)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((cj17)*(x494)))+(((IkReal(-0.380000000000000))*(sj16)))))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x496)*(x498)))+(((x497)*(x498)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x494)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x499=IKsin(j15);
IkReal x500=((npy)*(sj18));
IkReal x501=((IkReal(1.00000000000000))*(sj17));
IkReal x502=((cj18)*(npx));
IkReal x503=((IkReal(0.250000000000000))*(x499));
evalcond[0]=((((sj16)*(x503)))+(((cj18)*(npy)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x500)))+(((IkReal(-1.00000000000000))*(cj17)*(x502)))+(((IkReal(-1.00000000000000))*(npz)*(x501)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj16)*(x503)))+(((IkReal(-1.00000000000000))*(x501)*(x502)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x500))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x504=(sj18)*(sj18);
IkReal x505=(cj18)*(cj18);
IkReal x506=((r00)*(r11));
IkReal x507=((r02)*(sj17));
IkReal x508=((cj17)*(x504));
IkReal x509=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x510=((cj17)*(x505));
IkReal x511=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x508)*(x509)))+(((x506)*(x508)))+(((cj18)*(r11)*(x507)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x511)))+(((r10)*(sj18)*(x507)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x511)))+(((x506)*(x510)))+(((IkReal(-1.00000000000000))*(x509)*(x510)))));
IkReal x512=(sj18)*(sj18);
IkReal x513=(cj18)*(cj18);
IkReal x514=((r00)*(r11));
IkReal x515=((r02)*(sj17));
IkReal x516=((cj17)*(x512));
IkReal x517=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x518=((cj17)*(x513));
IkReal x519=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((r10)*(sj18)*(x515)))+(((x514)*(x516)))+(((x514)*(x518)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x519)))+(((IkReal(-1.00000000000000))*(x517)*(x518)))+(((IkReal(-1.00000000000000))*(x516)*(x517)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x519)))+(((cj18)*(r11)*(x515))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x520=((npy)*(sj18));
IkReal x521=((IkReal(1.00000000000000))*(sj17));
IkReal x522=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj17)*(x520)))+(((IkReal(-1.00000000000000))*(npz)*(x521)))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(x522))));
evalcond[4]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(x521)*(x522)))+(((IkReal(0.0900000000000000))*(sj17)))+(((sj17)*(x520)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
IkReal x523=(sj18)*(sj18);
IkReal x524=(cj18)*(cj18);
IkReal x525=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst7=IKsign(((((x524)*((r11)*(r11))))+(((x524)*((r01)*(r01))))+(((x523)*((r00)*(r00))))+(((r10)*(r11)*(x525)))+(((x523)*((r10)*(r10))))+(((r00)*(r01)*(x525)))));
IkReal x526=(sj18)*(sj18);
IkReal x527=(cj18)*(cj18);
IkReal x528=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x526)*((r10)*(r10))))+(((x527)*((r01)*(r01))))+(((r10)*(r11)*(x528)))+(((x526)*((r00)*(r00))))+(((x527)*((r11)*(r11))))+(((r00)*(r01)*(x528))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x529=((r21)*(sj18));
IkReal x530=((IkReal(1.00000000000000))*(cj15));
IkReal x531=((r22)*(sj17));
IkReal x532=((sj15)*(sj17));
IkReal x533=((cj18)*(r20));
IkReal x534=((IkReal(1.00000000000000))*(sj15));
IkReal x535=((cj17)*(sj15));
IkReal x536=((cj15)*(cj17));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(sj17)*(x530)*(x533)))+(((IkReal(-1.00000000000000))*(cj17)*(x533)*(x534)))+(((IkReal(-1.00000000000000))*(x531)*(x534)))+(((r22)*(x536)))+(((cj15)*(sj17)*(x529)))+(((x529)*(x535))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x532)*(x533)))+(((r22)*(x535)))+(((cj15)*(x531)))+(((IkReal(-1.00000000000000))*(cj17)*(x529)*(x530)))+(((x529)*(x532)))+(((x533)*(x536))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(sj17)*(x530)*(x533)))+(((IkReal(-1.00000000000000))*(cj17)*(x533)*(x534)))+(((IkReal(-1.00000000000000))*(x531)*(x534)))+(((r22)*(x536)))+(((cj15)*(sj17)*(x529)))+(((x529)*(x535)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(x532)*(x533)))+(((r22)*(x535)))+(((cj15)*(x531)))+(((IkReal(-1.00000000000000))*(cj17)*(x529)*(x530)))+(((x529)*(x532)))+(((x533)*(x536)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x537=IKsin(j14);
IkReal x538=IKcos(j14);
IkReal x539=((IkReal(1.00000000000000))*(sj17));
IkReal x540=((cj18)*(r20));
IkReal x541=((r21)*(sj18));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x539)))+(((cj17)*(x541)))+(((IkReal(-1.00000000000000))*(cj17)*(x540)))+(((sj15)*(x537)))+(((IkReal(-1.00000000000000))*(cj15)*(x538))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x539)*(x540)))+(((sj15)*(x538)))+(((cj17)*(r22)))+(((cj15)*(x537)))+(((sj17)*(x541))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x542=(sj18)*(sj18);
IkReal x543=(cj18)*(cj18);
IkReal x544=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst9=IKsign(((((x542)*((r10)*(r10))))+(((x543)*((r01)*(r01))))+(((r10)*(r11)*(x544)))+(((r00)*(r01)*(x544)))+(((x543)*((r11)*(r11))))+(((x542)*((r00)*(r00))))));
IkReal x545=(sj18)*(sj18);
IkReal x546=(cj18)*(cj18);
IkReal x547=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x545)*((r10)*(r10))))+(((r10)*(r11)*(x547)))+(((x545)*((r00)*(r00))))+(((r00)*(r01)*(x547)))+(((x546)*((r11)*(r11))))+(((x546)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x548=IKsin(j13);
IkReal x549=IKcos(j13);
IkReal x550=((IkReal(1.00000000000000))*(sj17));
IkReal x551=((r11)*(sj18));
IkReal x552=((r10)*(sj17));
IkReal x553=((cj17)*(r10));
IkReal x554=((IkReal(1.00000000000000))*(r11));
IkReal x555=((IkReal(1.00000000000000))*(r10));
IkReal x556=((IkReal(1.00000000000000))*(r00));
IkReal x557=((r12)*(sj17));
IkReal x558=((cj18)*(x548));
IkReal x559=((cj18)*(x549));
IkReal x560=((sj18)*(x548));
IkReal x561=((r02)*(x548));
IkReal x562=((sj18)*(x549));
IkReal x563=((IkReal(1.00000000000000))*(cj17)*(x549));
IkReal x564=((IkReal(1.00000000000000))*(cj17)*(x548));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x554)*(x559)))+(((r00)*(x560)))+(((IkReal(-1.00000000000000))*(x555)*(x562)))+(((r01)*(x558))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x554)*(x558)))+(((IkReal(-1.00000000000000))*(x555)*(x560)))+(((IkReal(-1.00000000000000))*(x556)*(x562)))+(((IkReal(-1.00000000000000))*(r01)*(x559))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x556)*(x558)))+(((x549)*(x557)))+(((IkReal(-1.00000000000000))*(x550)*(x561)))+(((IkReal(-1.00000000000000))*(x551)*(x563)))+(((cj17)*(r01)*(x560)))+(((x553)*(x559))));
evalcond[3]=((((r01)*(sj17)*(x560)))+(((IkReal(-1.00000000000000))*(x549)*(x550)*(x551)))+(((cj17)*(x561)))+(((IkReal(-1.00000000000000))*(r12)*(x563)))+(((IkReal(-1.00000000000000))*(r00)*(x550)*(x558)))+(((x552)*(x559))));
evalcond[4]=((((x548)*(x557)))+(((cj15)*(sj14)))+(((r02)*(sj17)*(x549)))+(((cj14)*(sj15)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x562)))+(((cj17)*(r00)*(x559)))+(((IkReal(-1.00000000000000))*(x551)*(x564)))+(((x553)*(x558))));
evalcond[5]=((((cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((r00)*(sj17)*(x559)))+(((IkReal(-1.00000000000000))*(r01)*(x550)*(x562)))+(((IkReal(-1.00000000000000))*(x548)*(x550)*(x551)))+(((IkReal(-1.00000000000000))*(r12)*(x564)))+(((x552)*(x558)))+(((IkReal(-1.00000000000000))*(r02)*(x563))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x565=IKsin(j13);
IkReal x566=IKcos(j13);
IkReal x567=((cj18)*(r01));
IkReal x568=((r11)*(sj18));
IkReal x569=((IkReal(1.00000000000000))*(x566));
IkReal x570=((sj18)*(x565));
IkReal x571=((r02)*(x565));
IkReal x572=((IkReal(1.00000000000000))*(cj18)*(x565));
IkReal x573=((cj18)*(r10)*(x566));
evalcond[0]=((IkReal(1.00000000000000))+(((x565)*(x567)))+(((r00)*(x570)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x569)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x569))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x572)))+(((IkReal(-1.00000000000000))*(r10)*(x570)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x569)))+(((IkReal(-1.00000000000000))*(x567)*(x569))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x568)*(x569)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x572)))+(((r12)*(sj17)*(x566)))+(((cj17)*(r01)*(x570)))+(((IkReal(-1.00000000000000))*(sj17)*(x571)))+(((cj17)*(x573))));
evalcond[3]=((((r01)*(sj17)*(x570)))+(((sj17)*(x573)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x569)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x572)))+(((IkReal(-1.00000000000000))*(sj17)*(x568)*(x569)))+(((cj17)*(x571))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x574=((r21)*(sj18));
IkReal x575=((IkReal(1.00000000000000))*(cj15));
IkReal x576=((r22)*(sj17));
IkReal x577=((sj15)*(sj17));
IkReal x578=((cj18)*(r20));
IkReal x579=((IkReal(1.00000000000000))*(sj15));
IkReal x580=((cj17)*(sj15));
IkReal x581=((cj15)*(cj17));
if( IKabs(((gconst10)*(((((cj15)*(sj17)*(x574)))+(((IkReal(-1.00000000000000))*(x576)*(x579)))+(((x574)*(x580)))+(((IkReal(-1.00000000000000))*(cj17)*(x578)*(x579)))+(((IkReal(-1.00000000000000))*(sj17)*(x575)*(x578)))+(((r22)*(x581))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((x578)*(x581)))+(((x574)*(x577)))+(((IkReal(-1.00000000000000))*(x577)*(x578)))+(((IkReal(-1.00000000000000))*(cj17)*(x574)*(x575)))+(((r22)*(x580)))+(((cj15)*(x576))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst10)*(((((cj15)*(sj17)*(x574)))+(((IkReal(-1.00000000000000))*(x576)*(x579)))+(((x574)*(x580)))+(((IkReal(-1.00000000000000))*(cj17)*(x578)*(x579)))+(((IkReal(-1.00000000000000))*(sj17)*(x575)*(x578)))+(((r22)*(x581)))))), ((gconst10)*(((((x578)*(x581)))+(((x574)*(x577)))+(((IkReal(-1.00000000000000))*(x577)*(x578)))+(((IkReal(-1.00000000000000))*(cj17)*(x574)*(x575)))+(((r22)*(x580)))+(((cj15)*(x576)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x582=IKsin(j14);
IkReal x583=IKcos(j14);
IkReal x584=((cj17)*(sj18));
IkReal x585=((IkReal(1.00000000000000))*(sj17));
IkReal x586=((cj18)*(r20));
IkReal x587=((sj13)*(sj17));
IkReal x588=((cj18)*(r10));
IkReal x589=((cj13)*(r02));
IkReal x590=((cj13)*(r01));
IkReal x591=((sj17)*(sj18));
IkReal x592=((IkReal(1.00000000000000))*(cj17));
IkReal x593=((cj15)*(x582));
IkReal x594=((sj15)*(x583));
IkReal x595=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x596=((sj15)*(x582));
IkReal x597=((cj13)*(cj18)*(r00));
IkReal x598=((cj15)*(x583));
IkReal x599=((x594)+(x593));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x585)))+(((IkReal(-1.00000000000000))*(x586)*(x592)))+(((IkReal(-1.00000000000000))*(x598)))+(x596)+(((r21)*(x584))));
evalcond[1]=((((r21)*(x591)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x585)*(x586)))+(x599));
evalcond[2]=((((IkReal(-1.00000000000000))*(x584)*(x590)))+(((r12)*(x587)))+(((cj17)*(x597)))+(((sj17)*(x589)))+(((IkReal(-1.00000000000000))*(x584)*(x595)))+(x599)+(((cj17)*(sj13)*(x588))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x589)*(x592)))+(((IkReal(-1.00000000000000))*(x596)))+(((x587)*(x588)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x592)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x585)))+(x598)+(((IkReal(-1.00000000000000))*(sj18)*(x585)*(x590)))+(((sj17)*(x597))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x600=((npy)*(sj18));
IkReal x601=((IkReal(1.00000000000000))*(sj17));
IkReal x602=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(x602)))+(((cj17)*(x600)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(x601))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((sj17)*(x600)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(x601)*(x602))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x603=(sj18)*(sj18);
IkReal x604=(cj18)*(cj18);
IkReal x605=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x606=((IkReal(1.00000000000000))*(x603));
IkReal x607=((IkReal(1.00000000000000))*(x604));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(r00)*(r01)*(x605)))+(((IkReal(-1.00000000000000))*(x606)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x607)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x607)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x606)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x605)))));
IkReal x608=(sj18)*(sj18);
IkReal x609=(cj18)*(cj18);
IkReal x610=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x611=((IkReal(1.00000000000000))*(x608));
IkReal x612=((IkReal(1.00000000000000))*(x609));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x610)))+(((IkReal(-1.00000000000000))*(x611)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x611)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x612)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x612)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x610))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x613=((r21)*(sj18));
IkReal x614=((cj15)*(cj17));
IkReal x615=((sj15)*(sj17));
IkReal x616=((cj15)*(sj17));
IkReal x617=((cj17)*(sj15));
IkReal x618=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst12)*(((((cj18)*(r20)*(x617)))+(((IkReal(-1.00000000000000))*(x613)*(x617)))+(((x613)*(x616)))+(((r22)*(x614)))+(((r22)*(x615)))+(((IkReal(-1.00000000000000))*(x616)*(x618))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x614)*(x618)))+(((IkReal(-1.00000000000000))*(r22)*(x616)))+(((x613)*(x615)))+(((x613)*(x614)))+(((r22)*(x617)))+(((IkReal(-1.00000000000000))*(x615)*(x618))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst12)*(((((cj18)*(r20)*(x617)))+(((IkReal(-1.00000000000000))*(x613)*(x617)))+(((x613)*(x616)))+(((r22)*(x614)))+(((r22)*(x615)))+(((IkReal(-1.00000000000000))*(x616)*(x618)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(x614)*(x618)))+(((IkReal(-1.00000000000000))*(r22)*(x616)))+(((x613)*(x615)))+(((x613)*(x614)))+(((r22)*(x617)))+(((IkReal(-1.00000000000000))*(x615)*(x618)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x619=IKsin(j14);
IkReal x620=IKcos(j14);
IkReal x621=((IkReal(1.00000000000000))*(sj17));
IkReal x622=((cj18)*(r20));
IkReal x623=((r21)*(sj18));
IkReal x624=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((IkReal(-1.00000000000000))*(x620)*(x624)))+(((cj17)*(x623)))+(((sj15)*(x619)))+(((IkReal(-1.00000000000000))*(cj17)*(x622)))+(((IkReal(-1.00000000000000))*(r22)*(x621))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj15)*(x620)))+(((IkReal(-1.00000000000000))*(x621)*(x622)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x619)*(x624)))+(((sj17)*(x623))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x625=(sj18)*(sj18);
IkReal x626=(cj18)*(cj18);
IkReal x627=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x628=((IkReal(1.00000000000000))*(x625));
IkReal x629=((IkReal(1.00000000000000))*(x626));
gconst13=IKsign(((((IkReal(-1.00000000000000))*(x629)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x628)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x627)))+(((IkReal(-1.00000000000000))*(x628)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x627)))+(((IkReal(-1.00000000000000))*(x629)*((r11)*(r11))))));
IkReal x630=(sj18)*(sj18);
IkReal x631=(cj18)*(cj18);
IkReal x632=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x633=((IkReal(1.00000000000000))*(x630));
IkReal x634=((IkReal(1.00000000000000))*(x631));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x634)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x634)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x633)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x632)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x632)))+(((IkReal(-1.00000000000000))*(x633)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x635=IKsin(j13);
IkReal x636=IKcos(j13);
IkReal x637=((IkReal(1.00000000000000))*(sj17));
IkReal x638=((r11)*(sj18));
IkReal x639=((r10)*(sj17));
IkReal x640=((cj17)*(r10));
IkReal x641=((IkReal(1.00000000000000))*(r11));
IkReal x642=((IkReal(1.00000000000000))*(r10));
IkReal x643=((IkReal(1.00000000000000))*(r00));
IkReal x644=((r12)*(sj17));
IkReal x645=((cj18)*(x635));
IkReal x646=((cj18)*(x636));
IkReal x647=((sj18)*(x635));
IkReal x648=((r02)*(x635));
IkReal x649=((sj18)*(x636));
IkReal x650=((IkReal(1.00000000000000))*(cj17)*(x636));
IkReal x651=((IkReal(1.00000000000000))*(cj17)*(x635));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x642)*(x649)))+(((IkReal(-1.00000000000000))*(x641)*(x646)))+(((r01)*(x645)))+(((r00)*(x647))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x642)*(x647)))+(((IkReal(-1.00000000000000))*(x641)*(x645)))+(((IkReal(-1.00000000000000))*(x643)*(x649)))+(((IkReal(-1.00000000000000))*(r01)*(x646))));
evalcond[2]=((((x636)*(x644)))+(((IkReal(-1.00000000000000))*(cj17)*(x643)*(x645)))+(((x640)*(x646)))+(((IkReal(-1.00000000000000))*(x637)*(x648)))+(((IkReal(-1.00000000000000))*(x638)*(x650)))+(((cj17)*(r01)*(x647))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(x650)))+(((IkReal(-1.00000000000000))*(x636)*(x637)*(x638)))+(((x639)*(x646)))+(((cj17)*(x648)))+(((r01)*(sj17)*(x647)))+(((IkReal(-1.00000000000000))*(r00)*(x637)*(x645))));
evalcond[4]=((((cj15)*(sj14)))+(((x635)*(x644)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x649)))+(((cj14)*(sj15)))+(((r02)*(sj17)*(x636)))+(((cj17)*(r00)*(x646)))+(((x640)*(x645)))+(((IkReal(-1.00000000000000))*(x638)*(x651))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x651)))+(((x639)*(x645)))+(((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((r00)*(sj17)*(x646)))+(((IkReal(-1.00000000000000))*(r02)*(x650)))+(((sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(x635)*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(r01)*(x637)*(x649))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x652=IKsin(j13);
IkReal x653=IKcos(j13);
IkReal x654=((cj18)*(r01));
IkReal x655=((r11)*(sj18));
IkReal x656=((IkReal(1.00000000000000))*(x653));
IkReal x657=((sj18)*(x652));
IkReal x658=((r02)*(x652));
IkReal x659=((IkReal(1.00000000000000))*(cj18)*(x652));
IkReal x660=((cj18)*(r10)*(x653));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x656)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x656)))+(((x652)*(x654)))+(((r00)*(x657))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r11)*(x659)))+(((IkReal(-1.00000000000000))*(r10)*(x657)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x656)))+(((IkReal(-1.00000000000000))*(x654)*(x656))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x655)*(x656)))+(((cj17)*(x660)))+(((r12)*(sj17)*(x653)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x659)))+(((cj17)*(r01)*(x657)))+(((IkReal(-1.00000000000000))*(sj17)*(x658))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj17)*(x655)*(x656)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x656)))+(((cj17)*(x658)))+(((r01)*(sj17)*(x657)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x659)))+(((sj17)*(x660))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x661=((cj15)*(cj17));
IkReal x662=((r21)*(sj18));
IkReal x663=((sj15)*(sj17));
IkReal x664=((cj15)*(sj17));
IkReal x665=((cj17)*(sj15));
IkReal x666=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst14)*(((((x662)*(x664)))+(((cj18)*(r20)*(x665)))+(((r22)*(x661)))+(((r22)*(x663)))+(((IkReal(-1.00000000000000))*(x664)*(x666)))+(((IkReal(-1.00000000000000))*(x662)*(x665))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x663)*(x666)))+(((x662)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x666)))+(((IkReal(-1.00000000000000))*(r22)*(x664)))+(((x661)*(x662)))+(((r22)*(x665))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst14)*(((((x662)*(x664)))+(((cj18)*(r20)*(x665)))+(((r22)*(x661)))+(((r22)*(x663)))+(((IkReal(-1.00000000000000))*(x664)*(x666)))+(((IkReal(-1.00000000000000))*(x662)*(x665)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(x663)*(x666)))+(((x662)*(x663)))+(((IkReal(-1.00000000000000))*(x661)*(x666)))+(((IkReal(-1.00000000000000))*(r22)*(x664)))+(((x661)*(x662)))+(((r22)*(x665)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x667=IKsin(j14);
IkReal x668=IKcos(j14);
IkReal x669=((cj17)*(sj18));
IkReal x670=((IkReal(1.00000000000000))*(sj17));
IkReal x671=((cj18)*(r20));
IkReal x672=((sj13)*(sj17));
IkReal x673=((cj18)*(r10));
IkReal x674=((cj13)*(r02));
IkReal x675=((cj13)*(r01));
IkReal x676=((sj17)*(sj18));
IkReal x677=((IkReal(1.00000000000000))*(cj17));
IkReal x678=((sj15)*(x667));
IkReal x679=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x680=((sj15)*(x668));
IkReal x681=((cj15)*(x667));
IkReal x682=((cj13)*(cj18)*(r00));
IkReal x683=((IkReal(1.00000000000000))*(cj15)*(x668));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x670)))+(((IkReal(-1.00000000000000))*(x683)))+(((r21)*(x669)))+(x678)+(((IkReal(-1.00000000000000))*(x671)*(x677))));
evalcond[1]=((((r21)*(x676)))+(((IkReal(-1.00000000000000))*(x670)*(x671)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x681)))+(((IkReal(-1.00000000000000))*(x680))));
evalcond[2]=((((r12)*(x672)))+(((sj17)*(x674)))+(((cj17)*(sj13)*(x673)))+(((cj17)*(x682)))+(((IkReal(-1.00000000000000))*(x669)*(x679)))+(x681)+(x680)+(((IkReal(-1.00000000000000))*(x669)*(x675))));
evalcond[3]=((((sj17)*(x682)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x677)))+(((x672)*(x673)))+(((IkReal(-1.00000000000000))*(x683)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x670)))+(x678)+(((IkReal(-1.00000000000000))*(x674)*(x677)))+(((IkReal(-1.00000000000000))*(sj18)*(x670)*(x675))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x684=((cj16)*(sj17));
IkReal x685=((cj16)*(cj17)*(cj18));
IkReal x686=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst1)*(((((r10)*(x685)))+(((r12)*(x684)))+(((IkReal(-1.00000000000000))*(r11)*(x686))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x686)))+(((r00)*(x685)))+(((r02)*(x684))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst1)*(((((r10)*(x685)))+(((r12)*(x684)))+(((IkReal(-1.00000000000000))*(r11)*(x686)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(r01)*(x686)))+(((r00)*(x685)))+(((r02)*(x684)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x687=IKsin(j13);
IkReal x688=IKcos(j13);
IkReal x689=((IkReal(1.00000000000000))*(sj17));
IkReal x690=((IkReal(1.00000000000000))*(cj17));
IkReal x691=((r00)*(x687));
IkReal x692=((r02)*(x687));
IkReal x693=((r01)*(x687));
IkReal x694=((r10)*(x688));
IkReal x695=((r12)*(x688));
IkReal x696=((r11)*(sj18)*(x688));
evalcond[0]=((((cj18)*(x693)))+(((sj18)*(x691)))+(cj16)+(((IkReal(-1.00000000000000))*(sj18)*(x694)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x688))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj18)*(x690)*(x691)))+(((cj17)*(sj18)*(x693)))+(((cj17)*(cj18)*(x694)))+(((sj17)*(x695)))+(((IkReal(-1.00000000000000))*(x690)*(x696)))+(((IkReal(-1.00000000000000))*(x689)*(x692))));
evalcond[2]=((((cj17)*(x692)))+(((cj18)*(sj17)*(x694)))+(((sj17)*(sj18)*(x693)))+(((IkReal(-1.00000000000000))*(cj18)*(x689)*(x691)))+(sj16)+(((IkReal(-1.00000000000000))*(x690)*(x695)))+(((IkReal(-1.00000000000000))*(x689)*(x696))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x697=((IkReal(1.00000000000000))*(sj13));
IkReal x698=((r10)*(sj18));
IkReal x699=((IkReal(1.00000000000000))*(cj18));
IkReal x700=((cj13)*(r11));
IkReal x701=((r01)*(sj13));
IkReal x702=((cj13)*(r12));
IkReal x703=((cj18)*(r00));
IkReal x704=((npy)*(sj18));
IkReal x705=((sj17)*(sj18));
IkReal x706=((IkReal(1.00000000000000))*(cj17));
IkReal x707=((r00)*(sj18));
IkReal x708=((IkReal(1.00000000000000))*(cj13));
IkReal x709=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((cj17)*(x704)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x699))));
evalcond[4]=((IkReal(1.00000000000000))+(((cj18)*(x701)))+(((IkReal(-1.00000000000000))*(x699)*(x700)))+(((IkReal(-1.00000000000000))*(x698)*(x708)))+(((sj13)*(x707))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x699)))+(((sj17)*(x704))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x707)*(x708)))+(((IkReal(-1.00000000000000))*(x697)*(x698)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x697)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x699))));
evalcond[7]=((((cj17)*(x709)))+(((IkReal(-1.00000000000000))*(cj17)*(x697)*(x703)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x697)))+(((IkReal(-1.00000000000000))*(sj18)*(x700)*(x706)))+(((cj17)*(sj18)*(x701)))+(((sj17)*(x702))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x700)*(x705)))+(((x701)*(x705)))+(((IkReal(-1.00000000000000))*(x702)*(x706)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj17)*(x697)*(x703)))+(((sj17)*(x709))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x710=((cj15)*(cj17));
IkReal x711=((r21)*(sj18));
IkReal x712=((cj18)*(r20));
IkReal x713=((sj15)*(sj17));
IkReal x714=((cj15)*(sj17));
IkReal x715=((cj17)*(sj15));
if( IKabs(((gconst4)*(((((r22)*(x710)))+(((IkReal(-1.00000000000000))*(r22)*(x713)))+(((x711)*(x715)))+(((x711)*(x714)))+(((IkReal(-1.00000000000000))*(x712)*(x714)))+(((IkReal(-1.00000000000000))*(x712)*(x715))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((r22)*(x715)))+(((r22)*(x714)))+(((IkReal(-1.00000000000000))*(x710)*(x711)))+(((x711)*(x713)))+(((x710)*(x712)))+(((IkReal(-1.00000000000000))*(x712)*(x713))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst4)*(((((r22)*(x710)))+(((IkReal(-1.00000000000000))*(r22)*(x713)))+(((x711)*(x715)))+(((x711)*(x714)))+(((IkReal(-1.00000000000000))*(x712)*(x714)))+(((IkReal(-1.00000000000000))*(x712)*(x715)))))), ((gconst4)*(((((r22)*(x715)))+(((r22)*(x714)))+(((IkReal(-1.00000000000000))*(x710)*(x711)))+(((x711)*(x713)))+(((x710)*(x712)))+(((IkReal(-1.00000000000000))*(x712)*(x713)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x716=IKsin(j14);
IkReal x717=IKcos(j14);
IkReal x718=((cj17)*(sj18));
IkReal x719=((IkReal(1.00000000000000))*(sj17));
IkReal x720=((cj18)*(r20));
IkReal x721=((sj13)*(sj17));
IkReal x722=((cj18)*(r10));
IkReal x723=((cj13)*(r02));
IkReal x724=((cj13)*(r01));
IkReal x725=((sj17)*(sj18));
IkReal x726=((IkReal(1.00000000000000))*(cj17));
IkReal x727=((cj15)*(x716));
IkReal x728=((sj15)*(x717));
IkReal x729=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x730=((sj15)*(x716));
IkReal x731=((cj13)*(cj18)*(r00));
IkReal x732=((cj15)*(x717));
IkReal x733=((x727)+(x728));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x719)))+(((IkReal(-1.00000000000000))*(x732)))+(((r21)*(x718)))+(((IkReal(-1.00000000000000))*(x720)*(x726)))+(x730));
evalcond[1]=((((cj17)*(r22)))+(x733)+(((IkReal(-1.00000000000000))*(x719)*(x720)))+(((r21)*(x725))));
evalcond[2]=((((sj17)*(x723)))+(((cj17)*(x731)))+(((cj17)*(sj13)*(x722)))+(x733)+(((IkReal(-1.00000000000000))*(x718)*(x729)))+(((r12)*(x721)))+(((IkReal(-1.00000000000000))*(x718)*(x724))));
evalcond[3]=((((x721)*(x722)))+(((sj17)*(x731)))+(((IkReal(-1.00000000000000))*(x723)*(x726)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x719)))+(((IkReal(-1.00000000000000))*(x730)))+(((IkReal(-1.00000000000000))*(sj18)*(x719)*(x724)))+(x732)+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x726))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x734=((IkReal(1.00000000000000))*(sj13));
IkReal x735=((r10)*(sj18));
IkReal x736=((IkReal(1.00000000000000))*(cj18));
IkReal x737=((cj13)*(r11));
IkReal x738=((r01)*(sj13));
IkReal x739=((cj13)*(r12));
IkReal x740=((cj18)*(r00));
IkReal x741=((npy)*(sj18));
IkReal x742=((sj17)*(sj18));
IkReal x743=((IkReal(1.00000000000000))*(cj17));
IkReal x744=((r00)*(sj18));
IkReal x745=((IkReal(1.00000000000000))*(cj13));
IkReal x746=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj17)*(x741)))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x736))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x736)*(x737)))+(((cj18)*(x738)))+(((IkReal(-1.00000000000000))*(x735)*(x745)))+(((sj13)*(x744))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x736)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15)))+(((sj17)*(x741))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r01)*(x736)))+(((IkReal(-1.00000000000000))*(x734)*(x735)))+(((IkReal(-1.00000000000000))*(x744)*(x745)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x734))));
evalcond[7]=((((cj17)*(sj18)*(x738)))+(((cj17)*(x746)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x734)))+(((sj17)*(x739)))+(((IkReal(-1.00000000000000))*(cj17)*(x734)*(x740)))+(((IkReal(-1.00000000000000))*(sj18)*(x737)*(x743))));
evalcond[8]=((((x738)*(x742)))+(((IkReal(-1.00000000000000))*(x737)*(x742)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj17)*(x734)*(x740)))+(((IkReal(-1.00000000000000))*(x739)*(x743)))+(((sj17)*(x746))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x747=((r21)*(sj18));
IkReal x748=((cj15)*(cj17));
IkReal x749=((sj15)*(sj17));
IkReal x750=((cj15)*(sj17));
IkReal x751=((cj17)*(sj15));
IkReal x752=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst5)*(((((r22)*(x748)))+(((r22)*(x749)))+(((x747)*(x750)))+(((IkReal(-1.00000000000000))*(x750)*(x752)))+(((cj18)*(r20)*(x751)))+(((IkReal(-1.00000000000000))*(x747)*(x751))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r22)*(x751)))+(((x747)*(x748)))+(((x747)*(x749)))+(((IkReal(-1.00000000000000))*(r22)*(x750)))+(((IkReal(-1.00000000000000))*(x749)*(x752)))+(((IkReal(-1.00000000000000))*(x748)*(x752))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst5)*(((((r22)*(x748)))+(((r22)*(x749)))+(((x747)*(x750)))+(((IkReal(-1.00000000000000))*(x750)*(x752)))+(((cj18)*(r20)*(x751)))+(((IkReal(-1.00000000000000))*(x747)*(x751)))))), ((gconst5)*(((((r22)*(x751)))+(((x747)*(x748)))+(((x747)*(x749)))+(((IkReal(-1.00000000000000))*(r22)*(x750)))+(((IkReal(-1.00000000000000))*(x749)*(x752)))+(((IkReal(-1.00000000000000))*(x748)*(x752)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x753=IKsin(j14);
IkReal x754=IKcos(j14);
IkReal x755=((cj17)*(sj18));
IkReal x756=((IkReal(1.00000000000000))*(sj17));
IkReal x757=((cj18)*(r20));
IkReal x758=((sj13)*(sj17));
IkReal x759=((cj18)*(r10));
IkReal x760=((cj13)*(r02));
IkReal x761=((cj13)*(r01));
IkReal x762=((sj17)*(sj18));
IkReal x763=((IkReal(1.00000000000000))*(cj17));
IkReal x764=((sj15)*(x753));
IkReal x765=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x766=((sj15)*(x754));
IkReal x767=((cj15)*(x753));
IkReal x768=((cj13)*(cj18)*(r00));
IkReal x769=((IkReal(1.00000000000000))*(cj15)*(x754));
evalcond[0]=((((IkReal(-1.00000000000000))*(x769)))+(((r21)*(x755)))+(((IkReal(-1.00000000000000))*(x757)*(x763)))+(((IkReal(-1.00000000000000))*(r22)*(x756)))+(x764));
evalcond[1]=((((r21)*(x762)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x766)))+(((IkReal(-1.00000000000000))*(x767)))+(((IkReal(-1.00000000000000))*(x756)*(x757))));
evalcond[2]=((((cj17)*(x768)))+(((cj17)*(sj13)*(x759)))+(((IkReal(-1.00000000000000))*(x755)*(x765)))+(((r12)*(x758)))+(x766)+(x767)+(((IkReal(-1.00000000000000))*(x755)*(x761)))+(((sj17)*(x760))));
evalcond[3]=((((x758)*(x759)))+(((IkReal(-1.00000000000000))*(sj18)*(x756)*(x761)))+(((IkReal(-1.00000000000000))*(x769)))+(x764)+(((IkReal(-1.00000000000000))*(x760)*(x763)))+(((sj17)*(x768)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x763)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x756))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x770=((sj15)*(sj16));
IkReal x771=((r22)*(sj17));
IkReal x772=((cj18)*(r21));
IkReal x773=((r20)*(sj18));
IkReal x774=((cj15)*(sj16));
IkReal x775=((cj17)*(r21)*(sj18));
IkReal x776=((cj17)*(cj18)*(r20));
if( IKabs(((gconst3)*(((((cj15)*(x773)))+(((cj15)*(x772)))+(((x770)*(x771)))+(((x770)*(x776)))+(((IkReal(-1.00000000000000))*(x770)*(x775))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((x774)*(x775)))+(((IkReal(-1.00000000000000))*(x771)*(x774)))+(((IkReal(-1.00000000000000))*(x774)*(x776)))+(((sj15)*(x773)))+(((sj15)*(x772))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst3)*(((((cj15)*(x773)))+(((cj15)*(x772)))+(((x770)*(x771)))+(((x770)*(x776)))+(((IkReal(-1.00000000000000))*(x770)*(x775)))))), ((gconst3)*(((((x774)*(x775)))+(((IkReal(-1.00000000000000))*(x771)*(x774)))+(((IkReal(-1.00000000000000))*(x774)*(x776)))+(((sj15)*(x773)))+(((sj15)*(x772)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x777=IKsin(j14);
IkReal x778=IKcos(j14);
IkReal x779=((IkReal(1.00000000000000))*(cj18));
IkReal x780=((cj13)*(r01));
IkReal x781=((IkReal(1.00000000000000))*(sj18));
IkReal x782=((cj13)*(r00));
IkReal x783=((sj13)*(sj17));
IkReal x784=((cj18)*(r10));
IkReal x785=((r21)*(sj18));
IkReal x786=((IkReal(1.00000000000000))*(sj16));
IkReal x787=((cj13)*(r02));
IkReal x788=((IkReal(1.00000000000000))*(cj17));
IkReal x789=((sj13)*(x781));
IkReal x790=((cj16)*(x778));
IkReal x791=((sj15)*(x777));
IkReal x792=((cj15)*(x777));
IkReal x793=((cj15)*(x778));
IkReal x794=((sj15)*(x778));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x786)*(x792)))+(((IkReal(-1.00000000000000))*(x786)*(x794))));
evalcond[1]=((((cj17)*(x785)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x791)+(((IkReal(-1.00000000000000))*(x793)))+(((IkReal(-1.00000000000000))*(cj17)*(r20)*(x779))));
evalcond[2]=((((sj17)*(x785)))+(((sj15)*(x790)))+(((cj16)*(x792)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x779))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x781)*(x782)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(x779)))+(((IkReal(-1.00000000000000))*(r10)*(x789)))+(((IkReal(-1.00000000000000))*(x786)*(x793)))+(((sj16)*(x791)))+(((IkReal(-1.00000000000000))*(x779)*(x780))));
evalcond[4]=((((cj17)*(cj18)*(x782)))+(((sj17)*(x787)))+(((cj17)*(sj13)*(x784)))+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x789)))+(x792)+(x794)+(((IkReal(-1.00000000000000))*(cj17)*(x780)*(x781)))+(((r12)*(x783))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r11)*(x781)*(x783)))+(((x783)*(x784)))+(((cj18)*(sj17)*(x782)))+(((IkReal(-1.00000000000000))*(sj17)*(x780)*(x781)))+(((IkReal(-1.00000000000000))*(cj16)*(x791)))+(((IkReal(-1.00000000000000))*(x787)*(x788)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x788)))+(((cj15)*(x790))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x795=((sj15)*(sj16));
IkReal x796=((r22)*(sj17));
IkReal x797=((cj18)*(r21));
IkReal x798=((r20)*(sj18));
IkReal x799=((cj15)*(sj16));
IkReal x800=((cj17)*(r21)*(sj18));
IkReal x801=((cj17)*(cj18)*(r20));
if( IKabs(((gconst2)*(((((x795)*(x801)))+(((IkReal(-1.00000000000000))*(x795)*(x800)))+(((cj15)*(x798)))+(((cj15)*(x797)))+(((x795)*(x796))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x796)*(x799)))+(((sj15)*(x798)))+(((sj15)*(x797)))+(((IkReal(-1.00000000000000))*(x799)*(x801)))+(((x799)*(x800))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst2)*(((((x795)*(x801)))+(((IkReal(-1.00000000000000))*(x795)*(x800)))+(((cj15)*(x798)))+(((cj15)*(x797)))+(((x795)*(x796)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x796)*(x799)))+(((sj15)*(x798)))+(((sj15)*(x797)))+(((IkReal(-1.00000000000000))*(x799)*(x801)))+(((x799)*(x800)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[3];
IkReal x802=IKsin(j14);
IkReal x803=IKcos(j14);
IkReal x804=((IkReal(1.00000000000000))*(sj17));
IkReal x805=((cj18)*(r20));
IkReal x806=((r21)*(sj18));
IkReal x807=((IkReal(1.00000000000000))*(x803));
IkReal x808=((cj15)*(x802));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj16)*(x808)))+(((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(sj15)*(sj16)*(x807))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj15)*(x807)))+(((IkReal(-1.00000000000000))*(r22)*(x804)))+(((sj15)*(x802)))+(((cj17)*(x806)))+(((IkReal(-1.00000000000000))*(cj17)*(x805))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x804)*(x805)))+(((sj17)*(x806)))+(((cj17)*(r22)))+(((cj16)*(sj15)*(x803)))+(((cj16)*(x808))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x809=(sj18)*(sj18);
IkReal x810=(cj18)*(cj18);
IkReal x811=((r00)*(r11));
IkReal x812=((r02)*(sj17));
IkReal x813=((cj17)*(x809));
IkReal x814=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x815=((cj17)*(x810));
IkReal x816=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst6=IKsign(((((cj18)*(r11)*(x812)))+(((r10)*(sj18)*(x812)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x816)))+(((IkReal(-1.00000000000000))*(x814)*(x815)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x816)))+(((x811)*(x813)))+(((x811)*(x815)))+(((IkReal(-1.00000000000000))*(x813)*(x814)))));
IkReal x817=(sj18)*(sj18);
IkReal x818=(cj18)*(cj18);
IkReal x819=((r00)*(r11));
IkReal x820=((r02)*(sj17));
IkReal x821=((cj17)*(x817));
IkReal x822=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x823=((cj17)*(x818));
IkReal x824=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x822)*(x823)))+(((cj18)*(r11)*(x820)))+(((r10)*(sj18)*(x820)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x824)))+(((x819)*(x821)))+(((x819)*(x823)))+(((IkReal(-1.00000000000000))*(x821)*(x822)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x824))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x825=((cj16)*(sj17));
IkReal x826=((cj16)*(cj17)*(cj18));
IkReal x827=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst6)*(((((r12)*(x825)))+(((IkReal(-1.00000000000000))*(r11)*(x827)))+(((r10)*(x826))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x827)))+(((r00)*(x826)))+(((r02)*(x825))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst6)*(((((r12)*(x825)))+(((IkReal(-1.00000000000000))*(r11)*(x827)))+(((r10)*(x826)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r01)*(x827)))+(((r00)*(x826)))+(((r02)*(x825)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x828=IKsin(j13);
IkReal x829=IKcos(j13);
IkReal x830=((IkReal(1.00000000000000))*(sj17));
IkReal x831=((r11)*(sj18));
IkReal x832=((r10)*(sj17));
IkReal x833=((cj17)*(r10));
IkReal x834=((cj14)*(cj15));
IkReal x835=((IkReal(1.00000000000000))*(r11));
IkReal x836=((IkReal(1.00000000000000))*(r10));
IkReal x837=((IkReal(1.00000000000000))*(r00));
IkReal x838=((r12)*(sj17));
IkReal x839=((sj14)*(sj15));
IkReal x840=((cj18)*(x828));
IkReal x841=((cj18)*(x829));
IkReal x842=((sj18)*(x828));
IkReal x843=((r02)*(x828));
IkReal x844=((sj18)*(x829));
IkReal x845=((IkReal(1.00000000000000))*(cj17)*(x829));
IkReal x846=((IkReal(1.00000000000000))*(cj17)*(x828));
evalcond[0]=((((IkReal(-1.00000000000000))*(x835)*(x841)))+(((IkReal(-1.00000000000000))*(x836)*(x844)))+(((r01)*(x840)))+(((r00)*(x842)))+(cj16));
evalcond[1]=((((IkReal(-1.00000000000000))*(x835)*(x840)))+(((IkReal(-1.00000000000000))*(x836)*(x842)))+(((IkReal(-1.00000000000000))*(x837)*(x844)))+(((IkReal(-1.00000000000000))*(r01)*(x841)))+(((IkReal(-1.00000000000000))*(sj16)*(x834)))+(((sj16)*(x839))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x831)*(x845)))+(((x833)*(x841)))+(((cj17)*(r01)*(x842)))+(((IkReal(-1.00000000000000))*(x830)*(x843)))+(((x829)*(x838)))+(((IkReal(-1.00000000000000))*(cj17)*(x837)*(x840))));
evalcond[3]=((((cj17)*(x843)))+(((IkReal(-1.00000000000000))*(r00)*(x830)*(x840)))+(((x832)*(x841)))+(sj16)+(((IkReal(-1.00000000000000))*(r12)*(x845)))+(((r01)*(sj17)*(x842)))+(((IkReal(-1.00000000000000))*(x829)*(x830)*(x831))));
evalcond[4]=((((cj15)*(sj14)))+(((IkReal(-1.00000000000000))*(x831)*(x846)))+(((cj14)*(sj15)))+(((x833)*(x840)))+(((r02)*(sj17)*(x829)))+(((cj17)*(r00)*(x841)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x844)))+(((x828)*(x838))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(x845)))+(((IkReal(-1.00000000000000))*(x828)*(x830)*(x831)))+(((cj16)*(x834)))+(((IkReal(-1.00000000000000))*(cj16)*(x839)))+(((IkReal(-1.00000000000000))*(r01)*(x830)*(x844)))+(((x832)*(x840)))+(((IkReal(-1.00000000000000))*(r12)*(x846)))+(((r00)*(sj17)*(x841))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x847=((IkReal(4.00000000000000))*(npx));
IkReal x848=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x848)))+(((IkReal(-1.00000000000000))*(sj18)*(x847))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x848)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x847))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x848)))+(((IkReal(-1.00000000000000))*(sj18)*(x847)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x848)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x847)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x848)))+(((IkReal(-1.00000000000000))*(sj18)*(x847)))))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x848)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-0.360000000000000))*(cj17)))+(((cj17)*(cj18)*(x847)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x849=IKsin(j15);
IkReal x850=((npy)*(sj18));
IkReal x851=((IkReal(1.00000000000000))*(sj17));
IkReal x852=((cj18)*(npx));
IkReal x853=((IkReal(0.250000000000000))*(x849));
evalcond[0]=((((cj18)*(npy)))+(((sj16)*(x853)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x850)))+(((IkReal(-1.00000000000000))*(npz)*(x851)))+(((IkReal(-1.00000000000000))*(cj17)*(x852)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((sj17)*(x850)))+(((IkReal(-1.00000000000000))*(cj16)*(x853)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(x851)*(x852))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x854=(sj18)*(sj18);
IkReal x855=(cj18)*(cj18);
IkReal x856=((r00)*(r11));
IkReal x857=((r02)*(sj17));
IkReal x858=((cj17)*(x854));
IkReal x859=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x860=((cj17)*(x855));
IkReal x861=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(r00)*(sj18)*(x861)))+(((x856)*(x860)))+(((r10)*(sj18)*(x857)))+(((x856)*(x858)))+(((IkReal(-1.00000000000000))*(x858)*(x859)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x861)))+(((IkReal(-1.00000000000000))*(x859)*(x860)))+(((cj18)*(r11)*(x857)))));
IkReal x862=(sj18)*(sj18);
IkReal x863=(cj18)*(cj18);
IkReal x864=((r00)*(r11));
IkReal x865=((r02)*(sj17));
IkReal x866=((cj17)*(x862));
IkReal x867=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x868=((cj17)*(x863));
IkReal x869=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x866)*(x867)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x869)))+(((r10)*(sj18)*(x865)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x869)))+(((IkReal(-1.00000000000000))*(x867)*(x868)))+(((x864)*(x866)))+(((x864)*(x868)))+(((cj18)*(r11)*(x865))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x870=((npy)*(sj18));
IkReal x871=((IkReal(1.00000000000000))*(sj17));
IkReal x872=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(x871)))+(((cj17)*(x870)))+(((IkReal(-1.00000000000000))*(cj17)*(x872))));
evalcond[4]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(x871)*(x872)))+(((sj17)*(x870)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
IkReal x873=(sj18)*(sj18);
IkReal x874=(cj18)*(cj18);
IkReal x875=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst7=IKsign(((((x873)*((r00)*(r00))))+(((x873)*((r10)*(r10))))+(((r00)*(r01)*(x875)))+(((x874)*((r01)*(r01))))+(((r10)*(r11)*(x875)))+(((x874)*((r11)*(r11))))));
IkReal x876=(sj18)*(sj18);
IkReal x877=(cj18)*(cj18);
IkReal x878=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((r00)*(r01)*(x878)))+(((x877)*((r11)*(r11))))+(((r10)*(r11)*(x878)))+(((x876)*((r00)*(r00))))+(((x876)*((r10)*(r10))))+(((x877)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x879=((r21)*(sj18));
IkReal x880=((IkReal(1.00000000000000))*(cj15));
IkReal x881=((r22)*(sj17));
IkReal x882=((sj15)*(sj17));
IkReal x883=((cj18)*(r20));
IkReal x884=((IkReal(1.00000000000000))*(sj15));
IkReal x885=((cj17)*(sj15));
IkReal x886=((cj15)*(cj17));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(sj17)*(x880)*(x883)))+(((x879)*(x885)))+(((IkReal(-1.00000000000000))*(x881)*(x884)))+(((cj15)*(sj17)*(x879)))+(((r22)*(x886)))+(((IkReal(-1.00000000000000))*(cj17)*(x883)*(x884))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((x879)*(x882)))+(((IkReal(-1.00000000000000))*(x882)*(x883)))+(((x883)*(x886)))+(((cj15)*(x881)))+(((r22)*(x885)))+(((IkReal(-1.00000000000000))*(cj17)*(x879)*(x880))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(sj17)*(x880)*(x883)))+(((x879)*(x885)))+(((IkReal(-1.00000000000000))*(x881)*(x884)))+(((cj15)*(sj17)*(x879)))+(((r22)*(x886)))+(((IkReal(-1.00000000000000))*(cj17)*(x883)*(x884)))))), ((gconst8)*(((((x879)*(x882)))+(((IkReal(-1.00000000000000))*(x882)*(x883)))+(((x883)*(x886)))+(((cj15)*(x881)))+(((r22)*(x885)))+(((IkReal(-1.00000000000000))*(cj17)*(x879)*(x880)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x887=IKsin(j14);
IkReal x888=IKcos(j14);
IkReal x889=((IkReal(1.00000000000000))*(sj17));
IkReal x890=((cj18)*(r20));
IkReal x891=((r21)*(sj18));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj15)*(x888)))+(((cj17)*(x891)))+(((IkReal(-1.00000000000000))*(cj17)*(x890)))+(((IkReal(-1.00000000000000))*(r22)*(x889)))+(((sj15)*(x887))));
evalcond[1]=((((cj15)*(x887)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x889)*(x890)))+(((sj15)*(x888)))+(((sj17)*(x891))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst9;
IkReal x892=(sj18)*(sj18);
IkReal x893=(cj18)*(cj18);
IkReal x894=((IkReal(2.00000000000000))*(cj18)*(sj18));
gconst9=IKsign(((((x893)*((r11)*(r11))))+(((r10)*(r11)*(x894)))+(((x892)*((r10)*(r10))))+(((x892)*((r00)*(r00))))+(((x893)*((r01)*(r01))))+(((r00)*(r01)*(x894)))));
IkReal x895=(sj18)*(sj18);
IkReal x896=(cj18)*(cj18);
IkReal x897=((IkReal(2.00000000000000))*(cj18)*(sj18));
dummyeval[0]=((((x895)*((r00)*(r00))))+(((x895)*((r10)*(r10))))+(((r10)*(r11)*(x897)))+(((x896)*((r11)*(r11))))+(((r00)*(r01)*(x897)))+(((x896)*((r01)*(r01)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst9)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x898=IKsin(j13);
IkReal x899=IKcos(j13);
IkReal x900=((IkReal(1.00000000000000))*(sj17));
IkReal x901=((r11)*(sj18));
IkReal x902=((r10)*(sj17));
IkReal x903=((cj17)*(r10));
IkReal x904=((IkReal(1.00000000000000))*(r11));
IkReal x905=((IkReal(1.00000000000000))*(r10));
IkReal x906=((IkReal(1.00000000000000))*(r00));
IkReal x907=((r12)*(sj17));
IkReal x908=((cj18)*(x898));
IkReal x909=((cj18)*(x899));
IkReal x910=((sj18)*(x898));
IkReal x911=((r02)*(x898));
IkReal x912=((sj18)*(x899));
IkReal x913=((IkReal(1.00000000000000))*(cj17)*(x899));
IkReal x914=((IkReal(1.00000000000000))*(cj17)*(x898));
evalcond[0]=((IkReal(1.00000000000000))+(((r01)*(x908)))+(((IkReal(-1.00000000000000))*(x905)*(x912)))+(((IkReal(-1.00000000000000))*(x904)*(x909)))+(((r00)*(x910))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x906)*(x912)))+(((IkReal(-1.00000000000000))*(x905)*(x910)))+(((IkReal(-1.00000000000000))*(x904)*(x908)))+(((IkReal(-1.00000000000000))*(r01)*(x909))));
evalcond[2]=((((x903)*(x909)))+(((x899)*(x907)))+(((IkReal(-1.00000000000000))*(cj17)*(x906)*(x908)))+(((cj17)*(r01)*(x910)))+(((IkReal(-1.00000000000000))*(x900)*(x911)))+(((IkReal(-1.00000000000000))*(x901)*(x913))));
evalcond[3]=((((x902)*(x909)))+(((r01)*(sj17)*(x910)))+(((IkReal(-1.00000000000000))*(r00)*(x900)*(x908)))+(((IkReal(-1.00000000000000))*(r12)*(x913)))+(((IkReal(-1.00000000000000))*(x899)*(x900)*(x901)))+(((cj17)*(x911))));
evalcond[4]=((((cj15)*(sj14)))+(((x903)*(x908)))+(((cj17)*(r00)*(x909)))+(((r02)*(sj17)*(x899)))+(((cj14)*(sj15)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x912)))+(((x898)*(x907)))+(((IkReal(-1.00000000000000))*(x901)*(x914))));
evalcond[5]=((((cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(sj14)*(sj15)))+(((r00)*(sj17)*(x909)))+(((x902)*(x908)))+(((IkReal(-1.00000000000000))*(r01)*(x900)*(x912)))+(((IkReal(-1.00000000000000))*(r02)*(x913)))+(((IkReal(-1.00000000000000))*(r12)*(x914)))+(((IkReal(-1.00000000000000))*(x898)*(x900)*(x901))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst7)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x915=IKsin(j13);
IkReal x916=IKcos(j13);
IkReal x917=((cj18)*(r01));
IkReal x918=((r11)*(sj18));
IkReal x919=((IkReal(1.00000000000000))*(x916));
IkReal x920=((sj18)*(x915));
IkReal x921=((r02)*(x915));
IkReal x922=((IkReal(1.00000000000000))*(cj18)*(x915));
IkReal x923=((cj18)*(r10)*(x916));
evalcond[0]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x919)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x919)))+(((x915)*(x917)))+(((r00)*(x920))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x920)))+(((IkReal(-1.00000000000000))*(r11)*(x922)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x919)))+(((IkReal(-1.00000000000000))*(x917)*(x919))));
evalcond[2]=((((r12)*(sj17)*(x916)))+(((cj17)*(x923)))+(((cj17)*(r01)*(x920)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x922)))+(((IkReal(-1.00000000000000))*(cj17)*(x918)*(x919)))+(((IkReal(-1.00000000000000))*(sj17)*(x921))));
evalcond[3]=((((cj17)*(x921)))+(((IkReal(-1.00000000000000))*(sj17)*(x918)*(x919)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x922)))+(((r01)*(sj17)*(x920)))+(((sj17)*(x923)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x919))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x924=((r21)*(sj18));
IkReal x925=((IkReal(1.00000000000000))*(cj15));
IkReal x926=((r22)*(sj17));
IkReal x927=((sj15)*(sj17));
IkReal x928=((cj18)*(r20));
IkReal x929=((IkReal(1.00000000000000))*(sj15));
IkReal x930=((cj17)*(sj15));
IkReal x931=((cj15)*(cj17));
if( IKabs(((gconst10)*(((((x924)*(x930)))+(((r22)*(x931)))+(((IkReal(-1.00000000000000))*(sj17)*(x925)*(x928)))+(((IkReal(-1.00000000000000))*(cj17)*(x928)*(x929)))+(((IkReal(-1.00000000000000))*(x926)*(x929)))+(((cj15)*(sj17)*(x924))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x927)*(x928)))+(((cj15)*(x926)))+(((r22)*(x930)))+(((x924)*(x927)))+(((x928)*(x931)))+(((IkReal(-1.00000000000000))*(cj17)*(x924)*(x925))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst10)*(((((x924)*(x930)))+(((r22)*(x931)))+(((IkReal(-1.00000000000000))*(sj17)*(x925)*(x928)))+(((IkReal(-1.00000000000000))*(cj17)*(x928)*(x929)))+(((IkReal(-1.00000000000000))*(x926)*(x929)))+(((cj15)*(sj17)*(x924)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(x927)*(x928)))+(((cj15)*(x926)))+(((r22)*(x930)))+(((x924)*(x927)))+(((x928)*(x931)))+(((IkReal(-1.00000000000000))*(cj17)*(x924)*(x925)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x932=IKsin(j14);
IkReal x933=IKcos(j14);
IkReal x934=((cj17)*(sj18));
IkReal x935=((IkReal(1.00000000000000))*(sj17));
IkReal x936=((cj18)*(r20));
IkReal x937=((sj13)*(sj17));
IkReal x938=((cj18)*(r10));
IkReal x939=((cj13)*(r02));
IkReal x940=((cj13)*(r01));
IkReal x941=((sj17)*(sj18));
IkReal x942=((IkReal(1.00000000000000))*(cj17));
IkReal x943=((cj15)*(x932));
IkReal x944=((sj15)*(x933));
IkReal x945=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x946=((sj15)*(x932));
IkReal x947=((cj13)*(cj18)*(r00));
IkReal x948=((cj15)*(x933));
IkReal x949=((x943)+(x944));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x935)))+(((r21)*(x934)))+(((IkReal(-1.00000000000000))*(x948)))+(((IkReal(-1.00000000000000))*(x936)*(x942)))+(x946));
evalcond[1]=((((IkReal(-1.00000000000000))*(x935)*(x936)))+(((r21)*(x941)))+(((cj17)*(r22)))+(x949));
evalcond[2]=((((cj17)*(x947)))+(((IkReal(-1.00000000000000))*(x934)*(x940)))+(((cj17)*(sj13)*(x938)))+(((r12)*(x937)))+(((sj17)*(x939)))+(x949)+(((IkReal(-1.00000000000000))*(x934)*(x945))));
evalcond[3]=((((x937)*(x938)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x942)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x935)))+(((IkReal(-1.00000000000000))*(x939)*(x942)))+(((IkReal(-1.00000000000000))*(sj18)*(x935)*(x940)))+(((IkReal(-1.00000000000000))*(x946)))+(((sj17)*(x947)))+(x948));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
IkReal x950=((npy)*(sj18));
IkReal x951=((IkReal(1.00000000000000))*(sj17));
IkReal x952=((cj18)*(npx));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(x951)))+(((cj17)*(x950)))+(((IkReal(-1.00000000000000))*(cj17)*(x952))));
evalcond[4]=((IkReal(-0.0300000000000000))+(((sj17)*(x950)))+(((IkReal(0.0900000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(x951)*(x952)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
IkReal x953=(sj18)*(sj18);
IkReal x954=(cj18)*(cj18);
IkReal x955=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x956=((IkReal(1.00000000000000))*(x953));
IkReal x957=((IkReal(1.00000000000000))*(x954));
gconst11=IKsign(((((IkReal(-1.00000000000000))*(x956)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x957)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x955)))+(((IkReal(-1.00000000000000))*(x956)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x957)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x955)))));
IkReal x958=(sj18)*(sj18);
IkReal x959=(cj18)*(cj18);
IkReal x960=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x961=((IkReal(1.00000000000000))*(x958));
IkReal x962=((IkReal(1.00000000000000))*(x959));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x960)))+(((IkReal(-1.00000000000000))*(x962)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x960)))+(((IkReal(-1.00000000000000))*(x961)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x962)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x961)*((r00)*(r00)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x963=((r21)*(sj18));
IkReal x964=((cj15)*(cj17));
IkReal x965=((sj15)*(sj17));
IkReal x966=((cj15)*(sj17));
IkReal x967=((cj17)*(sj15));
IkReal x968=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(x963)*(x967)))+(((IkReal(-1.00000000000000))*(x966)*(x968)))+(((x963)*(x966)))+(((cj18)*(r20)*(x967)))+(((r22)*(x964)))+(((r22)*(x965))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x966)))+(((IkReal(-1.00000000000000))*(x965)*(x968)))+(((IkReal(-1.00000000000000))*(x964)*(x968)))+(((x963)*(x964)))+(((x963)*(x965)))+(((r22)*(x967))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(x963)*(x967)))+(((IkReal(-1.00000000000000))*(x966)*(x968)))+(((x963)*(x966)))+(((cj18)*(r20)*(x967)))+(((r22)*(x964)))+(((r22)*(x965)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r22)*(x966)))+(((IkReal(-1.00000000000000))*(x965)*(x968)))+(((IkReal(-1.00000000000000))*(x964)*(x968)))+(((x963)*(x964)))+(((x963)*(x965)))+(((r22)*(x967)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[2];
IkReal x969=IKsin(j14);
IkReal x970=IKcos(j14);
IkReal x971=((IkReal(1.00000000000000))*(sj17));
IkReal x972=((cj18)*(r20));
IkReal x973=((r21)*(sj18));
IkReal x974=((IkReal(1.00000000000000))*(cj15));
evalcond[0]=((((cj17)*(x973)))+(((IkReal(-1.00000000000000))*(x970)*(x974)))+(((IkReal(-1.00000000000000))*(cj17)*(x972)))+(((sj15)*(x969)))+(((IkReal(-1.00000000000000))*(r22)*(x971))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj15)*(x970)))+(((IkReal(-1.00000000000000))*(x969)*(x974)))+(((IkReal(-1.00000000000000))*(x971)*(x972)))+(((cj17)*(r22)))+(((sj17)*(x973))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst13;
IkReal x975=(sj18)*(sj18);
IkReal x976=(cj18)*(cj18);
IkReal x977=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x978=((IkReal(1.00000000000000))*(x975));
IkReal x979=((IkReal(1.00000000000000))*(x976));
gconst13=IKsign(((((IkReal(-1.00000000000000))*(x978)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x977)))+(((IkReal(-1.00000000000000))*(x979)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x977)))+(((IkReal(-1.00000000000000))*(x979)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x978)*((r00)*(r00))))));
IkReal x980=(sj18)*(sj18);
IkReal x981=(cj18)*(cj18);
IkReal x982=((IkReal(2.00000000000000))*(cj18)*(sj18));
IkReal x983=((IkReal(1.00000000000000))*(x980));
IkReal x984=((IkReal(1.00000000000000))*(x981));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(r01)*(x982)))+(((IkReal(-1.00000000000000))*(x984)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x983)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x982)))+(((IkReal(-1.00000000000000))*(x984)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x983)*((r10)*(r10)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst13)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x985=IKsin(j13);
IkReal x986=IKcos(j13);
IkReal x987=((IkReal(1.00000000000000))*(sj17));
IkReal x988=((r11)*(sj18));
IkReal x989=((r10)*(sj17));
IkReal x990=((cj17)*(r10));
IkReal x991=((IkReal(1.00000000000000))*(r11));
IkReal x992=((IkReal(1.00000000000000))*(r10));
IkReal x993=((IkReal(1.00000000000000))*(r00));
IkReal x994=((r12)*(sj17));
IkReal x995=((cj18)*(x985));
IkReal x996=((cj18)*(x986));
IkReal x997=((sj18)*(x985));
IkReal x998=((r02)*(x985));
IkReal x999=((sj18)*(x986));
IkReal x1000=((IkReal(1.00000000000000))*(cj17)*(x986));
IkReal x1001=((IkReal(1.00000000000000))*(cj17)*(x985));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x991)*(x996)))+(((r01)*(x995)))+(((IkReal(-1.00000000000000))*(x992)*(x999)))+(((r00)*(x997))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x991)*(x995)))+(((IkReal(-1.00000000000000))*(x992)*(x997)))+(((IkReal(-1.00000000000000))*(r01)*(x996)))+(((IkReal(-1.00000000000000))*(x993)*(x999))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1000)*(x988)))+(((x986)*(x994)))+(((x990)*(x996)))+(((IkReal(-1.00000000000000))*(cj17)*(x993)*(x995)))+(((cj17)*(r01)*(x997)))+(((IkReal(-1.00000000000000))*(x987)*(x998))));
evalcond[3]=((((x989)*(x996)))+(((IkReal(-1.00000000000000))*(r12)*(x1000)))+(((cj17)*(x998)))+(((r01)*(sj17)*(x997)))+(((IkReal(-1.00000000000000))*(r00)*(x987)*(x995)))+(((IkReal(-1.00000000000000))*(x986)*(x987)*(x988))));
evalcond[4]=((((cj15)*(sj14)))+(((cj17)*(r00)*(x996)))+(((cj14)*(sj15)))+(((x990)*(x995)))+(((r02)*(sj17)*(x986)))+(((IkReal(-1.00000000000000))*(x1001)*(x988)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x999)))+(((x985)*(x994))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r01)*(x987)*(x999)))+(((x989)*(x995)))+(((IkReal(-1.00000000000000))*(cj14)*(cj15)))+(((IkReal(-1.00000000000000))*(r02)*(x1000)))+(((IkReal(-1.00000000000000))*(x985)*(x987)*(x988)))+(((IkReal(-1.00000000000000))*(r12)*(x1001)))+(((sj14)*(sj15)))+(((r00)*(sj17)*(x996))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(cj18)*(r01)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)))))), ((gconst11)*(((((cj18)*(r11)))+(((r10)*(sj18)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x1002=IKsin(j13);
IkReal x1003=IKcos(j13);
IkReal x1004=((cj18)*(r01));
IkReal x1005=((r11)*(sj18));
IkReal x1006=((IkReal(1.00000000000000))*(x1003));
IkReal x1007=((sj18)*(x1002));
IkReal x1008=((r02)*(x1002));
IkReal x1009=((IkReal(1.00000000000000))*(cj18)*(x1002));
IkReal x1010=((cj18)*(r10)*(x1003));
evalcond[0]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1006)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1006)))+(((x1002)*(x1004)))+(((r00)*(x1007))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1007)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x1006)))+(((IkReal(-1.00000000000000))*(x1004)*(x1006)))+(((IkReal(-1.00000000000000))*(r11)*(x1009))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj17)*(x1005)*(x1006)))+(((cj17)*(r01)*(x1007)))+(((r12)*(sj17)*(x1003)))+(((IkReal(-1.00000000000000))*(cj17)*(r00)*(x1009)))+(((cj17)*(x1010)))+(((IkReal(-1.00000000000000))*(sj17)*(x1008))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj17)*(x1005)*(x1006)))+(((r01)*(sj17)*(x1007)))+(((IkReal(-1.00000000000000))*(r00)*(sj17)*(x1009)))+(((sj17)*(x1010)))+(((IkReal(-1.00000000000000))*(cj17)*(r12)*(x1006)))+(((cj17)*(x1008))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1011=((cj15)*(cj17));
IkReal x1012=((r21)*(sj18));
IkReal x1013=((sj15)*(sj17));
IkReal x1014=((cj15)*(sj17));
IkReal x1015=((cj17)*(sj15));
IkReal x1016=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1014)*(x1016)))+(((r22)*(x1013)))+(((r22)*(x1011)))+(((cj18)*(r20)*(x1015)))+(((x1012)*(x1014)))+(((IkReal(-1.00000000000000))*(x1012)*(x1015))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x1011)*(x1016)))+(((r22)*(x1015)))+(((IkReal(-1.00000000000000))*(r22)*(x1014)))+(((x1012)*(x1013)))+(((IkReal(-1.00000000000000))*(x1013)*(x1016)))+(((x1011)*(x1012))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(x1014)*(x1016)))+(((r22)*(x1013)))+(((r22)*(x1011)))+(((cj18)*(r20)*(x1015)))+(((x1012)*(x1014)))+(((IkReal(-1.00000000000000))*(x1012)*(x1015)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(x1011)*(x1016)))+(((r22)*(x1015)))+(((IkReal(-1.00000000000000))*(r22)*(x1014)))+(((x1012)*(x1013)))+(((IkReal(-1.00000000000000))*(x1013)*(x1016)))+(((x1011)*(x1012)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1017=IKsin(j14);
IkReal x1018=IKcos(j14);
IkReal x1019=((cj17)*(sj18));
IkReal x1020=((IkReal(1.00000000000000))*(sj17));
IkReal x1021=((cj18)*(r20));
IkReal x1022=((sj13)*(sj17));
IkReal x1023=((cj18)*(r10));
IkReal x1024=((cj13)*(r02));
IkReal x1025=((cj13)*(r01));
IkReal x1026=((sj17)*(sj18));
IkReal x1027=((IkReal(1.00000000000000))*(cj17));
IkReal x1028=((sj15)*(x1017));
IkReal x1029=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1030=((sj15)*(x1018));
IkReal x1031=((cj15)*(x1017));
IkReal x1032=((cj13)*(cj18)*(r00));
IkReal x1033=((IkReal(1.00000000000000))*(cj15)*(x1018));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1020)))+(((IkReal(-1.00000000000000))*(x1033)))+(x1028)+(((r21)*(x1019)))+(((IkReal(-1.00000000000000))*(x1021)*(x1027))));
evalcond[1]=((((r21)*(x1026)))+(((IkReal(-1.00000000000000))*(x1030)))+(((IkReal(-1.00000000000000))*(x1031)))+(((IkReal(-1.00000000000000))*(x1020)*(x1021)))+(((cj17)*(r22))));
evalcond[2]=((((cj17)*(sj13)*(x1023)))+(x1030)+(x1031)+(((sj17)*(x1024)))+(((IkReal(-1.00000000000000))*(x1019)*(x1025)))+(((IkReal(-1.00000000000000))*(x1019)*(x1029)))+(((r12)*(x1022)))+(((cj17)*(x1032))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1027)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1020)))+(((IkReal(-1.00000000000000))*(x1033)))+(x1028)+(((x1022)*(x1023)))+(((sj17)*(x1032)))+(((IkReal(-1.00000000000000))*(x1024)*(x1027)))+(((IkReal(-1.00000000000000))*(sj18)*(x1020)*(x1025))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1034=((cj16)*(sj17));
IkReal x1035=((cj16)*(cj17)*(cj18));
IkReal x1036=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst1)*(((((r10)*(x1035)))+(((IkReal(-1.00000000000000))*(r11)*(x1036)))+(((r12)*(x1034))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((r00)*(x1035)))+(((r02)*(x1034)))+(((IkReal(-1.00000000000000))*(r01)*(x1036))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst1)*(((((r10)*(x1035)))+(((IkReal(-1.00000000000000))*(r11)*(x1036)))+(((r12)*(x1034)))))), ((gconst1)*(((((r00)*(x1035)))+(((r02)*(x1034)))+(((IkReal(-1.00000000000000))*(r01)*(x1036)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1037=IKsin(j13);
IkReal x1038=IKcos(j13);
IkReal x1039=((IkReal(1.00000000000000))*(sj17));
IkReal x1040=((IkReal(1.00000000000000))*(cj17));
IkReal x1041=((r00)*(x1037));
IkReal x1042=((r02)*(x1037));
IkReal x1043=((r01)*(x1037));
IkReal x1044=((r10)*(x1038));
IkReal x1045=((r12)*(x1038));
IkReal x1046=((r11)*(sj18)*(x1038));
evalcond[0]=((((cj18)*(x1043)))+(((IkReal(-1.00000000000000))*(sj18)*(x1044)))+(cj16)+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1038)))+(((sj18)*(x1041))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1039)*(x1042)))+(((IkReal(-1.00000000000000))*(cj18)*(x1040)*(x1041)))+(((cj17)*(cj18)*(x1044)))+(((IkReal(-1.00000000000000))*(x1040)*(x1046)))+(((sj17)*(x1045)))+(((cj17)*(sj18)*(x1043))));
evalcond[2]=((((cj17)*(x1042)))+(((cj18)*(sj17)*(x1044)))+(((IkReal(-1.00000000000000))*(cj18)*(x1039)*(x1041)))+(((IkReal(-1.00000000000000))*(x1039)*(x1046)))+(sj16)+(((sj17)*(sj18)*(x1043)))+(((IkReal(-1.00000000000000))*(x1040)*(x1045))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1047=((IkReal(1.00000000000000))*(sj13));
IkReal x1048=((r10)*(sj18));
IkReal x1049=((IkReal(1.00000000000000))*(cj18));
IkReal x1050=((cj13)*(r11));
IkReal x1051=((r01)*(sj13));
IkReal x1052=((cj13)*(r12));
IkReal x1053=((cj18)*(r00));
IkReal x1054=((npy)*(sj18));
IkReal x1055=((sj17)*(sj18));
IkReal x1056=((IkReal(1.00000000000000))*(cj17));
IkReal x1057=((r00)*(sj18));
IkReal x1058=((IkReal(1.00000000000000))*(cj13));
IkReal x1059=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((cj17)*(x1054)))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1049)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(1.00000000000000))+(((cj18)*(x1051)))+(((sj13)*(x1057)))+(((IkReal(-1.00000000000000))*(x1048)*(x1058)))+(((IkReal(-1.00000000000000))*(x1049)*(x1050))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1049)))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x1054))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1049)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1047)))+(((IkReal(-1.00000000000000))*(x1057)*(x1058)))+(((IkReal(-1.00000000000000))*(x1047)*(x1048))));
evalcond[7]=((((cj17)*(x1059)))+(((IkReal(-1.00000000000000))*(cj17)*(x1047)*(x1053)))+(((IkReal(-1.00000000000000))*(sj18)*(x1050)*(x1056)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1047)))+(((sj17)*(x1052)))+(((cj17)*(sj18)*(x1051))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj17)*(x1047)*(x1053)))+(((IkReal(-1.00000000000000))*(x1052)*(x1056)))+(((cj17)*(r02)*(sj13)))+(((x1051)*(x1055)))+(((IkReal(-1.00000000000000))*(x1050)*(x1055)))+(((sj17)*(x1059))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1060=((cj15)*(cj17));
IkReal x1061=((r21)*(sj18));
IkReal x1062=((cj18)*(r20));
IkReal x1063=((sj15)*(sj17));
IkReal x1064=((cj15)*(sj17));
IkReal x1065=((cj17)*(sj15));
if( IKabs(((gconst4)*(((((x1061)*(x1064)))+(((x1061)*(x1065)))+(((IkReal(-1.00000000000000))*(x1062)*(x1064)))+(((IkReal(-1.00000000000000))*(x1062)*(x1065)))+(((IkReal(-1.00000000000000))*(r22)*(x1063)))+(((r22)*(x1060))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1061)*(x1063)))+(((x1060)*(x1062)))+(((IkReal(-1.00000000000000))*(x1060)*(x1061)))+(((IkReal(-1.00000000000000))*(x1062)*(x1063)))+(((r22)*(x1065)))+(((r22)*(x1064))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst4)*(((((x1061)*(x1064)))+(((x1061)*(x1065)))+(((IkReal(-1.00000000000000))*(x1062)*(x1064)))+(((IkReal(-1.00000000000000))*(x1062)*(x1065)))+(((IkReal(-1.00000000000000))*(r22)*(x1063)))+(((r22)*(x1060)))))), ((gconst4)*(((((x1061)*(x1063)))+(((x1060)*(x1062)))+(((IkReal(-1.00000000000000))*(x1060)*(x1061)))+(((IkReal(-1.00000000000000))*(x1062)*(x1063)))+(((r22)*(x1065)))+(((r22)*(x1064)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1066=IKsin(j14);
IkReal x1067=IKcos(j14);
IkReal x1068=((cj17)*(sj18));
IkReal x1069=((IkReal(1.00000000000000))*(sj17));
IkReal x1070=((cj18)*(r20));
IkReal x1071=((sj13)*(sj17));
IkReal x1072=((cj18)*(r10));
IkReal x1073=((cj13)*(r02));
IkReal x1074=((cj13)*(r01));
IkReal x1075=((sj17)*(sj18));
IkReal x1076=((IkReal(1.00000000000000))*(cj17));
IkReal x1077=((cj15)*(x1066));
IkReal x1078=((sj15)*(x1067));
IkReal x1079=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1080=((sj15)*(x1066));
IkReal x1081=((cj13)*(cj18)*(r00));
IkReal x1082=((cj15)*(x1067));
IkReal x1083=((x1078)+(x1077));
evalcond[0]=((x1080)+(((IkReal(-1.00000000000000))*(r22)*(x1069)))+(((IkReal(-1.00000000000000))*(x1070)*(x1076)))+(((IkReal(-1.00000000000000))*(x1082)))+(((r21)*(x1068))));
evalcond[1]=((x1083)+(((cj17)*(r22)))+(((r21)*(x1075)))+(((IkReal(-1.00000000000000))*(x1069)*(x1070))));
evalcond[2]=((x1083)+(((r12)*(x1071)))+(((cj17)*(sj13)*(x1072)))+(((cj17)*(x1081)))+(((IkReal(-1.00000000000000))*(x1068)*(x1079)))+(((IkReal(-1.00000000000000))*(x1068)*(x1074)))+(((sj17)*(x1073))));
evalcond[3]=((((sj17)*(x1081)))+(x1082)+(((IkReal(-1.00000000000000))*(x1073)*(x1076)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1069)))+(((x1071)*(x1072)))+(((IkReal(-1.00000000000000))*(x1080)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1076)))+(((IkReal(-1.00000000000000))*(sj18)*(x1069)*(x1074))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1084=((IkReal(1.00000000000000))*(sj13));
IkReal x1085=((r10)*(sj18));
IkReal x1086=((IkReal(1.00000000000000))*(cj18));
IkReal x1087=((cj13)*(r11));
IkReal x1088=((r01)*(sj13));
IkReal x1089=((cj13)*(r12));
IkReal x1090=((cj18)*(r00));
IkReal x1091=((npy)*(sj18));
IkReal x1092=((sj17)*(sj18));
IkReal x1093=((IkReal(1.00000000000000))*(cj17));
IkReal x1094=((r00)*(sj18));
IkReal x1095=((IkReal(1.00000000000000))*(cj13));
IkReal x1096=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1086)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((cj17)*(x1091))));
evalcond[4]=((IkReal(-1.00000000000000))+(((sj13)*(x1094)))+(((cj18)*(x1088)))+(((IkReal(-1.00000000000000))*(x1085)*(x1095)))+(((IkReal(-1.00000000000000))*(x1086)*(x1087))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1086)))+(((sj17)*(x1091)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1084)))+(((IkReal(-1.00000000000000))*(x1094)*(x1095)))+(((IkReal(-1.00000000000000))*(x1084)*(x1085)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1086))));
evalcond[7]=((((sj17)*(x1089)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1084)))+(((IkReal(-1.00000000000000))*(cj17)*(x1084)*(x1090)))+(((cj17)*(x1096)))+(((IkReal(-1.00000000000000))*(sj18)*(x1087)*(x1093)))+(((cj17)*(sj18)*(x1088))));
evalcond[8]=((((sj17)*(x1096)))+(((IkReal(-1.00000000000000))*(x1089)*(x1093)))+(((x1088)*(x1092)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(sj17)*(x1084)*(x1090)))+(((IkReal(-1.00000000000000))*(x1087)*(x1092))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1097=((r21)*(sj18));
IkReal x1098=((cj15)*(cj17));
IkReal x1099=((sj15)*(sj17));
IkReal x1100=((cj15)*(sj17));
IkReal x1101=((cj17)*(sj15));
IkReal x1102=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst5)*(((((cj18)*(r20)*(x1101)))+(((x1097)*(x1100)))+(((r22)*(x1098)))+(((r22)*(x1099)))+(((IkReal(-1.00000000000000))*(x1100)*(x1102)))+(((IkReal(-1.00000000000000))*(x1097)*(x1101))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(x1098)*(x1102)))+(((IkReal(-1.00000000000000))*(x1099)*(x1102)))+(((r22)*(x1101)))+(((IkReal(-1.00000000000000))*(r22)*(x1100)))+(((x1097)*(x1098)))+(((x1097)*(x1099))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst5)*(((((cj18)*(r20)*(x1101)))+(((x1097)*(x1100)))+(((r22)*(x1098)))+(((r22)*(x1099)))+(((IkReal(-1.00000000000000))*(x1100)*(x1102)))+(((IkReal(-1.00000000000000))*(x1097)*(x1101)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(x1098)*(x1102)))+(((IkReal(-1.00000000000000))*(x1099)*(x1102)))+(((r22)*(x1101)))+(((IkReal(-1.00000000000000))*(r22)*(x1100)))+(((x1097)*(x1098)))+(((x1097)*(x1099)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1103=IKsin(j14);
IkReal x1104=IKcos(j14);
IkReal x1105=((cj17)*(sj18));
IkReal x1106=((IkReal(1.00000000000000))*(sj17));
IkReal x1107=((cj18)*(r20));
IkReal x1108=((sj13)*(sj17));
IkReal x1109=((cj18)*(r10));
IkReal x1110=((cj13)*(r02));
IkReal x1111=((cj13)*(r01));
IkReal x1112=((sj17)*(sj18));
IkReal x1113=((IkReal(1.00000000000000))*(cj17));
IkReal x1114=((sj15)*(x1103));
IkReal x1115=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1116=((sj15)*(x1104));
IkReal x1117=((cj15)*(x1103));
IkReal x1118=((cj13)*(cj18)*(r00));
IkReal x1119=((IkReal(1.00000000000000))*(cj15)*(x1104));
evalcond[0]=((x1114)+(((IkReal(-1.00000000000000))*(r22)*(x1106)))+(((IkReal(-1.00000000000000))*(x1107)*(x1113)))+(((r21)*(x1105)))+(((IkReal(-1.00000000000000))*(x1119))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1117)))+(((IkReal(-1.00000000000000))*(x1116)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x1106)*(x1107)))+(((r21)*(x1112))));
evalcond[2]=((x1117)+(x1116)+(((cj17)*(sj13)*(x1109)))+(((IkReal(-1.00000000000000))*(x1105)*(x1111)))+(((cj17)*(x1118)))+(((sj17)*(x1110)))+(((r12)*(x1108)))+(((IkReal(-1.00000000000000))*(x1105)*(x1115))));
evalcond[3]=((((x1108)*(x1109)))+(x1114)+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1113)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1106)))+(((sj17)*(x1118)))+(((IkReal(-1.00000000000000))*(x1110)*(x1113)))+(((IkReal(-1.00000000000000))*(x1119)))+(((IkReal(-1.00000000000000))*(sj18)*(x1106)*(x1111))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1120=((sj15)*(sj16));
IkReal x1121=((r22)*(sj17));
IkReal x1122=((cj18)*(r21));
IkReal x1123=((r20)*(sj18));
IkReal x1124=((cj15)*(sj16));
IkReal x1125=((cj17)*(r21)*(sj18));
IkReal x1126=((cj17)*(cj18)*(r20));
if( IKabs(((gconst3)*(((((x1120)*(x1121)))+(((x1120)*(x1126)))+(((cj15)*(x1122)))+(((cj15)*(x1123)))+(((IkReal(-1.00000000000000))*(x1120)*(x1125))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1124)*(x1126)))+(((x1124)*(x1125)))+(((sj15)*(x1122)))+(((sj15)*(x1123)))+(((IkReal(-1.00000000000000))*(x1121)*(x1124))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst3)*(((((x1120)*(x1121)))+(((x1120)*(x1126)))+(((cj15)*(x1122)))+(((cj15)*(x1123)))+(((IkReal(-1.00000000000000))*(x1120)*(x1125)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(x1124)*(x1126)))+(((x1124)*(x1125)))+(((sj15)*(x1122)))+(((sj15)*(x1123)))+(((IkReal(-1.00000000000000))*(x1121)*(x1124)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x1127=IKsin(j14);
IkReal x1128=IKcos(j14);
IkReal x1129=((IkReal(1.00000000000000))*(cj18));
IkReal x1130=((cj13)*(r01));
IkReal x1131=((IkReal(1.00000000000000))*(sj18));
IkReal x1132=((cj13)*(r00));
IkReal x1133=((sj13)*(sj17));
IkReal x1134=((cj18)*(r10));
IkReal x1135=((r21)*(sj18));
IkReal x1136=((IkReal(1.00000000000000))*(sj16));
IkReal x1137=((cj13)*(r02));
IkReal x1138=((IkReal(1.00000000000000))*(cj17));
IkReal x1139=((sj13)*(x1131));
IkReal x1140=((cj16)*(x1128));
IkReal x1141=((sj15)*(x1127));
IkReal x1142=((cj15)*(x1127));
IkReal x1143=((cj15)*(x1128));
IkReal x1144=((sj15)*(x1128));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1136)*(x1144)))+(((IkReal(-1.00000000000000))*(x1136)*(x1142)))+(((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj17)*(r20)*(x1129)))+(x1141)+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(x1143)))+(((cj17)*(x1135))));
evalcond[2]=((((sj15)*(x1140)))+(((sj17)*(x1135)))+(((cj17)*(r22)))+(((cj16)*(x1142)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1129))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r11)*(sj13)*(x1129)))+(((IkReal(-1.00000000000000))*(x1136)*(x1143)))+(((IkReal(-1.00000000000000))*(r10)*(x1139)))+(((IkReal(-1.00000000000000))*(x1131)*(x1132)))+(((IkReal(-1.00000000000000))*(x1129)*(x1130)))+(((sj16)*(x1141))));
evalcond[4]=((x1142)+(x1144)+(((cj17)*(cj18)*(x1132)))+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x1139)))+(((IkReal(-1.00000000000000))*(cj17)*(x1130)*(x1131)))+(((sj17)*(x1137)))+(((r12)*(x1133)))+(((cj17)*(sj13)*(x1134))));
evalcond[5]=((((cj18)*(sj17)*(x1132)))+(((IkReal(-1.00000000000000))*(sj17)*(x1130)*(x1131)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1138)))+(((IkReal(-1.00000000000000))*(cj16)*(x1141)))+(((IkReal(-1.00000000000000))*(r11)*(x1131)*(x1133)))+(((cj15)*(x1140)))+(((IkReal(-1.00000000000000))*(x1137)*(x1138)))+(((x1133)*(x1134))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1145=((sj15)*(sj16));
IkReal x1146=((r22)*(sj17));
IkReal x1147=((cj18)*(r21));
IkReal x1148=((r20)*(sj18));
IkReal x1149=((cj15)*(sj16));
IkReal x1150=((cj17)*(r21)*(sj18));
IkReal x1151=((cj17)*(cj18)*(r20));
if( IKabs(((gconst2)*(((((x1145)*(x1146)))+(((cj15)*(x1148)))+(((cj15)*(x1147)))+(((IkReal(-1.00000000000000))*(x1145)*(x1150)))+(((x1145)*(x1151))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((sj15)*(x1148)))+(((sj15)*(x1147)))+(((x1149)*(x1150)))+(((IkReal(-1.00000000000000))*(x1149)*(x1151)))+(((IkReal(-1.00000000000000))*(x1146)*(x1149))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst2)*(((((x1145)*(x1146)))+(((cj15)*(x1148)))+(((cj15)*(x1147)))+(((IkReal(-1.00000000000000))*(x1145)*(x1150)))+(((x1145)*(x1151)))))), ((gconst2)*(((((sj15)*(x1148)))+(((sj15)*(x1147)))+(((x1149)*(x1150)))+(((IkReal(-1.00000000000000))*(x1149)*(x1151)))+(((IkReal(-1.00000000000000))*(x1146)*(x1149)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[3];
IkReal x1152=IKsin(j14);
IkReal x1153=IKcos(j14);
IkReal x1154=((IkReal(1.00000000000000))*(sj17));
IkReal x1155=((cj18)*(r20));
IkReal x1156=((r21)*(sj18));
IkReal x1157=((IkReal(1.00000000000000))*(x1153));
IkReal x1158=((cj15)*(x1152));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj16)*(x1158)))+(((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(sj15)*(sj16)*(x1157))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj17)*(x1155)))+(((IkReal(-1.00000000000000))*(r22)*(x1154)))+(((IkReal(-1.00000000000000))*(cj15)*(x1157)))+(((cj17)*(x1156)))+(((sj15)*(x1152))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1154)*(x1155)))+(((cj16)*(sj15)*(x1153)))+(((cj17)*(r22)))+(((cj16)*(x1158)))+(((sj17)*(x1156))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1159=(sj18)*(sj18);
IkReal x1160=(cj18)*(cj18);
IkReal x1161=((r00)*(r11));
IkReal x1162=((r02)*(sj17));
IkReal x1163=((cj17)*(x1159));
IkReal x1164=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1165=((cj17)*(x1160));
IkReal x1166=((IkReal(1.00000000000000))*(r12)*(sj17));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x1163)*(x1164)))+(((IkReal(-1.00000000000000))*(r00)*(sj18)*(x1166)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x1166)))+(((IkReal(-1.00000000000000))*(x1164)*(x1165)))+(((cj18)*(r11)*(x1162)))+(((r10)*(sj18)*(x1162)))+(((x1161)*(x1163)))+(((x1161)*(x1165)))));
IkReal x1167=(sj18)*(sj18);
IkReal x1168=(cj18)*(cj18);
IkReal x1169=((r00)*(r11));
IkReal x1170=((r02)*(sj17));
IkReal x1171=((cj17)*(x1167));
IkReal x1172=((IkReal(1.00000000000000))*(r01)*(r10));
IkReal x1173=((cj17)*(x1168));
IkReal x1174=((IkReal(1.00000000000000))*(r12)*(sj17));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r00)*(sj18)*(x1174)))+(((IkReal(-1.00000000000000))*(cj18)*(r01)*(x1174)))+(((IkReal(-1.00000000000000))*(x1172)*(x1173)))+(((IkReal(-1.00000000000000))*(x1171)*(x1172)))+(((cj18)*(r11)*(x1170)))+(((x1169)*(x1173)))+(((x1169)*(x1171)))+(((r10)*(sj18)*(x1170))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1175=((cj16)*(sj17));
IkReal x1176=((cj16)*(cj17)*(cj18));
IkReal x1177=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst6)*(((((r10)*(x1176)))+(((IkReal(-1.00000000000000))*(r11)*(x1177)))+(((r12)*(x1175))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r02)*(x1175)))+(((r00)*(x1176)))+(((IkReal(-1.00000000000000))*(r01)*(x1177))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst6)*(((((r10)*(x1176)))+(((IkReal(-1.00000000000000))*(r11)*(x1177)))+(((r12)*(x1175)))))), ((gconst6)*(((((r02)*(x1175)))+(((r00)*(x1176)))+(((IkReal(-1.00000000000000))*(r01)*(x1177)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1178=IKsin(j13);
IkReal x1179=IKcos(j13);
IkReal x1180=((IkReal(1.00000000000000))*(sj17));
IkReal x1181=((r11)*(sj18));
IkReal x1182=((r10)*(sj17));
IkReal x1183=((cj17)*(r10));
IkReal x1184=((cj14)*(cj15));
IkReal x1185=((IkReal(1.00000000000000))*(r11));
IkReal x1186=((IkReal(1.00000000000000))*(r10));
IkReal x1187=((IkReal(1.00000000000000))*(r00));
IkReal x1188=((r12)*(sj17));
IkReal x1189=((sj14)*(sj15));
IkReal x1190=((cj18)*(x1178));
IkReal x1191=((cj18)*(x1179));
IkReal x1192=((sj18)*(x1178));
IkReal x1193=((r02)*(x1178));
IkReal x1194=((sj18)*(x1179));
IkReal x1195=((IkReal(1.00000000000000))*(cj17)*(x1179));
IkReal x1196=((IkReal(1.00000000000000))*(cj17)*(x1178));
evalcond[0]=((((r01)*(x1190)))+(((r00)*(x1192)))+(((IkReal(-1.00000000000000))*(x1186)*(x1194)))+(cj16)+(((IkReal(-1.00000000000000))*(x1185)*(x1191))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r01)*(x1191)))+(((IkReal(-1.00000000000000))*(x1186)*(x1192)))+(((sj16)*(x1189)))+(((IkReal(-1.00000000000000))*(x1187)*(x1194)))+(((IkReal(-1.00000000000000))*(sj16)*(x1184)))+(((IkReal(-1.00000000000000))*(x1185)*(x1190))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1181)*(x1195)))+(((IkReal(-1.00000000000000))*(cj17)*(x1187)*(x1190)))+(((x1183)*(x1191)))+(((x1179)*(x1188)))+(((cj17)*(r01)*(x1192)))+(((IkReal(-1.00000000000000))*(x1180)*(x1193))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1180)*(x1190)))+(((x1182)*(x1191)))+(sj16)+(((cj17)*(x1193)))+(((r01)*(sj17)*(x1192)))+(((IkReal(-1.00000000000000))*(x1179)*(x1180)*(x1181)))+(((IkReal(-1.00000000000000))*(r12)*(x1195))));
evalcond[4]=((((r02)*(sj17)*(x1179)))+(((cj15)*(sj14)))+(((IkReal(-1.00000000000000))*(x1181)*(x1196)))+(((x1178)*(x1188)))+(((IkReal(-1.00000000000000))*(cj17)*(r01)*(x1194)))+(((cj14)*(sj15)))+(((x1183)*(x1190)))+(((cj17)*(r00)*(x1191))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj16)*(x1189)))+(((x1182)*(x1190)))+(((r00)*(sj17)*(x1191)))+(((IkReal(-1.00000000000000))*(r01)*(x1180)*(x1194)))+(((cj16)*(x1184)))+(((IkReal(-1.00000000000000))*(r02)*(x1195)))+(((IkReal(-1.00000000000000))*(x1178)*(x1180)*(x1181)))+(((IkReal(-1.00000000000000))*(r12)*(x1196))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1197=((cj16)*(sj17));
IkReal x1198=((cj16)*(cj17)*(cj18));
IkReal x1199=((IkReal(1.00000000000000))*(cj16)*(cj17)*(sj18));
if( IKabs(((gconst0)*(((((r10)*(x1198)))+(((r12)*(x1197)))+(((IkReal(-1.00000000000000))*(r11)*(x1199))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r00)*(x1198)))+(((r02)*(x1197)))+(((IkReal(-1.00000000000000))*(r01)*(x1199))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst0)*(((((r10)*(x1198)))+(((r12)*(x1197)))+(((IkReal(-1.00000000000000))*(r11)*(x1199)))))), ((gconst0)*(((((r00)*(x1198)))+(((r02)*(x1197)))+(((IkReal(-1.00000000000000))*(r01)*(x1199)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[3];
IkReal x1200=IKsin(j13);
IkReal x1201=IKcos(j13);
IkReal x1202=((IkReal(1.00000000000000))*(sj17));
IkReal x1203=((IkReal(1.00000000000000))*(cj17));
IkReal x1204=((r00)*(x1200));
IkReal x1205=((r02)*(x1200));
IkReal x1206=((r01)*(x1200));
IkReal x1207=((r10)*(x1201));
IkReal x1208=((r12)*(x1201));
IkReal x1209=((r11)*(sj18)*(x1201));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1201)))+(((sj18)*(x1204)))+(cj16)+(((cj18)*(x1206)))+(((IkReal(-1.00000000000000))*(sj18)*(x1207))));
evalcond[1]=((((sj17)*(x1208)))+(((IkReal(-1.00000000000000))*(x1202)*(x1205)))+(((IkReal(-1.00000000000000))*(x1203)*(x1209)))+(((IkReal(-1.00000000000000))*(cj18)*(x1203)*(x1204)))+(((cj17)*(sj18)*(x1206)))+(((cj17)*(cj18)*(x1207))));
evalcond[2]=((((cj18)*(sj17)*(x1207)))+(((IkReal(-1.00000000000000))*(x1202)*(x1209)))+(sj16)+(((IkReal(-1.00000000000000))*(x1203)*(x1208)))+(((sj17)*(sj18)*(x1206)))+(((cj17)*(x1205)))+(((IkReal(-1.00000000000000))*(cj18)*(x1202)*(x1204))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=sj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj16;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1210=((IkReal(1.00000000000000))*(cj18));
IkReal x1211=((cj13)*(r11));
IkReal x1212=((r01)*(sj13));
IkReal x1213=((cj13)*(r12));
IkReal x1214=((sj13)*(sj17));
IkReal x1215=((sj17)*(sj18));
IkReal x1216=((IkReal(1.00000000000000))*(cj17));
IkReal x1217=((cj18)*(r10));
IkReal x1218=((IkReal(1.00000000000000))*(cj13));
IkReal x1219=((cj17)*(sj13));
IkReal x1220=((cj13)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((cj18)*(x1212)))+(((IkReal(-1.00000000000000))*(x1210)*(x1211)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1218)))+(((r00)*(sj13)*(sj18))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1210)))+(((cj17)*(r22)))+(((r21)*(x1215))));
evalcond[3]=((IkReal(-0.0950000000000000))+(((npy)*(x1215)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1210)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
evalcond[4]=((((cj17)*(sj18)*(x1212)))+(((cj13)*(cj17)*(x1217)))+(((IkReal(-1.00000000000000))*(r00)*(x1210)*(x1219)))+(((IkReal(-1.00000000000000))*(r02)*(x1214)))+(((sj17)*(x1213)))+(((IkReal(-1.00000000000000))*(sj18)*(x1211)*(x1216))));
evalcond[5]=((IkReal(1.00000000000000))+(((x1212)*(x1215)))+(((x1217)*(x1220)))+(((IkReal(-1.00000000000000))*(x1211)*(x1215)))+(((r02)*(x1219)))+(((IkReal(-1.00000000000000))*(r00)*(x1210)*(x1214)))+(((IkReal(-1.00000000000000))*(x1213)*(x1216))));
evalcond[6]=((((x1214)*(x1217)))+(((IkReal(-1.00000000000000))*(r11)*(sj18)*(x1214)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1216)))+(((IkReal(-1.00000000000000))*(r01)*(x1215)*(x1218)))+(((cj18)*(r00)*(x1220)))+(((IkReal(-1.00000000000000))*(cj13)*(r02)*(x1216))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1221=((IkReal(4.00000000000000))*(npx));
IkReal x1222=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(x1222)))+(((IkReal(-1.00000000000000))*(sj18)*(x1221))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1221)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1222))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(x1222)))+(((IkReal(-1.00000000000000))*(sj18)*(x1221)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1221)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1222)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(cj18)*(x1222)))+(((IkReal(-1.00000000000000))*(sj18)*(x1221)))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1221)))+(((IkReal(-0.360000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1222)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(-0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1223=((cj15)*(cj17));
IkReal x1224=((r21)*(sj18));
IkReal x1225=((cj18)*(r20));
IkReal x1226=((r20)*(sj18));
IkReal x1227=((cj18)*(r21));
IkReal x1228=((r22)*(sj17));
IkReal x1229=((cj17)*(sj15));
if( IKabs(((gconst18)*(((((cj15)*(x1227)))+(((cj15)*(x1226)))+(((sj15)*(x1228)))+(((x1225)*(x1229)))+(((IkReal(-1.00000000000000))*(x1224)*(x1229))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*(((((IkReal(-1.00000000000000))*(x1223)*(x1225)))+(((x1223)*(x1224)))+(((IkReal(-1.00000000000000))*(cj15)*(x1228)))+(((sj15)*(x1227)))+(((sj15)*(x1226))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst18)*(((((cj15)*(x1227)))+(((cj15)*(x1226)))+(((sj15)*(x1228)))+(((x1225)*(x1229)))+(((IkReal(-1.00000000000000))*(x1224)*(x1229)))))), ((gconst18)*(((((IkReal(-1.00000000000000))*(x1223)*(x1225)))+(((x1223)*(x1224)))+(((IkReal(-1.00000000000000))*(cj15)*(x1228)))+(((sj15)*(x1227)))+(((sj15)*(x1226)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1230=IKsin(j14);
IkReal x1231=IKcos(j14);
IkReal x1232=((IkReal(1.00000000000000))*(cj15));
IkReal x1233=((IkReal(1.00000000000000))*(sj13));
IkReal x1234=((cj17)*(cj18));
IkReal x1235=((cj17)*(sj18));
IkReal x1236=((cj13)*(r00));
IkReal x1237=((sj15)*(x1230));
IkReal x1238=((IkReal(1.00000000000000))*(cj13)*(r01));
IkReal x1239=((sj15)*(x1231));
IkReal x1240=((x1231)*(x1232));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1239)))+(((IkReal(-1.00000000000000))*(x1230)*(x1232)))+(((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[1]=((x1237)+(((IkReal(-1.00000000000000))*(r20)*(x1234)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((IkReal(-1.00000000000000))*(x1240)))+(((r21)*(x1235))));
evalcond[2]=((x1237)+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1233)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1233)))+(((IkReal(-1.00000000000000))*(cj18)*(x1238)))+(((IkReal(-1.00000000000000))*(x1240)))+(((IkReal(-1.00000000000000))*(sj18)*(x1236))));
evalcond[3]=((x1239)+(((x1234)*(x1236)))+(((r12)*(sj13)*(sj17)))+(((cj15)*(x1230)))+(((IkReal(-1.00000000000000))*(r11)*(x1233)*(x1235)))+(((cj13)*(r02)*(sj17)))+(((IkReal(-1.00000000000000))*(x1235)*(x1238)))+(((r10)*(sj13)*(x1234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1241=((IkReal(1.00000000000000))*(cj18));
IkReal x1242=((cj13)*(r11));
IkReal x1243=((r01)*(sj13));
IkReal x1244=((cj13)*(r12));
IkReal x1245=((sj13)*(sj17));
IkReal x1246=((sj17)*(sj18));
IkReal x1247=((IkReal(1.00000000000000))*(cj17));
IkReal x1248=((cj18)*(r10));
IkReal x1249=((IkReal(1.00000000000000))*(cj13));
IkReal x1250=((cj17)*(sj13));
IkReal x1251=((cj13)*(sj17));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((((cj18)*(x1243)))+(((IkReal(-1.00000000000000))*(r10)*(sj18)*(x1249)))+(((IkReal(-1.00000000000000))*(x1241)*(x1242)))+(((r00)*(sj13)*(sj18))));
evalcond[2]=((((cj17)*(r22)))+(((r21)*(x1246)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1241))));
evalcond[3]=((IkReal(0.0950000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1241)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((npy)*(x1246))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj18)*(x1242)*(x1247)))+(((IkReal(-1.00000000000000))*(r00)*(x1241)*(x1250)))+(((cj17)*(sj18)*(x1243)))+(((sj17)*(x1244)))+(((cj13)*(cj17)*(x1248)))+(((IkReal(-1.00000000000000))*(r02)*(x1245))));
evalcond[5]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1244)*(x1247)))+(((r02)*(x1250)))+(((IkReal(-1.00000000000000))*(x1242)*(x1246)))+(((x1243)*(x1246)))+(((x1248)*(x1251)))+(((IkReal(-1.00000000000000))*(r00)*(x1241)*(x1245))));
evalcond[6]=((((IkReal(-1.00000000000000))*(r11)*(sj18)*(x1245)))+(((cj18)*(r00)*(x1251)))+(((IkReal(-1.00000000000000))*(cj13)*(r02)*(x1247)))+(((IkReal(-1.00000000000000))*(r01)*(x1246)*(x1249)))+(((x1245)*(x1248)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1247))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1252=((IkReal(4.00000000000000))*(npx));
IkReal x1253=((IkReal(4.00000000000000))*(npy));
if( IKabs(((IkReal(0.120000000000000))+(((sj18)*(x1252)))+(((cj18)*(x1253))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x1252)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1253)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((sj18)*(x1252)))+(((cj18)*(x1253)))))+IKsqr(((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x1252)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1253)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((sj18)*(x1252)))+(((cj18)*(x1253)))), ((IkReal(-0.940000000000000))+(((cj17)*(cj18)*(x1252)))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1253)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
evalcond[0]=((IkReal(0.0300000000000000))+(((cj18)*(npy)))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((npx)*(sj18))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((IkReal(-1.00000000000000))*(cj17)*(cj18)*(npx)))+(((cj17)*(npy)*(sj18)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst19;
gconst19=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1254=((cj15)*(r21));
IkReal x1255=((cj17)*(sj18));
IkReal x1256=((r22)*(sj17));
IkReal x1257=((IkReal(1.00000000000000))*(sj15));
IkReal x1258=((cj15)*(r20));
IkReal x1259=((r21)*(sj15));
IkReal x1260=((cj17)*(cj18));
if( IKabs(((gconst19)*(((((IkReal(-1.00000000000000))*(x1256)*(x1257)))+(((IkReal(-1.00000000000000))*(r20)*(x1257)*(x1260)))+(((x1255)*(x1259)))+(((sj18)*(x1258)))+(((cj18)*(x1254))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst19)*(((((x1258)*(x1260)))+(((r20)*(sj15)*(sj18)))+(((IkReal(-1.00000000000000))*(x1254)*(x1255)))+(((cj18)*(x1259)))+(((cj15)*(x1256))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst19)*(((((IkReal(-1.00000000000000))*(x1256)*(x1257)))+(((IkReal(-1.00000000000000))*(r20)*(x1257)*(x1260)))+(((x1255)*(x1259)))+(((sj18)*(x1258)))+(((cj18)*(x1254)))))), ((gconst19)*(((((x1258)*(x1260)))+(((r20)*(sj15)*(sj18)))+(((IkReal(-1.00000000000000))*(x1254)*(x1255)))+(((cj18)*(x1259)))+(((cj15)*(x1256)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1261=IKsin(j14);
IkReal x1262=IKcos(j14);
IkReal x1263=((IkReal(1.00000000000000))*(cj17));
IkReal x1264=((r11)*(sj13));
IkReal x1265=((IkReal(1.00000000000000))*(cj18));
IkReal x1266=((cj13)*(r01));
IkReal x1267=((IkReal(1.00000000000000))*(sj18));
IkReal x1268=((cj13)*(r00));
IkReal x1269=((r10)*(sj13));
IkReal x1270=((cj17)*(cj18));
IkReal x1271=((cj15)*(x1261));
IkReal x1272=((sj15)*(x1262));
IkReal x1273=((cj15)*(x1262));
IkReal x1274=((sj15)*(x1261));
IkReal x1275=((x1271)+(x1272));
evalcond[0]=((x1275)+(((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[1]=((x1274)+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(((cj17)*(r21)*(sj18)))+(((IkReal(-1.00000000000000))*(cj18)*(r20)*(x1263)))+(((IkReal(-1.00000000000000))*(x1273))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1264)*(x1265)))+(x1273)+(((IkReal(-1.00000000000000))*(x1267)*(x1268)))+(((IkReal(-1.00000000000000))*(x1267)*(x1269)))+(((IkReal(-1.00000000000000))*(x1265)*(x1266)))+(((IkReal(-1.00000000000000))*(x1274))));
evalcond[3]=((((x1269)*(x1270)))+(x1275)+(((r12)*(sj13)*(sj17)))+(((IkReal(-1.00000000000000))*(sj18)*(x1263)*(x1264)))+(((IkReal(-1.00000000000000))*(sj18)*(x1263)*(x1266)))+(((cj13)*(r02)*(sj17)))+(((x1268)*(x1270))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1276=((IkReal(1.00000000000000))*(sj13));
IkReal x1277=((r10)*(sj18));
IkReal x1278=((r01)*(sj13));
IkReal x1279=((cj13)*(r12));
IkReal x1280=((cj18)*(r00));
IkReal x1281=((sj17)*(sj18));
IkReal x1282=((IkReal(1.00000000000000))*(cj17));
IkReal x1283=((r00)*(sj18));
IkReal x1284=((IkReal(1.00000000000000))*(cj13));
IkReal x1285=((cj18)*(x1284));
IkReal x1286=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1277)*(x1284)))+(((sj13)*(x1283)))+(((cj18)*(x1278)))+(((IkReal(-1.00000000000000))*(r11)*(x1285))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((IkReal(-1.00000000000000))*(r01)*(x1285)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1276)))+(((IkReal(-1.00000000000000))*(x1283)*(x1284))));
evalcond[5]=((((cj17)*(x1286)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1276)))+(((cj17)*(sj18)*(x1278)))+(((IkReal(-1.00000000000000))*(cj17)*(x1276)*(x1280)))+(((IkReal(-1.00000000000000))*(cj13)*(r11)*(sj18)*(x1282)))+(((sj17)*(x1279))));
evalcond[6]=((((x1278)*(x1281)))+(((IkReal(-1.00000000000000))*(sj17)*(x1276)*(x1280)))+(((IkReal(-1.00000000000000))*(r11)*(x1281)*(x1284)))+(((cj17)*(r02)*(sj13)))+(((sj17)*(x1286)))+(((IkReal(-1.00000000000000))*(x1279)*(x1282))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1287=((IkReal(4.00000000000000))*(npz));
IkReal x1288=((IkReal(4.00000000000000))*(sj17));
IkReal x1289=((npy)*(sj18));
IkReal x1290=((cj18)*(npx));
IkReal x1291=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(x1288)*(x1290)))+(((cj17)*(x1287)))+(((IkReal(0.360000000000000))*(sj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x1289)*(x1291)))+(((x1290)*(x1291)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x1287))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(x1288)*(x1290)))+(((cj17)*(x1287)))+(((IkReal(0.360000000000000))*(sj17)))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x1289)*(x1291)))+(((x1290)*(x1291)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x1287)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(x1288)*(x1290)))+(((cj17)*(x1287)))+(((IkReal(0.360000000000000))*(sj17)))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x1289)*(x1291)))+(((x1290)*(x1291)))+(((IkReal(-0.360000000000000))*(cj17)))+(((sj17)*(x1287)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x1292=((npy)*(sj18));
IkReal x1293=((IkReal(1.00000000000000))*(sj17));
IkReal x1294=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x1293)))+(((IkReal(-1.00000000000000))*(cj17)*(x1294)))+(((cj17)*(x1292)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[1]=((IkReal(0.0300000000000000))+(((sj17)*(x1292)))+(((IkReal(-0.250000000000000))*(IKsin(j15))))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst20;
gconst20=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1295=((r21)*(sj18));
IkReal x1296=((IkReal(1.00000000000000))*(cj15));
IkReal x1297=((sj15)*(sj17));
IkReal x1298=((cj15)*(sj17));
IkReal x1299=((cj18)*(r20));
IkReal x1300=((cj17)*(sj15));
IkReal x1301=((cj15)*(cj17));
if( IKabs(((gconst20)*(((((x1295)*(x1298)))+(((x1295)*(x1300)))+(((IkReal(-1.00000000000000))*(x1299)*(x1300)))+(((r22)*(x1301)))+(((IkReal(-1.00000000000000))*(sj17)*(x1296)*(x1299)))+(((IkReal(-1.00000000000000))*(r22)*(x1297))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst20)*(((((x1299)*(x1301)))+(((x1295)*(x1297)))+(((IkReal(-1.00000000000000))*(cj17)*(x1295)*(x1296)))+(((IkReal(-1.00000000000000))*(x1297)*(x1299)))+(((r22)*(x1300)))+(((r22)*(x1298))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst20)*(((((x1295)*(x1298)))+(((x1295)*(x1300)))+(((IkReal(-1.00000000000000))*(x1299)*(x1300)))+(((r22)*(x1301)))+(((IkReal(-1.00000000000000))*(sj17)*(x1296)*(x1299)))+(((IkReal(-1.00000000000000))*(r22)*(x1297)))))), ((gconst20)*(((((x1299)*(x1301)))+(((x1295)*(x1297)))+(((IkReal(-1.00000000000000))*(cj17)*(x1295)*(x1296)))+(((IkReal(-1.00000000000000))*(x1297)*(x1299)))+(((r22)*(x1300)))+(((r22)*(x1298)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1302=IKsin(j14);
IkReal x1303=IKcos(j14);
IkReal x1304=((cj17)*(sj18));
IkReal x1305=((IkReal(1.00000000000000))*(sj17));
IkReal x1306=((cj18)*(r20));
IkReal x1307=((sj13)*(sj17));
IkReal x1308=((cj18)*(r10));
IkReal x1309=((cj13)*(r02));
IkReal x1310=((cj13)*(r01));
IkReal x1311=((sj17)*(sj18));
IkReal x1312=((IkReal(1.00000000000000))*(cj17));
IkReal x1313=((cj15)*(x1302));
IkReal x1314=((sj15)*(x1303));
IkReal x1315=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1316=((sj15)*(x1302));
IkReal x1317=((cj13)*(cj18)*(r00));
IkReal x1318=((cj15)*(x1303));
IkReal x1319=((x1314)+(x1313));
evalcond[0]=((x1316)+(((IkReal(-1.00000000000000))*(x1306)*(x1312)))+(((IkReal(-1.00000000000000))*(r22)*(x1305)))+(((IkReal(-1.00000000000000))*(x1318)))+(((r21)*(x1304))));
evalcond[1]=((x1319)+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x1305)*(x1306)))+(((r21)*(x1311))));
evalcond[2]=((x1319)+(((IkReal(-1.00000000000000))*(x1304)*(x1315)))+(((cj17)*(sj13)*(x1308)))+(((IkReal(-1.00000000000000))*(x1304)*(x1310)))+(((r12)*(x1307)))+(((sj17)*(x1309)))+(((cj17)*(x1317))));
evalcond[3]=((x1318)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1305)))+(((IkReal(-1.00000000000000))*(x1316)))+(((x1307)*(x1308)))+(((IkReal(-1.00000000000000))*(sj18)*(x1305)*(x1310)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1312)))+(((sj17)*(x1317)))+(((IkReal(-1.00000000000000))*(x1309)*(x1312))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x1320=((IkReal(1.00000000000000))*(sj13));
IkReal x1321=((r10)*(sj18));
IkReal x1322=((r01)*(sj13));
IkReal x1323=((cj13)*(r12));
IkReal x1324=((cj18)*(r00));
IkReal x1325=((sj17)*(sj18));
IkReal x1326=((IkReal(1.00000000000000))*(cj17));
IkReal x1327=((r00)*(sj18));
IkReal x1328=((IkReal(1.00000000000000))*(cj13));
IkReal x1329=((cj18)*(x1328));
IkReal x1330=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(-1.00000000000000))+(((sj13)*(x1327)))+(((IkReal(-1.00000000000000))*(r11)*(x1329)))+(((IkReal(-1.00000000000000))*(x1321)*(x1328)))+(((cj18)*(x1322))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r01)*(x1329)))+(((IkReal(-1.00000000000000))*(x1327)*(x1328)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1320)))+(((IkReal(-1.00000000000000))*(x1320)*(x1321))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1320)))+(((IkReal(-1.00000000000000))*(cj17)*(x1320)*(x1324)))+(((cj17)*(x1330)))+(((cj17)*(sj18)*(x1322)))+(((IkReal(-1.00000000000000))*(cj13)*(r11)*(sj18)*(x1326)))+(((sj17)*(x1323))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1323)*(x1326)))+(((x1322)*(x1325)))+(((IkReal(-1.00000000000000))*(sj17)*(x1320)*(x1324)))+(((cj17)*(r02)*(sj13)))+(((sj17)*(x1330)))+(((IkReal(-1.00000000000000))*(r11)*(x1325)*(x1328))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1331=((IkReal(4.00000000000000))*(npz));
IkReal x1332=((IkReal(4.00000000000000))*(sj17));
IkReal x1333=((npy)*(sj18));
IkReal x1334=((cj18)*(npx));
IkReal x1335=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((IkReal(-1.00000000000000))*(cj17)*(x1331)))+(((x1332)*(x1334)))+(((IkReal(-0.360000000000000))*(sj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((sj17)*(x1331)))+(((IkReal(-1.00000000000000))*(x1333)*(x1335)))+(((IkReal(-0.360000000000000))*(cj17)))+(((x1334)*(x1335))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((IkReal(-1.00000000000000))*(cj17)*(x1331)))+(((x1332)*(x1334)))+(((IkReal(-0.360000000000000))*(sj17)))))+IKsqr(((IkReal(-0.940000000000000))+(((sj17)*(x1331)))+(((IkReal(-1.00000000000000))*(x1333)*(x1335)))+(((IkReal(-0.360000000000000))*(cj17)))+(((x1334)*(x1335)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((IkReal(0.120000000000000))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((IkReal(-1.00000000000000))*(cj17)*(x1331)))+(((x1332)*(x1334)))+(((IkReal(-0.360000000000000))*(sj17)))), ((IkReal(-0.940000000000000))+(((sj17)*(x1331)))+(((IkReal(-1.00000000000000))*(x1333)*(x1335)))+(((IkReal(-0.360000000000000))*(cj17)))+(((x1334)*(x1335)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[2];
IkReal x1336=((npy)*(sj18));
IkReal x1337=((IkReal(1.00000000000000))*(sj17));
IkReal x1338=((cj18)*(npx));
evalcond[0]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x1336)))+(((IkReal(-1.00000000000000))*(cj17)*(x1338)))+(((IkReal(-1.00000000000000))*(npz)*(x1337)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[1]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(x1337)*(x1338)))+(((IkReal(0.250000000000000))*(IKsin(j15))))+(((sj17)*(x1336)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst21;
gconst21=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1339=((r21)*(sj18));
IkReal x1340=((cj15)*(cj17));
IkReal x1341=((sj15)*(sj17));
IkReal x1342=((cj15)*(sj17));
IkReal x1343=((cj17)*(sj15));
IkReal x1344=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(x1339)*(x1343)))+(((x1339)*(x1342)))+(((r22)*(x1340)))+(((r22)*(x1341)))+(((cj18)*(r20)*(x1343)))+(((IkReal(-1.00000000000000))*(x1342)*(x1344))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst21)*(((((IkReal(-1.00000000000000))*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(x1341)*(x1344)))+(((x1339)*(x1340)))+(((x1339)*(x1341)))+(((r22)*(x1343)))+(((IkReal(-1.00000000000000))*(r22)*(x1342))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst21)*(((((IkReal(-1.00000000000000))*(x1339)*(x1343)))+(((x1339)*(x1342)))+(((r22)*(x1340)))+(((r22)*(x1341)))+(((cj18)*(r20)*(x1343)))+(((IkReal(-1.00000000000000))*(x1342)*(x1344)))))), ((gconst21)*(((((IkReal(-1.00000000000000))*(x1340)*(x1344)))+(((IkReal(-1.00000000000000))*(x1341)*(x1344)))+(((x1339)*(x1340)))+(((x1339)*(x1341)))+(((r22)*(x1343)))+(((IkReal(-1.00000000000000))*(r22)*(x1342)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1345=IKsin(j14);
IkReal x1346=IKcos(j14);
IkReal x1347=((cj17)*(sj18));
IkReal x1348=((IkReal(1.00000000000000))*(sj17));
IkReal x1349=((cj18)*(r20));
IkReal x1350=((sj13)*(sj17));
IkReal x1351=((cj18)*(r10));
IkReal x1352=((cj13)*(r02));
IkReal x1353=((cj13)*(r01));
IkReal x1354=((sj17)*(sj18));
IkReal x1355=((IkReal(1.00000000000000))*(cj17));
IkReal x1356=((sj15)*(x1345));
IkReal x1357=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1358=((sj15)*(x1346));
IkReal x1359=((cj15)*(x1345));
IkReal x1360=((cj13)*(cj18)*(r00));
IkReal x1361=((IkReal(1.00000000000000))*(cj15)*(x1346));
evalcond[0]=((x1356)+(((IkReal(-1.00000000000000))*(r22)*(x1348)))+(((IkReal(-1.00000000000000))*(x1349)*(x1355)))+(((r21)*(x1347)))+(((IkReal(-1.00000000000000))*(x1361))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1358)))+(((IkReal(-1.00000000000000))*(x1359)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x1348)*(x1349)))+(((r21)*(x1354))));
evalcond[2]=((x1359)+(x1358)+(((cj17)*(x1360)))+(((sj17)*(x1352)))+(((cj17)*(sj13)*(x1351)))+(((IkReal(-1.00000000000000))*(x1347)*(x1357)))+(((IkReal(-1.00000000000000))*(x1347)*(x1353)))+(((r12)*(x1350))));
evalcond[3]=((x1356)+(((IkReal(-1.00000000000000))*(x1352)*(x1355)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1355)))+(((sj17)*(x1360)))+(((x1350)*(x1351)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1348)))+(((IkReal(-1.00000000000000))*(sj18)*(x1348)*(x1353)))+(((IkReal(-1.00000000000000))*(x1361))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1362=((IkReal(4.00000000000000))*(npz));
IkReal x1363=((IkReal(4.00000000000000))*(sj17));
IkReal x1364=((npy)*(sj18));
IkReal x1365=((cj18)*(npx));
IkReal x1366=((IkReal(4.00000000000000))*(cj17));
if( IKabs(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((cj17)*(x1362)))+(((x1363)*(x1364)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(x1363)*(x1365)))+(((IkReal(-0.380000000000000))*(sj16))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x1364)*(x1366)))+(((sj17)*(x1362)))+(((x1365)*(x1366)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((cj17)*(x1362)))+(((x1363)*(x1364)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(x1363)*(x1365)))+(((IkReal(-0.380000000000000))*(sj16)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x1364)*(x1366)))+(((sj17)*(x1362)))+(((x1365)*(x1366)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(cj16) != 0)?((IkReal)1/(cj16)):(IkReal)1.0e30))*(((((cj17)*(x1362)))+(((x1363)*(x1364)))+(((IkReal(0.360000000000000))*(sj17)))+(((IkReal(0.120000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(x1363)*(x1365)))+(((IkReal(-0.380000000000000))*(sj16)))))), ((IkReal(-0.940000000000000))+(((IkReal(-1.00000000000000))*(x1364)*(x1366)))+(((sj17)*(x1362)))+(((x1365)*(x1366)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x1367=IKsin(j15);
IkReal x1368=((npy)*(sj18));
IkReal x1369=((IkReal(1.00000000000000))*(sj17));
IkReal x1370=((cj18)*(npx));
IkReal x1371=((IkReal(0.250000000000000))*(x1367));
evalcond[0]=((((cj18)*(npy)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16)))+(((sj16)*(x1371))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((cj17)*(x1368)))+(((IkReal(-1.00000000000000))*(cj17)*(x1370)))+(((IkReal(-1.00000000000000))*(npz)*(x1369)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((sj17)*(x1368)))+(((IkReal(-1.00000000000000))*(cj16)*(x1371)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(x1369)*(x1370))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1372=((IkReal(1.00000000000000))*(sj13));
IkReal x1373=((r10)*(sj18));
IkReal x1374=((IkReal(1.00000000000000))*(cj18));
IkReal x1375=((cj13)*(r11));
IkReal x1376=((r01)*(sj13));
IkReal x1377=((cj13)*(r12));
IkReal x1378=((cj18)*(r00));
IkReal x1379=((npy)*(sj18));
IkReal x1380=((sj17)*(sj18));
IkReal x1381=((IkReal(1.00000000000000))*(cj17));
IkReal x1382=((r00)*(sj18));
IkReal x1383=((IkReal(1.00000000000000))*(cj13));
IkReal x1384=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1374)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((cj17)*(x1379))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1373)*(x1383)))+(((cj18)*(x1376)))+(((sj13)*(x1382)))+(((IkReal(-1.00000000000000))*(x1374)*(x1375))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1374)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x1379))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1382)*(x1383)))+(((IkReal(-1.00000000000000))*(x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1372)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1374))));
evalcond[7]=((((cj17)*(x1384)))+(((cj17)*(sj18)*(x1376)))+(((IkReal(-1.00000000000000))*(sj18)*(x1375)*(x1381)))+(((IkReal(-1.00000000000000))*(cj17)*(x1372)*(x1378)))+(((sj17)*(x1377)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1372))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1377)*(x1381)))+(((IkReal(-1.00000000000000))*(sj17)*(x1372)*(x1378)))+(((cj17)*(r02)*(sj13)))+(((sj17)*(x1384)))+(((x1376)*(x1380)))+(((IkReal(-1.00000000000000))*(x1375)*(x1380))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1385=((r21)*(sj18));
IkReal x1386=((IkReal(1.00000000000000))*(cj15));
IkReal x1387=((r22)*(sj17));
IkReal x1388=((sj15)*(sj17));
IkReal x1389=((cj18)*(r20));
IkReal x1390=((IkReal(1.00000000000000))*(sj15));
IkReal x1391=((cj17)*(sj15));
IkReal x1392=((cj15)*(cj17));
if( IKabs(((gconst16)*(((((cj15)*(sj17)*(x1385)))+(((IkReal(-1.00000000000000))*(cj17)*(x1389)*(x1390)))+(((IkReal(-1.00000000000000))*(sj17)*(x1386)*(x1389)))+(((x1385)*(x1391)))+(((r22)*(x1392)))+(((IkReal(-1.00000000000000))*(x1387)*(x1390))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1385)*(x1386)))+(((IkReal(-1.00000000000000))*(x1388)*(x1389)))+(((x1389)*(x1392)))+(((cj15)*(x1387)))+(((r22)*(x1391)))+(((x1385)*(x1388))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst16)*(((((cj15)*(sj17)*(x1385)))+(((IkReal(-1.00000000000000))*(cj17)*(x1389)*(x1390)))+(((IkReal(-1.00000000000000))*(sj17)*(x1386)*(x1389)))+(((x1385)*(x1391)))+(((r22)*(x1392)))+(((IkReal(-1.00000000000000))*(x1387)*(x1390)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1385)*(x1386)))+(((IkReal(-1.00000000000000))*(x1388)*(x1389)))+(((x1389)*(x1392)))+(((cj15)*(x1387)))+(((r22)*(x1391)))+(((x1385)*(x1388)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1393=IKsin(j14);
IkReal x1394=IKcos(j14);
IkReal x1395=((cj17)*(sj18));
IkReal x1396=((IkReal(1.00000000000000))*(sj17));
IkReal x1397=((cj18)*(r20));
IkReal x1398=((sj13)*(sj17));
IkReal x1399=((cj18)*(r10));
IkReal x1400=((cj13)*(r02));
IkReal x1401=((cj13)*(r01));
IkReal x1402=((sj17)*(sj18));
IkReal x1403=((IkReal(1.00000000000000))*(cj17));
IkReal x1404=((cj15)*(x1393));
IkReal x1405=((sj15)*(x1394));
IkReal x1406=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1407=((sj15)*(x1393));
IkReal x1408=((cj13)*(cj18)*(r00));
IkReal x1409=((cj15)*(x1394));
IkReal x1410=((x1405)+(x1404));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1409)))+(((r21)*(x1395)))+(x1407)+(((IkReal(-1.00000000000000))*(r22)*(x1396)))+(((IkReal(-1.00000000000000))*(x1397)*(x1403))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1396)*(x1397)))+(((cj17)*(r22)))+(((r21)*(x1402)))+(x1410));
evalcond[2]=((((sj17)*(x1400)))+(((IkReal(-1.00000000000000))*(x1395)*(x1401)))+(((cj17)*(sj13)*(x1399)))+(((cj17)*(x1408)))+(x1410)+(((r12)*(x1398)))+(((IkReal(-1.00000000000000))*(x1395)*(x1406))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1407)))+(((sj17)*(x1408)))+(((x1398)*(x1399)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1403)))+(((IkReal(-1.00000000000000))*(sj18)*(x1396)*(x1401)))+(x1409)+(((IkReal(-1.00000000000000))*(x1400)*(x1403)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1396))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1411=((IkReal(1.00000000000000))*(sj13));
IkReal x1412=((r10)*(sj18));
IkReal x1413=((IkReal(1.00000000000000))*(cj18));
IkReal x1414=((cj13)*(r11));
IkReal x1415=((r01)*(sj13));
IkReal x1416=((cj13)*(r12));
IkReal x1417=((cj18)*(r00));
IkReal x1418=((npy)*(sj18));
IkReal x1419=((sj17)*(sj18));
IkReal x1420=((IkReal(1.00000000000000))*(cj17));
IkReal x1421=((r00)*(sj18));
IkReal x1422=((IkReal(1.00000000000000))*(cj13));
IkReal x1423=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1413)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((cj17)*(x1418))));
evalcond[4]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1413)*(x1414)))+(((sj13)*(x1421)))+(((cj18)*(x1415)))+(((IkReal(-1.00000000000000))*(x1412)*(x1422))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((sj17)*(x1418)))+(((IkReal(0.0900000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1413)))+(((cj17)*(npz)))+(((IkReal(0.250000000000000))*(sj15))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1421)*(x1422)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1413)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1411)))+(((IkReal(-1.00000000000000))*(x1411)*(x1412))));
evalcond[7]=((((cj17)*(x1423)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1411)))+(((IkReal(-1.00000000000000))*(cj17)*(x1411)*(x1417)))+(((sj17)*(x1416)))+(((IkReal(-1.00000000000000))*(sj18)*(x1414)*(x1420)))+(((cj17)*(sj18)*(x1415))));
evalcond[8]=((((x1415)*(x1419)))+(((IkReal(-1.00000000000000))*(x1414)*(x1419)))+(((IkReal(-1.00000000000000))*(x1416)*(x1420)))+(((IkReal(-1.00000000000000))*(sj17)*(x1411)*(x1417)))+(((cj17)*(r02)*(sj13)))+(((sj17)*(x1423))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1424=((r21)*(sj18));
IkReal x1425=((cj15)*(cj17));
IkReal x1426=((sj15)*(sj17));
IkReal x1427=((cj15)*(sj17));
IkReal x1428=((cj17)*(sj15));
IkReal x1429=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst17)*(((((x1424)*(x1427)))+(((IkReal(-1.00000000000000))*(x1427)*(x1429)))+(((r22)*(x1425)))+(((r22)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1428)))+(((cj18)*(r20)*(x1428))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((x1424)*(x1425)))+(((x1424)*(x1426)))+(((IkReal(-1.00000000000000))*(x1426)*(x1429)))+(((IkReal(-1.00000000000000))*(x1425)*(x1429)))+(((r22)*(x1428)))+(((IkReal(-1.00000000000000))*(r22)*(x1427))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst17)*(((((x1424)*(x1427)))+(((IkReal(-1.00000000000000))*(x1427)*(x1429)))+(((r22)*(x1425)))+(((r22)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1428)))+(((cj18)*(r20)*(x1428)))))), ((gconst17)*(((((x1424)*(x1425)))+(((x1424)*(x1426)))+(((IkReal(-1.00000000000000))*(x1426)*(x1429)))+(((IkReal(-1.00000000000000))*(x1425)*(x1429)))+(((r22)*(x1428)))+(((IkReal(-1.00000000000000))*(r22)*(x1427)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1430=IKsin(j14);
IkReal x1431=IKcos(j14);
IkReal x1432=((cj17)*(sj18));
IkReal x1433=((IkReal(1.00000000000000))*(sj17));
IkReal x1434=((cj18)*(r20));
IkReal x1435=((sj13)*(sj17));
IkReal x1436=((cj18)*(r10));
IkReal x1437=((cj13)*(r02));
IkReal x1438=((cj13)*(r01));
IkReal x1439=((sj17)*(sj18));
IkReal x1440=((IkReal(1.00000000000000))*(cj17));
IkReal x1441=((sj15)*(x1430));
IkReal x1442=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1443=((sj15)*(x1431));
IkReal x1444=((cj15)*(x1430));
IkReal x1445=((cj13)*(cj18)*(r00));
IkReal x1446=((IkReal(1.00000000000000))*(cj15)*(x1431));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1433)))+(((IkReal(-1.00000000000000))*(x1434)*(x1440)))+(((r21)*(x1432)))+(x1441)+(((IkReal(-1.00000000000000))*(x1446))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1444)))+(((IkReal(-1.00000000000000))*(x1443)))+(((r21)*(x1439)))+(((cj17)*(r22)))+(((IkReal(-1.00000000000000))*(x1433)*(x1434))));
evalcond[2]=((((sj17)*(x1437)))+(((r12)*(x1435)))+(((cj17)*(x1445)))+(((cj17)*(sj13)*(x1436)))+(((IkReal(-1.00000000000000))*(x1432)*(x1442)))+(((IkReal(-1.00000000000000))*(x1432)*(x1438)))+(x1444)+(x1443));
evalcond[3]=((((x1435)*(x1436)))+(((IkReal(-1.00000000000000))*(x1437)*(x1440)))+(x1441)+(((IkReal(-1.00000000000000))*(x1446)))+(((IkReal(-1.00000000000000))*(sj18)*(x1433)*(x1438)))+(((sj17)*(x1445)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1433)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1440))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1447=((sj15)*(sj16));
IkReal x1448=((r22)*(sj17));
IkReal x1449=((cj18)*(r21));
IkReal x1450=((r20)*(sj18));
IkReal x1451=((cj15)*(sj16));
IkReal x1452=((cj17)*(r21)*(sj18));
IkReal x1453=((cj17)*(cj18)*(r20));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x1447)*(x1452)))+(((cj15)*(x1449)))+(((x1447)*(x1453)))+(((cj15)*(x1450)))+(((x1447)*(x1448))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((sj15)*(x1450)))+(((IkReal(-1.00000000000000))*(x1448)*(x1451)))+(((IkReal(-1.00000000000000))*(x1451)*(x1453)))+(((sj15)*(x1449)))+(((x1451)*(x1452))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(x1447)*(x1452)))+(((cj15)*(x1449)))+(((x1447)*(x1453)))+(((cj15)*(x1450)))+(((x1447)*(x1448)))))), ((gconst15)*(((((sj15)*(x1450)))+(((IkReal(-1.00000000000000))*(x1448)*(x1451)))+(((IkReal(-1.00000000000000))*(x1451)*(x1453)))+(((sj15)*(x1449)))+(((x1451)*(x1452)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x1454=IKsin(j14);
IkReal x1455=IKcos(j14);
IkReal x1456=((IkReal(1.00000000000000))*(cj18));
IkReal x1457=((cj13)*(r01));
IkReal x1458=((IkReal(1.00000000000000))*(sj18));
IkReal x1459=((cj13)*(r00));
IkReal x1460=((sj13)*(sj17));
IkReal x1461=((cj18)*(r10));
IkReal x1462=((r21)*(sj18));
IkReal x1463=((IkReal(1.00000000000000))*(sj16));
IkReal x1464=((cj13)*(r02));
IkReal x1465=((IkReal(1.00000000000000))*(cj17));
IkReal x1466=((sj13)*(x1458));
IkReal x1467=((cj16)*(x1455));
IkReal x1468=((sj15)*(x1454));
IkReal x1469=((cj15)*(x1454));
IkReal x1470=((cj15)*(x1455));
IkReal x1471=((sj15)*(x1455));
evalcond[0]=((((r20)*(sj18)))+(((cj18)*(r21)))+(((IkReal(-1.00000000000000))*(x1463)*(x1469)))+(((IkReal(-1.00000000000000))*(x1463)*(x1471))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1470)))+(((IkReal(-1.00000000000000))*(cj17)*(r20)*(x1456)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x1468)+(((cj17)*(x1462))));
evalcond[2]=((((sj15)*(x1467)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1456)))+(((sj17)*(x1462)))+(((cj17)*(r22)))+(((cj16)*(x1469))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1458)*(x1459)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(x1456)))+(((sj16)*(x1468)))+(((IkReal(-1.00000000000000))*(x1456)*(x1457)))+(((IkReal(-1.00000000000000))*(r10)*(x1466)))+(((IkReal(-1.00000000000000))*(x1463)*(x1470))));
evalcond[4]=((((cj17)*(cj18)*(x1459)))+(((sj17)*(x1464)))+(((cj17)*(sj13)*(x1461)))+(((r12)*(x1460)))+(((IkReal(-1.00000000000000))*(cj17)*(x1457)*(x1458)))+(x1469)+(x1471)+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x1466))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj16)*(x1468)))+(((IkReal(-1.00000000000000))*(x1464)*(x1465)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1465)))+(((x1460)*(x1461)))+(((cj15)*(x1467)))+(((IkReal(-1.00000000000000))*(r11)*(x1458)*(x1460)))+(((cj18)*(sj17)*(x1459)))+(((IkReal(-1.00000000000000))*(sj17)*(x1457)*(x1458))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j15array[1], cj15array[1], sj15array[1];
bool j15valid[1]={false};
_nj15 = 1;
IkReal x1472=((IkReal(4.00000000000000))*(npx));
IkReal x1473=((IkReal(4.00000000000000))*(npy));
if( IKabs(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x1473)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x1472))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1472)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1473)))+(((IkReal(-0.360000000000000))*(cj17))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x1473)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x1472)))))))+IKsqr(((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1472)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1473)))+(((IkReal(-0.360000000000000))*(cj17)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j15array[0]=IKatan2(((((IKabs(sj16) != 0)?((IkReal)1/(sj16)):(IkReal)1.0e30))*(((((IkReal(0.120000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(cj18)*(x1473)))+(((IkReal(0.380000000000000))*(cj16)))+(((IkReal(-1.00000000000000))*(sj18)*(x1472)))))), ((IkReal(-0.940000000000000))+(((IkReal(4.00000000000000))*(npz)*(sj17)))+(((cj17)*(cj18)*(x1472)))+(((IkReal(-1.00000000000000))*(cj17)*(sj18)*(x1473)))+(((IkReal(-0.360000000000000))*(cj17)))));
sj15array[0]=IKsin(j15array[0]);
cj15array[0]=IKcos(j15array[0]);
if( j15array[0] > IKPI )
{
    j15array[0]-=IK2PI;
}
else if( j15array[0] < -IKPI )
{    j15array[0]+=IK2PI;
}
j15valid[0] = true;
for(int ij15 = 0; ij15 < 1; ++ij15)
{
if( !j15valid[ij15] )
{
    continue;
}
_ij15[0] = ij15; _ij15[1] = -1;
for(int iij15 = ij15+1; iij15 < 1; ++iij15)
{
if( j15valid[iij15] && IKabs(cj15array[ij15]-cj15array[iij15]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij15]-sj15array[iij15]) < IKFAST_SOLUTION_THRESH )
{
    j15valid[iij15]=false; _ij15[1] = iij15; break; 
}
}
j15 = j15array[ij15]; cj15 = cj15array[ij15]; sj15 = sj15array[ij15];
{
IkReal evalcond[3];
IkReal x1474=IKsin(j15);
IkReal x1475=((npy)*(sj18));
IkReal x1476=((IkReal(1.00000000000000))*(sj17));
IkReal x1477=((cj18)*(npx));
IkReal x1478=((IkReal(0.250000000000000))*(x1474));
evalcond[0]=((((sj16)*(x1478)))+(((cj18)*(npy)))+(((IkReal(-0.0300000000000000))*(sj16)))+(((npx)*(sj18)))+(((IkReal(-0.0950000000000000))*(cj16))));
evalcond[1]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(-1.00000000000000))*(npz)*(x1476)))+(((cj17)*(x1475)))+(((IkReal(-1.00000000000000))*(cj17)*(x1477)))+(((IkReal(0.250000000000000))*(IKcos(j15)))));
evalcond[2]=((((IkReal(-0.0950000000000000))*(sj16)))+(((IkReal(-1.00000000000000))*(x1476)*(x1477)))+(((IkReal(0.0300000000000000))*(cj16)))+(((IkReal(0.0900000000000000))*(sj17)))+(((sj17)*(x1475)))+(((cj17)*(npz)))+(((IkReal(-1.00000000000000))*(cj16)*(x1478))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15))))));
dummyeval[0]=((((sj16)*((cj15)*(cj15))))+(((sj16)*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1479=((IkReal(1.00000000000000))*(sj13));
IkReal x1480=((r10)*(sj18));
IkReal x1481=((IkReal(1.00000000000000))*(cj18));
IkReal x1482=((cj13)*(r11));
IkReal x1483=((r01)*(sj13));
IkReal x1484=((cj13)*(r12));
IkReal x1485=((cj18)*(r00));
IkReal x1486=((npy)*(sj18));
IkReal x1487=((sj17)*(sj18));
IkReal x1488=((IkReal(1.00000000000000))*(cj17));
IkReal x1489=((r00)*(sj18));
IkReal x1490=((IkReal(1.00000000000000))*(cj13));
IkReal x1491=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j16)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1481)))+(((cj17)*(x1486)))+(((IkReal(-1.00000000000000))*(npz)*(sj17))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(x1480)*(x1490)))+(((cj18)*(x1483)))+(((sj13)*(x1489))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-0.250000000000000))*(sj15)))+(((IkReal(0.0900000000000000))*(sj17)))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1481)))+(((cj17)*(npz)))+(((sj17)*(x1486))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1481)))+(((IkReal(-1.00000000000000))*(x1479)*(x1480)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1479)))+(((IkReal(-1.00000000000000))*(x1489)*(x1490))));
evalcond[7]=((((IkReal(-1.00000000000000))*(sj18)*(x1482)*(x1488)))+(((IkReal(-1.00000000000000))*(cj17)*(x1479)*(x1485)))+(((cj17)*(x1491)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1479)))+(((cj17)*(sj18)*(x1483)))+(((sj17)*(x1484))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1484)*(x1488)))+(((cj17)*(r02)*(sj13)))+(((x1483)*(x1487)))+(((IkReal(-1.00000000000000))*(x1482)*(x1487)))+(((IkReal(-1.00000000000000))*(sj17)*(x1479)*(x1485)))+(((sj17)*(x1491))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj15)*(cj15))))+(((IkReal(-1.00000000000000))*((sj15)*(sj15)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1492=((r21)*(sj18));
IkReal x1493=((IkReal(1.00000000000000))*(cj15));
IkReal x1494=((r22)*(sj17));
IkReal x1495=((sj15)*(sj17));
IkReal x1496=((cj18)*(r20));
IkReal x1497=((IkReal(1.00000000000000))*(sj15));
IkReal x1498=((cj17)*(sj15));
IkReal x1499=((cj15)*(cj17));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1496)*(x1497)))+(((IkReal(-1.00000000000000))*(x1494)*(x1497)))+(((IkReal(-1.00000000000000))*(sj17)*(x1493)*(x1496)))+(((x1492)*(x1498)))+(((cj15)*(sj17)*(x1492)))+(((r22)*(x1499))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((cj15)*(x1494)))+(((IkReal(-1.00000000000000))*(cj17)*(x1492)*(x1493)))+(((x1496)*(x1499)))+(((x1492)*(x1495)))+(((IkReal(-1.00000000000000))*(x1495)*(x1496)))+(((r22)*(x1498))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(cj17)*(x1496)*(x1497)))+(((IkReal(-1.00000000000000))*(x1494)*(x1497)))+(((IkReal(-1.00000000000000))*(sj17)*(x1493)*(x1496)))+(((x1492)*(x1498)))+(((cj15)*(sj17)*(x1492)))+(((r22)*(x1499)))))), ((gconst16)*(((((cj15)*(x1494)))+(((IkReal(-1.00000000000000))*(cj17)*(x1492)*(x1493)))+(((x1496)*(x1499)))+(((x1492)*(x1495)))+(((IkReal(-1.00000000000000))*(x1495)*(x1496)))+(((r22)*(x1498)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1500=IKsin(j14);
IkReal x1501=IKcos(j14);
IkReal x1502=((cj17)*(sj18));
IkReal x1503=((IkReal(1.00000000000000))*(sj17));
IkReal x1504=((cj18)*(r20));
IkReal x1505=((sj13)*(sj17));
IkReal x1506=((cj18)*(r10));
IkReal x1507=((cj13)*(r02));
IkReal x1508=((cj13)*(r01));
IkReal x1509=((sj17)*(sj18));
IkReal x1510=((IkReal(1.00000000000000))*(cj17));
IkReal x1511=((cj15)*(x1500));
IkReal x1512=((sj15)*(x1501));
IkReal x1513=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1514=((sj15)*(x1500));
IkReal x1515=((cj13)*(cj18)*(r00));
IkReal x1516=((cj15)*(x1501));
IkReal x1517=((x1511)+(x1512));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1503)))+(((IkReal(-1.00000000000000))*(x1504)*(x1510)))+(((IkReal(-1.00000000000000))*(x1516)))+(x1514)+(((r21)*(x1502))));
evalcond[1]=((((cj17)*(r22)))+(x1517)+(((r21)*(x1509)))+(((IkReal(-1.00000000000000))*(x1503)*(x1504))));
evalcond[2]=((((cj17)*(x1515)))+(((r12)*(x1505)))+(x1517)+(((IkReal(-1.00000000000000))*(x1502)*(x1513)))+(((cj17)*(sj13)*(x1506)))+(((sj17)*(x1507)))+(((IkReal(-1.00000000000000))*(x1502)*(x1508))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj18)*(x1503)*(x1508)))+(((IkReal(-1.00000000000000))*(x1514)))+(((IkReal(-1.00000000000000))*(x1507)*(x1510)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1510)))+(x1516)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1503)))+(((x1505)*(x1506)))+(((sj17)*(x1515))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1518=((IkReal(1.00000000000000))*(sj13));
IkReal x1519=((r10)*(sj18));
IkReal x1520=((IkReal(1.00000000000000))*(cj18));
IkReal x1521=((cj13)*(r11));
IkReal x1522=((r01)*(sj13));
IkReal x1523=((cj13)*(r12));
IkReal x1524=((cj18)*(r00));
IkReal x1525=((npy)*(sj18));
IkReal x1526=((sj17)*(sj18));
IkReal x1527=((IkReal(1.00000000000000))*(cj17));
IkReal x1528=((r00)*(sj18));
IkReal x1529=((IkReal(1.00000000000000))*(cj13));
IkReal x1530=((cj13)*(cj18)*(r10));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j16, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0950000000000000))+(((cj18)*(npy)))+(((npx)*(sj18))));
evalcond[2]=((((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[3]=((IkReal(0.235000000000000))+(((IkReal(0.0900000000000000))*(cj17)))+(((IkReal(0.250000000000000))*(cj15)))+(((IkReal(-1.00000000000000))*(cj17)*(npx)*(x1520)))+(((IkReal(-1.00000000000000))*(npz)*(sj17)))+(((cj17)*(x1525))));
evalcond[4]=((IkReal(-1.00000000000000))+(((cj18)*(x1522)))+(((IkReal(-1.00000000000000))*(x1519)*(x1529)))+(((sj13)*(x1528)))+(((IkReal(-1.00000000000000))*(x1520)*(x1521))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((IkReal(-1.00000000000000))*(npx)*(sj17)*(x1520)))+(((IkReal(0.0900000000000000))*(sj17)))+(((cj17)*(npz)))+(((sj17)*(x1525)))+(((IkReal(0.250000000000000))*(sj15))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1518)*(x1519)))+(((IkReal(-1.00000000000000))*(x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(cj13)*(r01)*(x1520)))+(((IkReal(-1.00000000000000))*(cj18)*(r11)*(x1518))));
evalcond[7]=((((cj17)*(sj18)*(x1522)))+(((IkReal(-1.00000000000000))*(cj17)*(x1518)*(x1524)))+(((IkReal(-1.00000000000000))*(sj18)*(x1521)*(x1527)))+(((IkReal(-1.00000000000000))*(r02)*(sj17)*(x1518)))+(((sj17)*(x1523)))+(((cj17)*(x1530))));
evalcond[8]=((((x1522)*(x1526)))+(((cj17)*(r02)*(sj13)))+(((IkReal(-1.00000000000000))*(x1521)*(x1526)))+(((IkReal(-1.00000000000000))*(sj17)*(x1518)*(x1524)))+(((IkReal(-1.00000000000000))*(x1523)*(x1527)))+(((sj17)*(x1530))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((cj15)*(cj15))+((sj15)*(sj15))));
dummyeval[0]=(((cj15)*(cj15))+((sj15)*(sj15)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1531=((r21)*(sj18));
IkReal x1532=((cj15)*(cj17));
IkReal x1533=((sj15)*(sj17));
IkReal x1534=((cj15)*(sj17));
IkReal x1535=((cj17)*(sj15));
IkReal x1536=((IkReal(1.00000000000000))*(cj18)*(r20));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x1531)*(x1535)))+(((cj18)*(r20)*(x1535)))+(((x1531)*(x1534)))+(((IkReal(-1.00000000000000))*(x1534)*(x1536)))+(((r22)*(x1533)))+(((r22)*(x1532))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x1532)*(x1536)))+(((x1531)*(x1533)))+(((x1531)*(x1532)))+(((IkReal(-1.00000000000000))*(r22)*(x1534)))+(((IkReal(-1.00000000000000))*(x1533)*(x1536)))+(((r22)*(x1535))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(x1531)*(x1535)))+(((cj18)*(r20)*(x1535)))+(((x1531)*(x1534)))+(((IkReal(-1.00000000000000))*(x1534)*(x1536)))+(((r22)*(x1533)))+(((r22)*(x1532)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(x1532)*(x1536)))+(((x1531)*(x1533)))+(((x1531)*(x1532)))+(((IkReal(-1.00000000000000))*(r22)*(x1534)))+(((IkReal(-1.00000000000000))*(x1533)*(x1536)))+(((r22)*(x1535)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[4];
IkReal x1537=IKsin(j14);
IkReal x1538=IKcos(j14);
IkReal x1539=((cj17)*(sj18));
IkReal x1540=((IkReal(1.00000000000000))*(sj17));
IkReal x1541=((cj18)*(r20));
IkReal x1542=((sj13)*(sj17));
IkReal x1543=((cj18)*(r10));
IkReal x1544=((cj13)*(r02));
IkReal x1545=((cj13)*(r01));
IkReal x1546=((sj17)*(sj18));
IkReal x1547=((IkReal(1.00000000000000))*(cj17));
IkReal x1548=((sj15)*(x1537));
IkReal x1549=((IkReal(1.00000000000000))*(r11)*(sj13));
IkReal x1550=((sj15)*(x1538));
IkReal x1551=((cj15)*(x1537));
IkReal x1552=((cj13)*(cj18)*(r00));
IkReal x1553=((IkReal(1.00000000000000))*(cj15)*(x1538));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x1540)))+(((r21)*(x1539)))+(x1548)+(((IkReal(-1.00000000000000))*(x1553)))+(((IkReal(-1.00000000000000))*(x1541)*(x1547))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1550)))+(((IkReal(-1.00000000000000))*(x1551)))+(((IkReal(-1.00000000000000))*(x1540)*(x1541)))+(((cj17)*(r22)))+(((r21)*(x1546))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1539)*(x1545)))+(((sj17)*(x1544)))+(((cj17)*(sj13)*(x1543)))+(((r12)*(x1542)))+(((cj17)*(x1552)))+(x1551)+(x1550)+(((IkReal(-1.00000000000000))*(x1539)*(x1549))));
evalcond[3]=((((sj17)*(x1552)))+(((IkReal(-1.00000000000000))*(sj18)*(x1540)*(x1545)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1547)))+(x1548)+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(sj18)*(x1540)))+(((IkReal(-1.00000000000000))*(x1553)))+(((IkReal(-1.00000000000000))*(x1544)*(x1547)))+(((x1542)*(x1543))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j14array[1], cj14array[1], sj14array[1];
bool j14valid[1]={false};
_nj14 = 1;
IkReal x1554=((sj15)*(sj16));
IkReal x1555=((r22)*(sj17));
IkReal x1556=((cj18)*(r21));
IkReal x1557=((r20)*(sj18));
IkReal x1558=((cj15)*(sj16));
IkReal x1559=((cj17)*(r21)*(sj18));
IkReal x1560=((cj17)*(cj18)*(r20));
if( IKabs(((gconst15)*(((((cj15)*(x1557)))+(((cj15)*(x1556)))+(((x1554)*(x1560)))+(((x1554)*(x1555)))+(((IkReal(-1.00000000000000))*(x1554)*(x1559))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(x1555)*(x1558)))+(((x1558)*(x1559)))+(((IkReal(-1.00000000000000))*(x1558)*(x1560)))+(((sj15)*(x1557)))+(((sj15)*(x1556))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j14array[0]=IKatan2(((gconst15)*(((((cj15)*(x1557)))+(((cj15)*(x1556)))+(((x1554)*(x1560)))+(((x1554)*(x1555)))+(((IkReal(-1.00000000000000))*(x1554)*(x1559)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(x1555)*(x1558)))+(((x1558)*(x1559)))+(((IkReal(-1.00000000000000))*(x1558)*(x1560)))+(((sj15)*(x1557)))+(((sj15)*(x1556)))))));
sj14array[0]=IKsin(j14array[0]);
cj14array[0]=IKcos(j14array[0]);
if( j14array[0] > IKPI )
{
    j14array[0]-=IK2PI;
}
else if( j14array[0] < -IKPI )
{    j14array[0]+=IK2PI;
}
j14valid[0] = true;
for(int ij14 = 0; ij14 < 1; ++ij14)
{
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
for(int iij14 = ij14+1; iij14 < 1; ++iij14)
{
if( j14valid[iij14] && IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH )
{
    j14valid[iij14]=false; _ij14[1] = iij14; break; 
}
}
j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];
{
IkReal evalcond[6];
IkReal x1561=IKsin(j14);
IkReal x1562=IKcos(j14);
IkReal x1563=((IkReal(1.00000000000000))*(cj18));
IkReal x1564=((cj13)*(r01));
IkReal x1565=((IkReal(1.00000000000000))*(sj18));
IkReal x1566=((cj13)*(r00));
IkReal x1567=((sj13)*(sj17));
IkReal x1568=((cj18)*(r10));
IkReal x1569=((r21)*(sj18));
IkReal x1570=((IkReal(1.00000000000000))*(sj16));
IkReal x1571=((cj13)*(r02));
IkReal x1572=((IkReal(1.00000000000000))*(cj17));
IkReal x1573=((sj13)*(x1565));
IkReal x1574=((cj16)*(x1562));
IkReal x1575=((sj15)*(x1561));
IkReal x1576=((cj15)*(x1561));
IkReal x1577=((cj15)*(x1562));
IkReal x1578=((sj15)*(x1562));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1570)*(x1576)))+(((IkReal(-1.00000000000000))*(x1570)*(x1578)))+(((r20)*(sj18)))+(((cj18)*(r21))));
evalcond[1]=((((cj17)*(x1569)))+(((IkReal(-1.00000000000000))*(r22)*(sj17)))+(x1575)+(((IkReal(-1.00000000000000))*(cj17)*(r20)*(x1563)))+(((IkReal(-1.00000000000000))*(x1577))));
evalcond[2]=((((sj15)*(x1574)))+(((IkReal(-1.00000000000000))*(r20)*(sj17)*(x1563)))+(((sj17)*(x1569)))+(((cj16)*(x1576)))+(((cj17)*(r22))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1565)*(x1566)))+(((IkReal(-1.00000000000000))*(r11)*(sj13)*(x1563)))+(((sj16)*(x1575)))+(((IkReal(-1.00000000000000))*(x1570)*(x1577)))+(((IkReal(-1.00000000000000))*(x1563)*(x1564)))+(((IkReal(-1.00000000000000))*(r10)*(x1573))));
evalcond[4]=((((sj17)*(x1571)))+(((IkReal(-1.00000000000000))*(cj17)*(r11)*(x1573)))+(((cj17)*(sj13)*(x1568)))+(((r12)*(x1567)))+(((IkReal(-1.00000000000000))*(cj17)*(x1564)*(x1565)))+(x1578)+(x1576)+(((cj17)*(cj18)*(x1566))));
evalcond[5]=((((x1567)*(x1568)))+(((IkReal(-1.00000000000000))*(x1571)*(x1572)))+(((cj18)*(sj17)*(x1566)))+(((IkReal(-1.00000000000000))*(r12)*(sj13)*(x1572)))+(((cj15)*(x1574)))+(((IkReal(-1.00000000000000))*(r11)*(x1565)*(x1567)))+(((IkReal(-1.00000000000000))*(cj16)*(x1575)))+(((IkReal(-1.00000000000000))*(sj17)*(x1564)*(x1565))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j13;
vinfos[0].indices[0] = _ij13[0];
vinfos[0].indices[1] = _ij13[1];
vinfos[0].maxsolutions = _nj13;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j14;
vinfos[1].indices[0] = _ij14[0];
vinfos[1].indices[1] = _ij14[1];
vinfos[1].maxsolutions = _nj14;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j15;
vinfos[2].indices[0] = _ij15[0];
vinfos[2].indices[1] = _ij15[1];
vinfos[2].maxsolutions = _nj15;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j16;
vinfos[3].indices[0] = _ij16[0];
vinfos[3].indices[1] = _ij16[1];
vinfos[3].maxsolutions = _nj16;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j17;
vinfos[4].indices[0] = _ij17[0];
vinfos[4].indices[1] = _ij17[1];
vinfos[4].maxsolutions = _nj17;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j18;
vinfos[5].indices[0] = _ij18[0];
vinfos[5].indices[1] = _ij18[1];
vinfos[5].maxsolutions = _nj18;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "6ae340c030bbcafef0b4ade1584cc3c4"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE

int ik_solve(IkReal eerot[9], IkReal eetrans[3], std::vector<std::vector<IkReal> >& sol_joint, std::vector<IkReal> free_joint)
{
    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
	for(std::size_t i = 0; i < vfree.size(); ++i)
		vfree[i] = free_joint[i];
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        return -1;
    }

	sol_joint.resize(solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
		sol_joint[i].resize(solvalues.size());
        for( std::size_t j = 0; j < solvalues.size(); ++j)
			sol_joint[i][j] = solvalues[j];
    }
    return 0;
}

} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_LEFT6D_NAMESPACE
using namespace IKFAST_LEFT6D_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
